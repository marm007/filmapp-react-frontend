{"version":3,"sources":["components/pages/profile/reducer.js","components/pages/profile/index.js","components/models/playlist/index.js","images/image_not_found.png","../node_modules/core-js/modules/esnext.promise.all-settled.js","../node_modules/core-js/modules/es.promise.all-settled.js"],"names":["initialProfileState","data","isLoading","isAllFetched","isRemoving","toRemove","error","filmsCount","playlistsCount","profileReducer","state","action","type","fieldName","payload","isInitialLoaded","pageMaxFetchCount","Set","filter","resource","id","map","isPlaylist","is_public","Profile","useContext","UserContext","user","clearUser","RemoveModalContext","showModal","clear","removeModalData","history","useHistory","useReducer","dispatch","handleProfileOnBottom","useCallback","useBottomScrollListener","triggerOnNoScroll","useEffect","auth","replace","process","push","a","Promise","allSettled","userApi","skipFilms","skipPlaylists","limit","pageInitialMaxFetchCount","response","films","playlists","status","value","film","img","playlist","image","film_id","image_not_found","length","fetchInitialData","fetchData","playlistApi","filmApi","console","title","remove","handleRemove","e","stopPropagation","className","record","index","isProfile","dispatchPrivacyUpdate","handleRedirect","pathname","search","handleRedirectPlaylist","Array","_","Playlist","useState","style","setStyle","onClick","icon","line","text","isPublic","author_name","require","$","aFunction","newPromiseCapabilityModule","perform","iterate","target","stat","iterable","C","this","capability","f","resolve","reject","result","promiseResolve","values","counter","remaining","promise","alreadyCalled","undefined","call","then","reason"],"mappings":"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","file":"static/js/17.a4f7fc40.chunk.js","sourcesContent":["import { pageMaxFetchCount } from \"../../../config\"\r\n\r\nexport const initialProfileState = {\r\n    data: null,\r\n    isLoading: false,\r\n    isAllFetched: false,\r\n    isRemoving: false,\r\n    toRemove: null,\r\n    error: null,\r\n    filmsCount: 0,\r\n    playlistsCount: 0,\r\n}\r\n\r\nexport function profileReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'field': {\r\n            return {\r\n                ...state,\r\n                [action.fieldName]: action.payload\r\n            }\r\n        }\r\n        case 'initial-success': {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isInitialLoaded: true,\r\n                isAllFetched: action.filmsCount < pageMaxFetchCount && action.playlistsCount < pageMaxFetchCount,\r\n                filmsCount: state.filmsCount + action.filmsCount,\r\n                playlistsCount: state.playlistsCount + action.playlistsCount,\r\n                data: [...new Set(action.data)]\r\n            }\r\n        }\r\n        case 'load': {\r\n            return !state.isLoading && !state.isAllFetched && state.isInitialLoaded && !state.error ?\r\n                { ...state, isLoading: true, isAllFetched: false } :\r\n                state\r\n        }\r\n        case 'success': {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAllFetched: action.filmsCount < pageMaxFetchCount && action.playlistsCount < pageMaxFetchCount,\r\n                filmsCount: state.filmsCount + action.filmsCount,\r\n                playlistsCount: state.playlistsCount + action.playlistsCount,\r\n                data: [...new Set([...state.data, ...action.data])]\r\n            }\r\n        }\r\n        case 'remove': {\r\n            return {\r\n                ...state,\r\n                toRemove: action.payload,\r\n                isRemoving: true\r\n            }\r\n        }\r\n        case 'remove-success': {\r\n            return {\r\n                ...state,\r\n                isRemoving: false,\r\n                toRemove: null,\r\n                data: state.toRemove ? state.data.filter(resource => resource.id !== state.toRemove.id) : state.data\r\n            }\r\n        }\r\n        case 'change-playlist-privacy-success': {\r\n            return {\r\n                ...state,\r\n                data: state.data.map(data => {\r\n                    if (data.isPlaylist && data.id === action.payload.id) return { ...data, is_public: action.payload.is_public }\r\n                    return data\r\n                })\r\n            }\r\n        }\r\n        case 'clear': {\r\n            return initialProfileState\r\n        }\r\n        default: return state\r\n    }\r\n}","import React, { useEffect, useReducer, useCallback, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { initialProfileState, profileReducer } from './reducer';\r\n\r\nimport Film from '../../models/film';\r\nimport Playlist from '../../models/playlist';\r\n\r\nimport * as userApi from '../../../services/userService'\r\nimport * as playlistApi from '../../../services/playlistService'\r\nimport * as filmApi from '../../../services/filmService'\r\n\r\nimport { pageInitialMaxFetchCount, pageMaxFetchCount } from '../../../config';\r\n\r\nimport UserContext from '../../../helpers/contexts/user/userContext';\r\nimport RemoveModalContext from '../../../helpers/contexts/removeModal/removeModalContext';\r\nimport useBottomScrollListener from '../../../helpers/hooks/useBottomScrollListener';\r\n\r\nimport image_not_found from '../../../images/image_not_found.png'; // Tell Webpack this JS file uses this image\r\nimport Skeleton from '../../models/film/skeleton'\r\nimport 'core-js/modules/esnext.promise.all-settled'\r\n\r\nconst Profile = () => {\r\n\r\n    const { user, clearUser } = useContext(UserContext)\r\n\r\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\r\n\r\n    let history = useHistory()\r\n\r\n    const [state, dispatch] = useReducer(profileReducer, initialProfileState)\r\n    const { data, isLoading, isAllFetched, isInitialLoaded, error, isRemoving, toRemove, filmsCount, playlistsCount } = state\r\n\r\n    const handleProfileOnBottom = useCallback(() => {\r\n        if (!isLoading && !isAllFetched && isInitialLoaded && !error) {\r\n            dispatch({\r\n                type: 'load'\r\n            })\r\n        }\r\n    }, [isLoading, isAllFetched, isInitialLoaded, error])\r\n\r\n    useBottomScrollListener(handleProfileOnBottom, { triggerOnNoScroll: true })\r\n\r\n    useEffect(() => {\r\n        if (!user.auth && user.isInitialLoaded) {\r\n            history.replace(`${process.env.REACT_APP_PATH_NAME}`)\r\n            history.push(`${process.env.REACT_APP_PATH_NAME}login`)\r\n            clearUser()\r\n        }\r\n    }, [user, history, clearUser])\r\n\r\n    useEffect(() => {\r\n        async function fetchInitialData() {\r\n\r\n            const [response] = await Promise.allSettled([\r\n                userApi.me({ skipFilms: 0, skipPlaylists: 0, limit: pageInitialMaxFetchCount })\r\n            ])\r\n\r\n            let data = []\r\n\r\n            let films = []\r\n            let playlists = []\r\n\r\n            if (response.status === \"fulfilled\") {\r\n                films = response.value.data.films.map(film => {\r\n                    return {\r\n                        ...film,\r\n                        img: `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`,\r\n\r\n                    }\r\n                })\r\n\r\n                playlists = response.value.data.playlists.map(playlist => {\r\n                    const image = playlist.film_id ?\r\n                        `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail` :\r\n                        image_not_found\r\n                    return {\r\n                        ...playlist,\r\n                        img: image,\r\n                        isPlaylist: true\r\n\r\n                    }\r\n                })\r\n\r\n                data = [...data, ...films, ...playlists]\r\n            }\r\n\r\n            dispatch({\r\n                type: 'initial-success',\r\n                data: data,\r\n                filmsCount: films.length,\r\n                playlistsCount: playlists.length,\r\n            })\r\n        }\r\n\r\n        dispatch({ type: 'clear' })\r\n        fetchInitialData()\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const [response] = await Promise.allSettled([\r\n                userApi.me({ skipFilms: filmsCount, skipPlaylists: playlistsCount, limit: pageMaxFetchCount })\r\n            ])\r\n\r\n            let data = []\r\n\r\n            let films = []\r\n            let playlists = []\r\n\r\n            if (response.status === \"fulfilled\") {\r\n                films = response.value.data.films.map(film => {\r\n                    return {\r\n                        ...film,\r\n                        img: `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`,\r\n\r\n                    }\r\n                })\r\n\r\n                playlists = response.value.data.playlists.map(playlist => {\r\n                    const image = playlist.film_id ?\r\n                        `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail` :\r\n                        image_not_found\r\n                    return {\r\n                        ...playlist,\r\n                        img: image,\r\n                        isPlaylist: true\r\n\r\n                    }\r\n                })\r\n\r\n                data = [...data, ...films, ...playlists]\r\n            }\r\n\r\n            dispatch({\r\n                type: 'success',\r\n                data: data,\r\n                filmsCount: films.length,\r\n                playlistsCount: playlists.length,\r\n            })\r\n        }\r\n\r\n        if (isLoading && isInitialLoaded) fetchData()\r\n    }, [filmsCount, isLoading, playlistsCount, isInitialLoaded])\r\n\r\n    useEffect(() => {\r\n        async function remove() {\r\n\r\n            try {\r\n                if (toRemove.isPlaylist) {\r\n                    const resPlaylist = await playlistApi.remove(toRemove.id)\r\n                    if (resPlaylist.status === 204) {\r\n                        dispatch({\r\n                            type: 'remove-success'\r\n                        })\r\n                        clear()\r\n                    }\r\n                } else {\r\n                    const resFilm = await filmApi.remove(toRemove.id)\r\n                    if (resFilm.status === 204) {\r\n                        dispatch({\r\n                            type: 'remove-success'\r\n                        })\r\n                        clear()\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                console.error(err)\r\n            }\r\n        }\r\n        if (isRemoving && removeModalData.isRemoving && toRemove &&\r\n            removeModalData.id === toRemove.id && removeModalData.title === toRemove.title &&\r\n            removeModalData.type === (toRemove.isPlaylist ? 'playlist' : 'film')) remove()\r\n    }, [isRemoving, removeModalData, toRemove, clear])\r\n\r\n    const handleRemove = (e, resource) => {\r\n        e.stopPropagation()\r\n        if (removeModalData.isRemoving) return\r\n        dispatch({\r\n            type: 'remove',\r\n            payload: resource\r\n        })\r\n        showModal(resource.id, resource.isPlaylist ? 'playlist' : 'film', resource.title)\r\n    };\r\n\r\n    const handleRedirectFilm = (id) => {\r\n        history.push({ pathname: `${process.env.REACT_APP_PATH_NAME}film/` + id });\r\n    }\r\n\r\n    const handleRedirectPlaylist = (record) => {\r\n        if (!record.film_id) return\r\n        history.push({\r\n            pathname: `${process.env.REACT_APP_PATH_NAME}film/` + record.film_id,\r\n            search: `?list=${record.id}`\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-5 mx-2\">\r\n            {\r\n                data ? data.map((record, index) => {\r\n                    if (record.isPlaylist) {\r\n                        return <Playlist key={record.id}\r\n                            playlist={record} index={index}\r\n                            isProfile={true}\r\n                            dispatchPrivacyUpdate={dispatch}\r\n                            handleRedirect={() => handleRedirectPlaylist(record)}\r\n                            handleRemove={(e) => handleRemove(e, record)} />\r\n                    } else {\r\n                        return <Film key={record.id} isProfile={true}\r\n                            film={record} index={index}\r\n                            handleRedirect={() => handleRedirectFilm(record.id)}\r\n                            handleRemove={(e) => handleRemove(e, record)} />\r\n                    }\r\n                })  : ([...Array(20)].map((_, index) => (\r\n                        <Skeleton key={index} />\r\n                    )))\r\n            }\r\n\r\n            {\r\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\r\n                    {\r\n                        (isLoading) &&\r\n                        <div className=\"spinner-border\" />\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport TextTruncate from \"react-text-truncate\";\r\nimport BlurredImageComponent from \"../blurredImage\";\r\nimport RemoveButton from '../../buttons/remove';\r\nimport ChangePrivacyButton from '../../buttons/changePrivacy';\r\nimport EditButton from '../../buttons/edit';\r\n\r\nconst Playlist = ({ playlist, handleRedirect, handleRemove, isProfile, dispatchPrivacyUpdate }) => {\r\n\r\n    const colWidth = isProfile ? 8 : 10\r\n\r\n    const [style, setStyle] = useState(\"mb-4 play-outer-container remove-container\")\r\n\r\n    useEffect(() => {\r\n        if (!playlist.film_id) setStyle(\"mb-4 play-cursor-default remove-container\")\r\n    }, [playlist.film_id])\r\n\r\n\r\n    return (\r\n        <div className=\"col-12 col-sm-6 col-md-3 col-lg-2 container-px\"\r\n            key={playlist.id}>\r\n            <div className={`col ${style} p-0`} onClick={() => handleRedirect(playlist.id, playlist.film_id)}>\r\n                <div className=\"play-container p-0\">\r\n                    <BlurredImageComponent\r\n                        image={playlist.img} />\r\n\r\n                    <div className=\"row play-middle w-100 m-0\">\r\n                        <div className=\"col-5 col-sm-5 pr-1 d-flex justify-content-end align-items-center\">\r\n                            <FontAwesomeIcon icon=\"play\" />\r\n                        </div>\r\n                        <div className=\"col-7 col-sm-7 pl-1 d-flex justify-content-start align-items-center\">\r\n                            <small className=\"font-weight-bold\" >Play all</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row m-0 mt-1\">\r\n                    <div className={`p-0 col ${isProfile ? 'button-ripple-div-next-width-3x' : 'col-12'}`}>\r\n                        <TextTruncate line={1} text={playlist.title}\r\n                            className=\"mb-1 mt-1 title \" />\r\n                    </div>\r\n\r\n\r\n                    {\r\n                        isProfile && <>\r\n                            <ChangePrivacyButton\r\n                                id={playlist.id}\r\n                                isPublic={playlist.is_public}\r\n                                isProfile={true}\r\n                                dispatchPrivacyUpdate={dispatchPrivacyUpdate} />\r\n                            <RemoveButton handleRemove={handleRemove} />\r\n                            <EditButton isPlaylist={true} id={playlist.id} />\r\n                        </>\r\n                    }\r\n                </div>\r\n                <p className=\"mb-0 author-nick\">\r\n                    <span>{playlist.author_name}</span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Playlist","export default __webpack_public_path__ + \"static/media/image_not_found.c4ba1e76.png\";","// TODO: Remove from `core-js@4`\nrequire('./es.promise.all-settled.js');\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\n\n// `Promise.allSettled` method\n// https://tc39.es/ecma262/#sec-promise.allsettled\n$({ target: 'Promise', stat: true }, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'fulfilled', value: value };\n          --remaining || resolve(values);\n        }, function (error) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'rejected', reason: error };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n"],"sourceRoot":""}