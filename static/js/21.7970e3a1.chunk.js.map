{"version":3,"sources":["components/helpers/film/skeleton.js","components/pages/home/reducer.js","components/pages/home/index.js"],"names":["FilmSkeleton","className","style","lineHeight","initialState","films","isLoading","isAllFetched","isInitialLoaded","error","homePageReducer","state","action","type","fieldName","payload","Set","length","pageInitialMaxFetchCount","pageMaxFetchCount","Home","useHistory","useReducer","dispatch","handleOnHomePageData","useCallback","useBottomScrollListener","triggerOnNoScroll","useEffect","a","filmApi","limit","then","res","response","data","forEach","film","img","process","id","catch","err","console","fetchData","skip","getAllFilms","Error"],"mappings":"yHAAA,sCA8BeA,IA1BM,WAIjB,OACI,sBAAKC,UAHW,6CAGhB,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,wEAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,cAAC,IAAD,CAAUA,UAAU,cAAcC,MAAO,CAAEC,WAAY,eAInE,sBAAKF,UAAU,wBAAf,UACI,qBAAKA,UAAU,UAAf,SACI,cAAC,IAAD,CAAUA,UAAU,gBAGxB,qBAAKA,UAAU,UAAf,SACI,cAAC,IAAD,CAAUA,UAAU,oB,6HCrB3BG,EAAe,CACxBC,MAAO,KACPC,WAAW,EACXC,cAAc,EACdC,iBAAiB,EACjBC,MAAO,MAGEC,EAAkB,SAACC,EAAOC,GACnC,OAAQA,EAAOC,MACX,IAAK,QACD,OAAO,2BACAF,GADP,kBAEKC,EAAOE,UAAYF,EAAOG,UAGnC,IAAK,OACD,OAAO,2BACAJ,GADP,IAEIL,WAAW,EACXC,cAAc,EACdE,MAAO,KAGf,IAAK,eACD,OAAO,2BACAE,GADP,IAEIN,MAAM,YAAK,IAAIW,IAAJ,YAAYJ,EAAOG,WAC9BT,WAAW,EACXE,iBAAiB,EACjBD,aAAcK,EAAOG,QAAQE,OAASC,MAG9C,IAAK,UACD,OAAO,2BACAP,GADP,IAEIN,MAAM,YAAK,IAAIW,IAAJ,sBAAYL,EAAMN,OAAlB,YAA4BO,EAAOG,YAC9CT,WAAW,EACXC,aAAcK,EAAOG,QAAQE,OAASE,IACtCV,MAAO,OAGf,IAAK,QACD,OAAO,2BACAE,GADP,IAEIL,WAAW,EACXC,cAAc,EACdE,MAAOG,EAAOG,UAGtB,QACI,OAAOJ,I,gDC+CJS,UApFf,WAEkBC,cAAd,IAEA,EAA0BC,qBAAWZ,EAAiBN,GAAtD,mBAAOO,EAAP,KAAcY,EAAd,KACQlB,EAAoDM,EAApDN,MAAOC,EAA6CK,EAA7CL,UAAWC,EAAkCI,EAAlCJ,aAAcC,EAAoBG,EAApBH,gBAElCgB,EAAuBC,uBAAY,WAChCnB,GAAcC,IAAgBC,GAC/Be,EAAS,CACLV,KAAM,WAGf,CAACP,EAAWC,EAAcC,IA+C7B,MA7CAkB,YAAwBF,EAAsB,CAAEG,mBAAmB,IAEnEC,qBAAU,WAAM,4CACZ,sBAAAC,EAAA,sEACUC,IAAY,CAAEC,MAAOb,MAA4Bc,MAAK,SAAAC,GACxD,IAAIC,EAAWD,EAAIE,KAEnBD,EAASE,SAAQ,SAAAC,GACbA,EAAKC,IAAL,UAAcC,0DAAd,iBAAoDF,EAAKG,GAAzD,iBAIJjB,EAAS,CACLV,KAAM,eACNE,QAASmB,OAEdO,OAAM,SAAAC,GAAG,OAAIC,QAAQlC,MAAMiC,MAblC,4CADY,uBAAC,WAAD,wBAgBZE,KACD,IAEHhB,qBAAU,WAAM,4CACZ,sBAAAC,EAAA,sEACUC,IAAY,CAAEe,KAAMxC,EAAMY,OAAQc,MAAOZ,MAC1Ca,MAAK,SAAAC,GACF,IAAIC,EAAWD,EAAIE,KAEnBD,EAASE,SAAQ,SAAAC,GACbA,EAAKC,IAAL,UAAcC,0DAAd,iBAAoDF,EAAKG,GAAzD,iBAIJjB,EAAS,CACLV,KAAM,UACNE,QAASmB,OAEdO,OAAM,SAAAC,GAAG,OAAIC,QAAQlC,MAAMiC,MAdtC,4CADY,sBAiBRpC,GAAaE,GAAmBH,GAjBvB,WAAD,wBAiB+ByC,KAC5C,CAACxC,EAAWE,EAAiBH,IAM1B,IAAI0C,MAAM","file":"static/js/21.7970e3a1.chunk.js","sourcesContent":["import Skeleton from 'react-loading-skeleton';\n\nimport '../../pages/film/film.css'\n\nconst FilmSkeleton = () => {\n\n    const normalClass = \"col mb-5 col-12 col-sm-6 col-md-3 col-lg-2\"\n\n    return (\n        <div className={normalClass}>\n            <div className=\"col-12 col-sm-12\">\n                <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                    <div className=\"ratio ratio-16x9\">\n                        <Skeleton className=\"w-100 h-100\" style={{ lineHeight: '1.5' }} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-12 col-sm-12 mt-2\">\n                <div className=\"col p-0\">\n                    <Skeleton className=\"col w-100\" />\n                </div>\n\n                <div className=\"col p-0\">\n                    <Skeleton className=\"w-100\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FilmSkeleton","import { pageInitialMaxFetchCount, pageMaxFetchCount } from \"../../../config\"\n\nexport const initialState = {\n    films: null,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    error: null,\n}\n\nexport const homePageReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'load': {\n            return {\n                ...state,\n                isLoading: true,\n                isAllFetched: false,\n                error: ''\n            }\n        }\n        case 'initial-load': { \n            return {\n                ...state,\n                films: [...new Set([...action.payload])],\n                isLoading: false,\n                isInitialLoaded: true,\n                isAllFetched: action.payload.length < pageInitialMaxFetchCount,\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                films: [...new Set([...state.films, ...action.payload])],\n                isLoading: false,\n                isAllFetched: action.payload.length < pageMaxFetchCount,\n                error: null\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                isAllFetched: false,\n                error: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}","import React, { useEffect, useReducer, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { homePageReducer, initialState } from './reducer';\n\nimport Film from '../../helpers/film'\nimport Skeleton from '../../helpers/film/skeleton';\n\nimport * as filmApi from '../../../services/filmService'\n\nimport { pageMaxFetchCount, pageInitialMaxFetchCount } from '../../../config';\n\nimport { jsxLoop } from '../../../helpers';\nimport useBottomScrollListener from '../../../helpers/hooks/useBottomScrollListener';\n\n\nfunction Home() {\n\n    let history = useHistory()\n\n    const [state, dispatch] = useReducer(homePageReducer, initialState)\n    const { films, isLoading, isAllFetched, isInitialLoaded } = state\n\n    const handleOnHomePageData = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded])\n\n    useBottomScrollListener(handleOnHomePageData, { triggerOnNoScroll: true })\n\n    useEffect(() => {\n        async function fetchData() {\n            await filmApi.all({ limit: pageInitialMaxFetchCount }).then(res => {\n                let response = res.data;\n\n                response.forEach(film => {\n                    film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`\n\n                });\n\n                dispatch({\n                    type: 'initial-load',\n                    payload: response\n                })\n            }).catch(err => console.error(err))\n        }\n        fetchData()\n    }, [])\n\n    useEffect(() => {\n        async function getAllFilms() {\n            await filmApi.all({ skip: films.length, limit: pageMaxFetchCount })\n                .then(res => {\n                    let response = res.data;\n\n                    response.forEach(film => {\n                        film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`\n\n                    });\n\n                    dispatch({\n                        type: 'success',\n                        payload: response\n                    })\n                }).catch(err => console.error(err))\n        }\n        if (isLoading && isInitialLoaded && films) getAllFilms()\n    }, [isLoading, isInitialLoaded, films])\n\n    const handleRedirect = (id) => {\n        history.push({ pathname: `${process.env.REACT_APP_PATH_NAME}film/` + id });\n    };\n\n    throw new Error('I crashed!');\n\n    return (\n        <div className=\"row mt-5 mx-2\">\n            {\n                films ? films.map((film, index) => <Film key={film.id} film={film} index={index} handleRedirect={handleRedirect} />)\n                    : [...jsxLoop(20, i =>\n                        <Skeleton key={i} />\n                    )]\n            }\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {\n                        (isLoading) &&\n                        <div className=\"spinner-border\" />\n                    }\n                </div>\n            }\n\n        </div>\n    )\n}\n\nexport default Home;\n"],"sourceRoot":""}