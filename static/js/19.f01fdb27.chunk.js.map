{"version":3,"sources":["components/pages/film/reducers/previewReducer.js","helpers/contexts/film/filmContext.js","components/pages/film/preview.js","components/pages/film/reducers/recommendationsReducer.js","components/pages/film/recommendationsSkeleton.js","components/pages/film/recommendations.js","components/pages/film/reducers/commentsReducer.js","services/commentService.js","components/pages/film/comments.js","components/pages/film/reducers/playlistReducer.js","components/pages/film/playlistContainer.js","helpers/contexts/film/filmProvider.js","components/pages/film/index.js","helpers/index.js","images/image_not_found.png"],"names":["initialPreviewState","film","img","video","title","views","likes","dislikes","description","isLiked","isDisliked","isLikeButtonClicked","likeAction","isDescExpanded","previewReducer","state","action","type","fieldName","payload","FilmContext","createContext","FilmPreview","history","useHistory","location","useLocation","id","useParams","user","useContext","UserContext","filmDispatch","playerRef","useCallback","node","getBoundingClientRect","height","setPlayerNode","useReducer","dispatch","useState","playerNode","useEffect","measure","window","addEventListener","removeEventListener","a","requests","filmApi","auth","push","userApi","details","Promise","allSettled","filmViewResponse","filmResponse","userResponse","status","filmData","value","data","process","liked","indexOf","disliked","handleGetFilm","likeResult","likeData","userResult","console","error","response","pathname","handleLike","handleTruncate","e","preventDefault","TruncateButton","className","onClick","ref","playsInline","poster","src","icon","faEye","faThumbsUp","faThumbsDown","style","whiteSpace","textAlign","line","truncateText","text","textTruncateChild","recommendationsInitialState","films","isLoading","isAllFetched","isInitialLoaded","recommendationsReducer","length","recommendationsMaxFetchCount","RecommendationsSkeleton","FilmsRecommendations","handleRedirect","isSmallScreen","useWindowsWidth","filmState","handleRecommendationsOnBottom","useBottomScrollListener","exclude","limit","preview","then","res","forEach","catch","err","isPreviewLoaded","initialLoad","skip","fetchData","map","index","isRecommendations","Array","_","commentsInitialState","comments","commentsCount","isAdding","isRemoving","toRemove","isSorting","sort","sorts","dir","commentsReducer","commentsMaxFetchCount","filter","comment","sortToChange","all","film_id","params","axios","get","remove","delete","headers","authHeader","Comments","RemoveModalContext","showModal","clear","removeModalData","handleOnCommentsBottom","getInitialComments","comments_count","commentApi","loadSortedComments","loadComments","form","post","addComment","substring","concat","removeComment","sortParams","sortComments","sortTmp","tmpSort","handleSortComments","href","role","onSubmit","handleAddComment","placeholder","onChange","target","disabled","author_name","displayCommentDate","author_id","handleRemoveComment","filmPlaylistInitialState","playlist","currentFilm","currentFilmIndex","isRemovingPlaylist","isRemovingFilm","removingFilmId","headerHeight","playerHeight","filmPlaylistReducer","filtered","findIndex","is_public","PlaylistContainer","clearPlaylist","headerRef","playlistApi","filmIndex","filmId","prototype","call","reloadPlaylist","handleReloadPlaylist","parsed","queryString","parse","search","list","handleGetPlaylist","removePlaylist","films_id","is_remove_films","removeFilm","sm","width","handleRemove","isPublic","isPlaylist","dispatchPrivacyUpdate","onYReachEnd","onScrollY","isNonExisting","fontWeight","alt","image_not_found","image","handleRemoveFromPlaylist","filmInitialState","filmReducer","FilmProvider","children","Provider","Film","onSmallScreen","useWindowWidth","historyObject","date","Date","createdAt","getDate","slice","getMonth","getFullYear","getHours","getMinutes","parseSearchDate","today","time","Math","abs","floor","UTC","handleCloseModalWindow","toSplit","replace","split"],"mappings":"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","file":"static/js/19.f01fdb27.chunk.js","sourcesContent":["const initialFilm = {\n    img: '',\n    video: '',\n    film: '',\n    title: '',\n    views: '',\n    likes: '',\n    dislikes: '',\n    description: `\\r\\n\\n\\n`,\n}\n\nexport const initialPreviewState = {\n    film: initialFilm,\n    isLiked: false,\n    isDisliked: false,\n    isLikeButtonClicked: false,\n    likeAction: null,\n    isDescExpanded: false\n}\n\nexport function previewReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'like': {\n            return {\n                ...state,\n                isLikeButtonClicked: true,\n                likeAction: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                film: action.film,\n                isLiked: action.isLiked,\n                isDisliked: action.isDisliked,\n                isLikeButtonClicked: false,\n                likeAction: null,\n                isDescExpanded: false\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLikeButtonClicked: false,\n                likeAction: null\n            }\n        }\n        default: return state\n    }\n}","import { createContext } from 'react'\nconst FilmContext = createContext();\nexport default FilmContext","import React, { useState, useEffect, useCallback, useContext, useReducer } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faThumbsDown, faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { Player } from 'video-react';\nimport TextTruncate from 'react-text-truncate';\nimport \"../../../../node_modules/video-react/dist/video-react.css\";\n\nimport { initialPreviewState, previewReducer } from './reducers/previewReducer';\n\nimport * as filmApi from '../../../services/filmService'\nimport * as userApi from '../../../services/userService'\n\nimport FilmContext from '../../../helpers/contexts/film/filmContext'\nimport UserContext from '../../../helpers/contexts/user/userContext';\nimport 'core-js/modules/esnext.promise.all-settled'\n\nconst FilmPreview = () => {\n\n    let history = useHistory()\n    let location = useLocation()\n    let { id } = useParams()\n\n    const { user } = useContext(UserContext)\n\n    // eslint-disable-next-line no-unused-vars\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const playerRef = useCallback(node => {\n        if (node !== null) {\n            filmDispatch({\n                type: 'field',\n                fieldName: 'playerHeight',\n                payload: node.getBoundingClientRect().height\n            })\n            setPlayerNode(node)\n        }\n    }, [filmDispatch])\n\n    const [state, dispatch] = useReducer(previewReducer, initialPreviewState)\n\n    const { film, isLiked, isDisliked, isLikeButtonClicked, likeAction, isDescExpanded } = state\n\n    const [playerNode, setPlayerNode] = useState(null);\n\n\n    useEffect(() => {\n        if (playerNode) {\n\n            const measure = () => {\n                filmDispatch({\n                    type: 'field',\n                    fieldName: 'playerHeight',\n                    payload: playerNode.getBoundingClientRect().height\n                })\n            }\n\n            window.addEventListener(\"resize\", measure);\n\n            return () => window.removeEventListener(\"resize\", measure);\n        }\n    }, [playerNode, filmDispatch]);\n\n    useEffect(() => {\n        async function handleGetFilm() {\n\n            let requests = [filmApi.view(id), filmApi.index(id)]\n            if (user.auth) requests.push(userApi.me({ details: true }))\n            const [filmViewResponse, filmResponse, userResponse] = await Promise.allSettled(requests);\n\n            if (filmResponse.status === \"rejected\" || filmViewResponse.status === \"rejected\") {\n                filmDispatch({\n                    type: 'field',\n                    fieldName: 'error',\n                    payload: true\n                })\n                return\n            }\n\n            const filmData = filmResponse.value.data\n\n            filmDispatch({\n                type: 'success'\n            })\n\n            const film = {\n                ...filmData,\n                img: `${process.env.REACT_APP_API_URL}films/${filmData.id}/thumbnail?width=poster`,\n                video: `${process.env.REACT_APP_API_URL}films/${filmData.id}/video`,\n                views: filmViewResponse.value.data.views\n            }\n\n            let isLiked = false\n            let isDisliked = false\n\n            if (userResponse && userResponse.status === \"fulfilled\") {\n                const details = userResponse.value.data.details\n                isLiked = details.liked.indexOf(id) > -1\n                isDisliked = details.disliked.indexOf(id) > -1\n            }\n\n            dispatch({\n                type: 'success',\n                film: film,\n                isLiked: isLiked,\n                isDisliked: isDisliked\n            })\n\n        }\n        handleGetFilm()\n    }, [id, filmDispatch, user.auth, history.location.state])\n\n    useEffect(() => {\n        async function handleLike() {\n            if (likeAction === null) return\n\n            try {\n                const likeResult = await filmApi.like(film.id, { action: likeAction })\n\n                let likeData = likeResult.data\n                likeData.img = `${process.env.REACT_APP_API_URL}films/${likeData.id}/thumbnail?width=poster`\n                likeData.video = `${process.env.REACT_APP_API_URL}films/${likeData.id}/video`\n\n                const userResult = await userApi.me({ details: true })\n                const details = userResult.data.details\n                const isLiked = details.liked.indexOf(likeData.id) > -1\n                const isDisliked = details.disliked.indexOf(likeData.id) > -1\n\n                dispatch({\n                    type: 'success',\n                    film: likeData,\n                    isLiked: isLiked,\n                    isDisliked: isDisliked\n                })\n\n            } catch (err) {\n                console.error(err)\n                dispatch({\n                    type: 'error'\n                })\n                if (err.response && err.response.status === 401) {\n                    history.push(`${location.pathname}/login`);\n                }\n            }\n        }\n\n        if (isLikeButtonClicked) handleLike()\n    }, [film.id, isLikeButtonClicked, likeAction, history, location])\n\n    const handleTruncate = (e) => {\n        e.preventDefault();\n        dispatch({\n            type: 'field',\n            fieldName: 'isDescExpanded',\n            payload: !isDescExpanded\n        })\n    }\n\n    const handleLike = (action) => {\n        if (isLikeButtonClicked) return\n        dispatch({\n            type: 'like',\n            payload: action\n        })\n\n    };\n\n    const TruncateButton = (title) => {\n        return (<span>\n            <button className=\"btn btn-link p-0 m-0 mb-1 title font-weight-bold\"\n                onClick={handleTruncate}>{title}</button>\n        </span>)\n    }\n    return (\n\n        <div className=\"p-0\">\n            <div className=\"col-12 col-sm-12 preview-margins p-0\">\n                <div ref={playerRef}>\n                    <Player\n                        playsInline\n                        poster={film.img}\n                        src={film.video} />\n                </div>\n            </div>\n            {\n                film &&\n                <div className=\"px-0\">\n                    <div className=\"col-12 col-sm-12 mt-4 p-0\">\n                        <div className=\"row p-0 m-0\">\n                            <div className=\"col-12 col-sm-12 p-0\">\n                                {!film.title && <p className=\"font-weight-bold\"><br /></p>}\n                                <p className=\"font-weight-bold\">{film.title}</p>\n                            </div>\n                            <div className=\"col-4 col-sm-4 p-0\">\n                                <p><FontAwesomeIcon icon={faEye} /> &ensp;{film.views}</p>\n                            </div>\n                            <div className=\"col-4 col-sm-4 text-right d-flex justify-content-end\">\n                                <p className={`${isLiked ? 'film-picked-thumb-color' : ''} cursor-pointer noselect`}\n                                    onClick={() => handleLike('like')}>\n                                    <FontAwesomeIcon icon={faThumbsUp} />\n                                    &ensp;{film.likes}\n                                </p>\n                            </div>\n                            <div className=\"col-4 col-sm-4 d-flex justify-content-start\">\n                                <p className={`${isDisliked ? 'film-picked-thumb-color' : ''} cursor-pointer noselect`}\n                                    onClick={() => handleLike('dislike')}>\n                                    <FontAwesomeIcon icon={faThumbsDown} />\n                                    &ensp;{film.dislikes}\n                                </p>\n                            </div>\n                            <div className=\"col-12 col-sm-12 mt-4 mb-4 divider\" />\n\n                            <div className=\"col-12 col-sm-12 p-0\" style={{ whiteSpace: 'pre-line', textAlign: 'justify' }}>\n                                <TextTruncate line={!isDescExpanded && 2}\n                                    truncateText=\"…\"\n                                    text={film.description}\n                                    textTruncateChild={TruncateButton('Show more')} />\n\n                                {isDescExpanded && TruncateButton('Show less')}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-sm-12 mt-4 mb-2 divider p-0\" />\n                </div>\n            }\n        </div>\n\n\n    )\n}\n\n\nexport default FilmPreview\n","import { recommendationsMaxFetchCount } from \"../../../../config\"\n\nexport const recommendationsInitialState = {\n    films: null,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    error: null,\n}\n\nexport function recommendationsReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'clear': {\n            return recommendationsInitialState\n        }\n        case 'initial-success': {\n            return {\n                ...recommendationsInitialState,\n                films: action.films,\n                isInitialLoaded: true\n            }\n        }\n        case 'load': {\n\n            return {\n                ...state,\n                isLoading: true,\n                isAllFetched: false\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                films: [...state.films, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < recommendationsMaxFetchCount\n            }\n        }\n        case 'error': {\n            return {\n                ...recommendationsInitialState,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}\n","import Skeleton from 'react-loading-skeleton';\n\nconst RecommendationsSkeleton = () => {\n\n\n    return (\n\n        <div className=\"col-12 mx-0 mb-4 container-px\">\n            <div className=\"row p-0 m-0\">\n                <div className='col-6 col-sm-6 m-0 p-0' >\n                    <div className=\"embed-responsive embed-responsive-16by9 p-0\">\n                        <Skeleton className=\"embed-responsive-item w-100 h-100 p-0\" />\n                    </div>\n                </div>\n                <div className='col-6 col-sm-6 m-0'>\n                    <div className=\"row m-0 h-25\">\n                        <div className=\"col p-0 w-100 h-100\">\n                            <Skeleton className=\"w-100 h-100 line-height-unset\" />\n                        </div>\n                    </div>\n                    <div className=\"pt-2 h-75\">\n                            <Skeleton className=\"w-100 h-100 line-height-unset\" />\n                        </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RecommendationsSkeleton","import React, { useEffect, useReducer, useCallback, useContext } from 'react';\n\nimport { recommendationsReducer, recommendationsInitialState } from './reducers/recommendationsReducer'\n\nimport Film from '../../models/film';\n\nimport * as filmApi from '../../../services/filmService'\n\nimport { recommendationsMaxFetchCount } from \"../../../config\"\n\nimport useBottomScrollListener from '../../../helpers/hooks/useBottomScrollListener';\nimport FilmContext from '../../../helpers/contexts/film/filmContext';\n\nimport RecommendationsSkeleton from './recommendationsSkeleton'\nimport FilmSkeleton from '../../models/film/skeleton';\n\nimport useWindowsWidth from '../../../helpers/hooks/useWindowsWidth';\nimport { useParams } from 'react-router-dom';\n\nconst FilmsRecommendations = ({ handleRedirect }) => {\n\n    let { id } = useParams()\n\n    const isSmallScreen = useWindowsWidth(768);\n\n    // eslint-disable-next-line no-unused-vars\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(recommendationsReducer, recommendationsInitialState)\n\n    const { films, isLoading, isAllFetched, isInitialLoaded, error } = state\n\n\n    const handleRecommendationsOnBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded && !error && id) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded, error, id])\n\n    useBottomScrollListener(handleRecommendationsOnBottom)\n\n    useEffect(() => {\n        async function initialLoad() {\n            await filmApi.all({ exclude: id, limit: recommendationsMaxFetchCount, preview: true })\n                .then(res => {\n                    let films = res.data;\n\n                    films.forEach(film => {\n                        film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`\n\n                    });\n\n                    dispatch({\n                        type: 'initial-success',\n                        films: films\n                    })\n\n\n                })\n                .catch(err => console.error(err))\n        }\n\n        dispatch({\n            type: 'clear'\n        })\n\n        if (filmState.isPreviewLoaded) {\n            initialLoad()\n        }\n    }, [id, filmState.isPreviewLoaded])\n\n    useEffect(() => {\n        if (filmState.error) {\n            dispatch({\n                type: 'error',\n                payload: filmState.error\n            })\n        }\n    }, [filmState.error])\n\n    useEffect(() => {\n        async function fetchData() {\n            await filmApi.all({ exclude: id, skip: films.length, limit: recommendationsMaxFetchCount, preview: true }).then(res => {\n                let films = res.data;\n\n                films.forEach(film => {\n                    film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`\n\n                });\n\n                dispatch({\n                    type: 'success',\n                    payload: films\n                })\n            }).catch(err => console.error(err))\n        }\n        if (isLoading && films && id) fetchData()\n    }, [isLoading, id, films])\n\n\n    return (\n\n        <div className=\"row m-0\">\n\n            {\n                films ? films.map((film, index) => <Film key={film.id} film={film}\n                    index={index} isRecommendations={true} filmDispatch={filmDispatch}\n                    handleRedirect={() => handleRedirect(film)} />)\n                    : ([...Array(20)].map((_, index) => isSmallScreen ?\n                        (<FilmSkeleton key={index} isRecommendations={true} />) :\n                        (<RecommendationsSkeleton key={index} />)\n                    ))\n            }\n\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {(isLoading) && !error && <div className=\"spinner-border\" />}\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default FilmsRecommendations\n","import { commentsMaxFetchCount } from \"../../../../config\"\n\nexport const commentsInitialState = {\n    comments: null,\n    commentsCount: null,\n    text: '',\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    isAdding: false,\n    isRemoving: false,\n    toRemove: null,\n    isSorting: false,\n    sort: null,\n    sorts: [\n        { id: 'created_at', title: 'By date', dir: 1 },\n        { id: 'author_name', title: 'By author name', dir: 1 }\n    ],\n    error: null\n}\n\nexport function commentsReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'clear': {\n            return {\n                ...commentsInitialState\n            }\n        }\n        case 'load': {\n            return !state.isLoading && !state.isAllFetched && state.isInitialLoaded && !state.isAdding &&\n                !state.error && !state.isSorting ?\n                {\n                    ...state,\n                    isLoading: true\n                } : state\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                comments: action.comments,\n                commentsCount: action.commentsCount,\n                isAllFetched: action.comments.length < commentsMaxFetchCount,\n                isInitialLoaded: true,\n                error: null,\n            }\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                comments: [...state.comments, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < commentsMaxFetchCount\n            }\n        }\n        case 'add': {\n            return {\n                ...state,\n                isAdding: true,\n                error: null\n            }\n        }\n        case 'add-success': {\n            return {\n                ...state,\n                text: '',\n                commentsCount: state.commentsCount + 1,\n                comments: [action.payload, ...state.comments],\n                isAdding: false\n            }\n        }\n        case 'remove': {\n            return {\n                ...state,\n                isRemoving: true,\n                toRemove: action.payload\n            }\n        }\n        case 'remove-success': {\n            return {\n                ...state,\n                isRemoving: false,\n                toRemove: null,\n                commentsCount: state.commentsCount - 1,\n                comments: state.toRemove ? state.comments.filter(comment => comment.id !== state.toRemove.id) : state.data\n            }\n        }\n        case 'sort': {\n            return {\n                ...state,\n                comments: null,\n                isAllFetched: false,\n                sorts: state.sorts.map(sort => {\n                    if (sort.id === action.sortToChange.id) return action.sortToChange\n                    else return sort\n                }),\n                sort: action.sort,\n                isSorting: true,\n            }\n        }\n        case 'sort-success': {\n            return {\n                ...state,\n                isSorting: false,\n                comments: action.payload,\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isAdding: false,\n                isLoading: false,\n                isSorting: false,\n                error: action.payload,\n            }\n        }\n        default: return state\n    }\n}","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const all = (film_id, params) => axios.get(`films/${film_id}/comments`, { params })\n\nexport const create = (film_id, form) => axios.post(`films/${film_id}/comments`, form, { headers: authHeader() })\n\nexport const update = (id, update) => axios.put(`comments/${id}`, update, { headers: authHeader() })\n\nexport const remove = (id) => axios.delete(`comments/${id}`, { headers: authHeader() })\n\nexport const sort = (film_id, params) => axios.get(`films/${film_id}/comments/sort`, { params, headers: authHeader() })\n\n\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useContext, useEffect, useReducer, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { commentsReducer, commentsInitialState } from './reducers/commentsReducer';\n\nimport * as commentApi from '../../../services/commentService'\nimport * as filmApi from '../../../services/filmService'\n\nimport { commentsMaxFetchCount } from \"../../../config\"\n\nimport { displayCommentDate } from '../../../helpers';\nimport useBottomScrollListener from '../../../helpers/hooks/useBottomScrollListener';\nimport UserContext from '../../../helpers/contexts/user/userContext';\nimport FilmContext from '../../../helpers/contexts/film/filmContext';\nimport RemoveModalContext from '../../../helpers/contexts/removeModal/removeModalContext';\nimport RippleButton from '../../buttons/ripple';\nimport { useParams } from 'react-router-dom';\n\nconst Comments = () => {\n\n    let { id } = useParams()\n\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\n\n    const { user } = useContext(UserContext);\n\n    // eslint-disable-next-line no-unused-vars\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(commentsReducer, commentsInitialState)\n    const {\n        comments,\n        commentsCount,\n        text,\n        isInitialLoaded,\n        isLoading,\n        isAllFetched,\n        isAdding,\n        isRemoving,\n        toRemove,\n        isSorting,\n        sort,\n        sorts,\n        error\n    } = state\n\n    const handleOnCommentsBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded && !isAdding && !error && id && !isSorting) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded, isAdding, error, id, isSorting])\n\n    useBottomScrollListener(handleOnCommentsBottom)\n\n    useEffect(() => {\n        if (filmState.error) {\n            dispatch({\n                type: 'error',\n                payload: filmState.error\n            })\n        }\n    }, [filmState.error])\n\n    useEffect(() => {\n        const getInitialComments = async () => {\n            await filmApi.indexDetails(id)\n                .then(res => {\n                    dispatch({\n                        type: 'initial-success',\n                        comments: res.data.comments,\n                        commentsCount: res.data.comments_count,\n                    })\n                })\n                .catch(err => {\n                    console.error(err)\n                    dispatch({\n                        type: 'error',\n                        payload: 'Something went wrong!'\n                    })\n                })\n        }\n\n        if (filmState.isPreviewLoaded) getInitialComments()\n\n    }, [id, filmState.isPreviewLoaded])\n\n    useEffect(() => {\n        async function loadComments() {\n            await commentApi.all(id, { skip: comments.length, limit: commentsMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                })\n        }\n\n        async function loadSortedComments() {\n            await commentApi.sort(id, { [sort.id]: sort.dir, skip: comments.length, limit: commentsMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                })\n        }\n\n        if (isLoading && isInitialLoaded && !isAdding &&\n            comments && id && !isSorting) {\n            if (!sort) loadComments()\n            else loadSortedComments()\n        }\n\n    }, [isLoading, isAdding, id, comments, isInitialLoaded, isSorting, sort])\n\n\n    useEffect(() => {\n        const addComment = async () => {\n            const comment = { text: text }\n\n            await commentApi.create(id, comment)\n                .then(res => {\n                    dispatch({\n                        type: 'add-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error',\n                        payload: err.response.status\n                    })\n                })\n        };\n        if (isAdding && !isLoading && id) addComment()\n    }, [isAdding, isLoading, id, text])\n\n    useEffect(() => {\n        async function removeComment() {\n            await commentApi.remove(toRemove.id)\n                .then(res => {\n                    dispatch({ type: 'remove-success' })\n                    clear()\n                })\n                .catch(err => {\n                    clear()\n                    console.error(err)\n                })\n        }\n\n        if (isRemoving && toRemove && removeModalData.isRemoving &&\n            removeModalData.id === toRemove.id && removeModalData.type === 'comment' &&\n            removeModalData.title === toRemove.text.substring(0, 10).concat('...')) removeComment()\n    }, [isRemoving, toRemove, clear, removeModalData])\n\n    useEffect(() => {\n        async function sortComments() {\n            const sortParams = sort ? { [sort.id]: sort.dir, limit: commentsMaxFetchCount } : {}\n\n            await commentApi.sort(id, sortParams)\n                .then(res => {\n                    dispatch({ type: 'sort-success', payload: res.data })\n                })\n                .catch(err => {\n                    dispatch({ type: 'error', payload: 'Sort error.' })\n                    console.error(err)\n                })\n        }\n        if (isSorting) sortComments()\n    }, [isSorting, sort, id])\n\n    const handleAddComment = (e) => {\n        e.preventDefault()\n        dispatch({\n            type: 'add'\n        })\n    }\n\n    const handleRemoveComment = (comment) => {\n        if (removeModalData.isRemoving) return\n        dispatch({ type: 'remove', payload: comment })\n        showModal(comment.id, 'comment', comment.text.substring(0, 10).concat('...'))\n    }\n\n    const handleSortComments = (e, id) => {\n        e.preventDefault()\n\n        let sortToChange = null\n\n        switch (id) {\n            case 'created_at':\n                sortToChange = sorts[0]\n\n                break;\n            case 'author_name':\n                sortToChange = sorts[1]\n                break;\n            default:\n                return;\n        }\n\n        let tmpSort = null\n\n        if (sort && sort.id === sortToChange.id) {\n            sortToChange.dir *= -1\n            tmpSort = sortToChange\n            if (sortToChange.dir === 1) {\n                tmpSort = null\n            }\n        } else {\n            tmpSort = sortToChange\n        }\n\n        dispatch({\n            type: 'sort',\n            sortToChange: sortToChange,\n            sort: tmpSort\n        })\n\n    };\n\n\n    return (\n\n        <div className=\"col p-0\">\n            <div className=\"row p-0 mt-4 mb-4\">\n                <div className=\"col-7 col-sm-5 col-md-4 d-flex align-items-center \">\n                    {commentsCount !== null && <span>{commentsCount}{commentsCount === 1 ? ' comment' : ' comments'} </span>}\n                </div>\n                <div className=\"dropdown col-2 col-sm-2\">\n                    <button className=\"btn btn-secondary dropdown-toggle\" id=\"sortDropDown\"\n                        data-toggle=\"dropdown\" aria-expanded=\"false\">\n                        Sort\n                    </button>\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"#sortDropDown\">\n                        {\n                            sorts.map(sortTmp => {\n                                return (\n                                    <li key={sortTmp.id} onClick={e => handleSortComments(e, sortTmp.id)}>\n                                        <a className={`dropdown-item${(sort && sortTmp.id === sort.id) ? ' active' : ''}`} href=\"#\" role=\"button\">\n                                            {sortTmp.title}\n                                            {sort && sort.id === sortTmp.id && sortTmp.dir === 1 ?\n                                                <FontAwesomeIcon className=\"ml-2\" icon=\"sort-up\" /> :\n                                                sort && sort.id === sortTmp.id && sortTmp.dir === -1 ?\n                                                    <FontAwesomeIcon className=\"ml-2\" icon=\"sort-down\" /> : \"\"}\n                                        </a></li>);\n                            })\n                        }\n\n                    </ul>\n                </div>\n            </div>\n            <form onSubmit={(e) => (text && !isAdding) ? handleAddComment(e) : null}>\n                <div id=\"fiordur\">\n                    <input type=\"text\" placeholder=\"Comment\" value={text}\n                        onChange={e => dispatch({ type: 'field', fieldName: 'text', payload: e.target.value })}\n                    />\n                </div>\n                <div className=\"col d-flex justify-content-end\" >\n                    <button disabled={isAdding || !text}\n                        type=\"submit\"\n                        className=\"btn btn-primary mt-3\">\n                        Submit\n                    </button>\n                </div>\n            </form>\n\n            {\n                isAdding && <div style={{ height: 32 + 'px' }} className=\"d-flex justify-content-center\">\n                    <div className=\"spinner-border\" />\n                </div>\n            }\n            {\n                comments && comments.map(comment => {\n                    return (\n                        <div className=\"col col-sm-12 p-0 mt-4 remove-container\" key={comment.id}>\n                            <div className=\"d-flex\">\n                                <p className=\"m-0 font-weight-bold\">\n                                    <small className=\"m-0 font-weight-bold\">{comment.author_name}&nbsp;</small>\n                                </p>\n                                <p >\n                                    <small className=\"m-0\">{displayCommentDate(comment)}</small>\n                                </p>\n                                {\n                                    user.id === comment.author_id &&\n\n                                    <RippleButton className=\"m-button cursor-pointer button-ripple-24 d-flex justify-content-center align-items-center remove-holder p-0 m-0 ml-auto\"\n                                        onClick={() => handleRemoveComment(comment)}>\n                                        <FontAwesomeIcon icon=\"trash-alt\" />\n\n                                    </RippleButton>\n                                }\n                            </div>\n                            <p className=\"d-block d-sm-block\">\n                                <small>{comment.text}</small>\n                            </p>\n                        </div>\n                    )\n                })\n            }\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {(isLoading || isSorting) && !error && <div className=\"spinner-border\" />}\n                </div>\n            }\n\n        </div>\n\n    )\n}\n\nexport default Comments","\nexport const filmPlaylistInitialState = {\n    playlist: null,\n    currentFilm: null,\n    currentFilmIndex: 0,\n    isLoading: false,\n    isRemovingPlaylist: false,\n    isRemovingFilm: false,\n    removingFilmId: null,\n    headerHeight: null,\n    playerHeight: null\n}\n\nexport const filmPlaylistReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                isLoading: false,\n                playlist: action.playlist,\n                currentFilm: action.currentFilm,\n                currentFilmIndex: action.currentFilmIndex\n            }\n        }\n        case 'clear': {\n            return filmPlaylistInitialState\n        }\n        case 'remove-film': {\n            return {\n                ...state,\n                removingFilmId: action.payload,\n                isRemovingFilm: true\n            }\n        }\n        case 'remove-film-success': {\n\n            if (!state.removingFilmId)\n                return {\n                    ...state,\n                    isRemovingFilm: false\n                }\n\n            const filtered = state.playlist.films.filter(film => film.id !== state.removingFilmId)\n            return {\n                ...state,\n                currentFilm: state.removingFilmId === state.currentFilm ? null : state.currentFilm,\n                currentFilmIndex: state.removingFilmId === state.currentFilm ? 0 : filtered.findIndex(film => film.id === state.currentFilm) + 1,\n                playlist: {\n                    ...state.playlist,\n                    films: filtered\n                },\n                isRemovingFilm: false,\n            }\n        }\n        case 'change-playlist-privacy-success': {\n            return {\n                ...state,\n                playlist: { ...state.playlist, is_public: action.payload.is_public }\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                error: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}","import React, { useContext, useEffect, useCallback, useReducer } from 'react';\nimport { useLocation, useParams } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport queryString from \"query-string\";\nimport TextTruncate from \"react-text-truncate\";\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nimport { filmPlaylistInitialState, filmPlaylistReducer } from './reducers/playlistReducer';\n\nimport BlurredImageComponent from '../../models/blurredImage';\n\nimport * as playlistApi from '../../../services/playlistService'\n\nimport FilmContext from '../../../helpers/contexts/film/filmContext';\nimport UserContext from '../../../helpers/contexts/user/userContext';\nimport RemoveModalContext from '../../../helpers/contexts/removeModal/removeModalContext';\nimport RemoveButton from '../../buttons/remove';\nimport ChangePrivacyButton from '../../buttons/changePrivacy';\n\nimport image_not_found from '../../../images/image_not_found.png'; // Tell Webpack this JS file uses this image\n\nconst PlaylistContainer = ({ handleRedirect }) => {\n\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\n    let { id } = useParams()\n\n    let location = useLocation()\n\n    const { user } = useContext(UserContext)\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(filmPlaylistReducer, filmPlaylistInitialState)\n\n    const {\n        playlist,\n        isRemovingPlaylist,\n        isRemovingFilm,\n        removingFilmId,\n        currentFilm,\n        currentFilmIndex,\n        headerHeight,\n        playerHeight,\n        error\n    } = state\n\n    const clearPlaylist = () => {\n        dispatch({ type: 'clear' })\n    }\n\n    const headerRef = useCallback(node => {\n        if (node !== null) {\n            dispatch({\n                type: 'field',\n                fieldName: 'headerHeight',\n                payload: node.getBoundingClientRect().height\n            });\n        }\n    }, [])\n\n    useEffect(() => {\n        dispatch({\n            type: 'field',\n            fieldName: 'playerHeight',\n            payload: filmState.playerHeight\n        });\n    }, [filmState.playerHeight])\n\n    useEffect(() => {\n        dispatch({\n            type: 'error',\n            payload: filmState.error\n        });\n    }, [filmState.error])\n\n\n    useEffect(() => {\n        async function handleReloadPlaylist() {\n            await playlistApi.index(playlist.id)\n                .then(res => {\n\n                    let filmIndex = 0\n                    let filmId = null\n\n                    Array.prototype.forEach.call(res.data.films, (film, index) => {\n                        if (film && film.id === id) {\n                            filmIndex = index + 1\n                            filmId = film.id\n                        }\n                    })\n\n                    dispatch({\n                        type: 'success',\n                        playlist: res.data,\n                        currentFilm: filmId,\n                        currentFilmIndex: filmIndex\n                    })\n\n                    filmDispatch({\n                        type: 'field',\n                        fieldName: 'reloadPlaylist',\n                        payload: false\n                    })\n\n                    return res.data\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (filmState.reloadPlaylist && playlist) handleReloadPlaylist()\n\n    }, [filmState.reloadPlaylist, playlist, filmDispatch, id])\n\n\n\n    useEffect(() => {\n        const parsed = queryString.parse(location.search);\n        if (!parsed.list) {\n            clearPlaylist()\n            return\n        }\n\n        async function handleGetPlaylist() {\n            await playlistApi.index(parsed.list).then(res => {\n\n                let filmIndex = 0\n                let filmId = null\n\n                Array.prototype.forEach.call(res.data.films, (film, index) => {\n                    if (film && film.id === id) {\n                        filmIndex = index + 1\n                        filmId = film.id\n                    }\n                })\n\n                dispatch({\n                    type: 'success',\n                    playlist: res.data,\n                    currentFilm: filmId,\n                    currentFilmIndex: filmIndex\n                })\n                return res.data\n            }).catch(err => {\n                console.error(err)\n                clearPlaylist()\n            })\n        }\n        if (!error && filmState.isPreviewLoaded) handleGetPlaylist()\n    }, [id, location.search, error, filmState.isPreviewLoaded])\n\n\n    useEffect(() => {\n        async function removePlaylist() {\n            await playlistApi.remove(playlist.id)\n                .then(res => {\n                    clearPlaylist()\n                    clear()\n                })\n                .catch(err => {\n                    console.error(err)\n                    clear()\n                })\n        }\n        if (isRemovingPlaylist && removeModalData.isRemoving &&\n            removeModalData.id === playlist.id && removeModalData.type === 'playlist' &&\n            removeModalData.title === playlist.title) removePlaylist()\n    }, [clear, isRemovingPlaylist, playlist, removeModalData])\n\n\n    useEffect(() => {\n        async function removeFilm() {\n            await playlistApi.partialUpdate(playlist.id, { films_id: [removingFilmId], is_remove_films: true })\n                .then(res => {\n                    dispatch({\n                        type: 'remove-film-success'\n                    })\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (isRemovingFilm) removeFilm()\n    }, [isRemovingFilm, playlist, removingFilmId])\n\n    const handleRemovePlaylist = () => {\n\n        if (removeModalData.isRemoving) return\n\n        dispatch({\n            type: 'field',\n            fieldName: 'isRemovingPlaylist',\n            payload: true\n        })\n\n        showModal(playlist.id, 'playlist', playlist.title)\n    }\n\n    const handleRemoveFromPlaylist = (id) => {\n        if (isRemovingFilm) return\n\n        dispatch({\n            type: 'remove-film',\n            payload: id\n        })\n    }\n\n\n    return (\n\n        playlist && playerHeight && !error &&\n        <div className='col mb-4'>\n            <div className='col p-0 border'>\n                <div ref={headerRef}\n                    style={{ height: headerHeight + 'px' }}\n                    className=\"col remove-container pt-2 pb-2 film-preview-playlist-header\" sm={12}>\n                    <div className=\"row m-0 px-2\">\n                        <div className=\"button-ripple-div-next-width colbutton-ripple-div-next-width\">\n                            <p className=\"mb-1 font-weight-bold film-preview-playlist-text-truncate\">{playlist.title}</p>\n                        </div>\n                        <div style={{ width: '24px' }} className=\"p-0 justify-content-end d-flex\">\n                            {\n                                user.id === playlist.author_id &&\n                                <RemoveButton handleRemove={() => handleRemovePlaylist()} />\n                            }\n                        </div>\n                        <div className=\"col-12 col-sm-12 p-0\">\n                            {\n                                user.id === playlist.author_id &&\n                                <ChangePrivacyButton\n                                    id={playlist.id}\n                                    isPublic={playlist.is_public}\n                                    isPlaylist={true}\n                                    dispatchPrivacyUpdate={dispatch} />\n                            }\n                            {\n                                user.id === playlist.author_id && <small>&nbsp;</small>\n\n                            }\n                            <small>{playlist.author_name}&nbsp;</small>\n                            <small\n                                className=\"film-preview-playlist-index\">\n                                - {currentFilmIndex}/{playlist.films.length}\n                            </small>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ height: playerHeight - headerHeight + 'px' }}\n                    className=\"col-12 col-sm-12 p-0 film-preview-playlist-container\">\n                    <PerfectScrollbar\n                        onYReachEnd={() => { }}\n                        onScrollY={() => { }}>\n                        {\n                            playlist.films.map((film, index) => {\n                                return (\n                                    <div className=\"row m-0 p-0 pr-2 remove-container\" key={film.id}>\n                                        <div className={`${index === playlist.films.length - 1 ?\n                                            \"mt-3 mb-3 \" :\n                                            \"mt-3\"} button-ripple-div-next-width col`}\n                                            onClick={() => {\n                                                if (!film.isNonExisting)\n                                                    handleRedirect(film)\n                                            }}>\n                                            <div className=\"row m-0 p-0 play-outer-container\">\n                                                <div\n                                                    className=\"col-1 col-sm-1 text-center justify-content-center d-flex align-items-center p-0 pl-1\" >\n                                                    {\n                                                        (currentFilm === film.id) ?\n                                                            <small>\n                                                                <FontAwesomeIcon style={{ fontWeight: 300 }}\n                                                                    icon=\"play\" />\n                                                            </small>\n                                                            :\n                                                            <small>{index + 1}</small>\n\n                                                    }\n                                                </div>\n                                                <div className=\"col-6 col-sm-6 pr-2 pl-2\">\n                                                    <div className=\"w-100 play-container\">\n                                                        {film.isNonExisting ?\n                                                            <img alt=\"\" className=\"embed-responsive-item play-image\"\n                                                                src={image_not_found} />\n                                                            :\n                                                            <BlurredImageComponent\n                                                                image={`${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`} />\n                                                        }\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-5 col-sm-5 p-0\">\n                                                    {film.isNonExisting ?\n                                                        (<TextTruncate line={2} text=\"Not found\"\n                                                            className=\"mb-0 title font-weight-bold\" />)\n                                                        :\n                                                        (<>\n                                                            <TextTruncate line={1} text={film.title}\n                                                                className=\"mb-0 title font-weight-bold\" />\n                                                            <p className=\"mb-1 author-nick\">\n                                                                <span>{film.author_name}</span>\n                                                            </p>\n                                                        </>)\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {\n                                            user.id === playlist.author_id &&\n                                            <div style={{ width: '24px' }} className=\"p-0 d-flex align-items-center justify-content-center\">\n                                                <RemoveButton handleRemove={() => handleRemoveFromPlaylist(film.id)} />\n                                            </div>\n                                        }\n\n                                    </div>\n                                )\n                            })\n                        }\n                    </PerfectScrollbar>\n                </div>\n            </div>\n        </div >\n\n\n    )\n}\n\n\nexport default PlaylistContainer\n","import { useReducer } from \"react\"\nimport FilmContext from \"./filmContext\"\n\nconst filmInitialState = {\n    isPreviewLoaded: false,\n    playerHeight: null,\n    reloadPlaylist: false,\n    error: null\n}\n\nconst filmReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                isPreviewLoaded: true,\n                error: null\n            }\n        }\n        default:\n            return state\n    }\n}\n\nconst FilmProvider = ({ children }) => {\n    const [filmState, filmDispatch] = useReducer(filmReducer, filmInitialState)\n\n\n    return (\n        <FilmContext.Provider value={[filmState, filmDispatch]}>\n            {children}\n        </FilmContext.Provider>\n    );\n}\n\nexport default FilmProvider","import { useHistory, useLocation } from 'react-router-dom'\nimport queryString from \"query-string\";\n\nimport FilmPreview from './preview'\nimport FilmsRecommendations from './recommendations';\nimport Comments from './comments';\nimport PlaylistContainer from './playlistContainer';\n\nimport useWindowWidth from '../../../helpers/hooks/useWindowsWidth'\nimport FilmProvider from '../../../helpers/contexts/film/filmProvider'\n\nimport './film.css'\n\n\nconst Film = () => {\n\n    let history = useHistory()\n    let location = useLocation()\n\n    const onSmallScreen = useWindowWidth(768);\n\n    const handleRedirect = (film) => {\n        const parsed = queryString.parse(location.search);\n        let historyObject = { pathname: `${process.env.REACT_APP_PATH_NAME}film/` + film.id, state: { film } }\n        if (parsed.list) historyObject = { ...historyObject, search: `?list=${parsed.list}` }\n        history.push(historyObject);\n    };\n\n    return (\n        <FilmProvider>\n            <div className=\"row p-0 m-0 mt-4 mx-2\">\n                <div className=\"col-12 order-first col-sm-12 order-first col-md-8 film-preview-container-px\">\n                    <FilmPreview />\n                    {!onSmallScreen && <Comments />}\n                </div>\n                <div className=\"col-12 order-2 col-sm-12 order-2 col-md-4 p-0\">\n                    <PlaylistContainer handleRedirect={handleRedirect} />\n                    <FilmsRecommendations handleRedirect={handleRedirect} />\n                </div>\n                {onSmallScreen &&\n                    <div className=\"col-12 order-last col-sm-12 order-sm-last col-md-8 pb-5 container-px\">\n                        <Comments />\n                    </div>\n                }\n            </div>\n\n        </FilmProvider>\n    )\n}\n\nexport default Film","export const checkIfPlaylistButtonClick = (target) => {\n    if ((target.tagName === 'path' && target.parentNode.className.animVal && target.parentNode.className.animVal.includes('playlist-add-icon')) ||\n        (target.tagName === 'svg' && target.className.animVal && target.className.animVal.includes('playlist-add-icon')) ||\n        (target.className && typeof target.className === 'string' && target.className.includes('playlist-add-icon-holder')))\n        return true\n    return false\n}\n\nexport const displayCommentDate = (comment) => {\n    let date = new Date(Date.parse(comment.createdAt));\n    let time = (('0' + date.getDate()).slice(-2) + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-'\n        + ('0' + date.getFullYear()).slice(-2)\n        + ' o ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2))\n    return time;\n};\n\nexport const parseSearchDate = (film) => {\n\n    let date = new Date(Date.parse(film.createdAt));\n    let today = new Date();\n\n\n    let time = Math.abs(Math.floor((\n        Date.UTC(\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes()) -\n        Date.UTC(\n            today.getFullYear(),\n            today.getMonth(),\n            today.getDate(),\n            today.getHours(),\n            today.getMinutes()))\n        / (1000 * 60)));\n\n    if (time / 60 >= 1) {\n        time /= 60;\n\n        if (time / 24 >= 1) {\n\n            time /= 24;\n\n            if (time / 30 >= 1) {\n\n                time /= 30;\n\n                if (time / 12 >= 1) {\n\n                    time = time / 12;\n                    time = Math.floor(time) + ' years ';\n\n                } else {\n                    time = Math.floor(time) + ' months ';\n                }\n\n            } else {\n                time = Math.floor(time) + ' days ';\n            }\n\n        } else {\n            time = Math.floor(time) + ' hours ';\n        }\n    } else {\n        time = Math.floor(time) + ' minutes ';\n    }\n\n    time = time + 'ago';\n\n    return time;\n};\n\n\nexport const handleCloseModalWindow = (history, toSplit, replace = false) => {\n\n    let pathname = history.location.pathname.split(toSplit)[0]\n\n    const historyObject = {\n        pathname: pathname === '' ? process.env.REACT_APP_PATH_NAME : pathname,\n        search: history.location.search,\n        state: history.location.state\n    }\n\n    if (replace) {\n        history.replace(historyObject)\n    }\n    else {\n        history.push(historyObject)\n    }\n\n}","export default __webpack_public_path__ + \"static/media/image_not_found.c4ba1e76.png\";"],"sourceRoot":""}