{"version":3,"sources":["components/profile/reducer.js","components/profile/index.js","pages/profile.js","components/playlist.js","images/image_not_found.png","../node_modules/core-js/modules/esnext.promise.all-settled.js","../node_modules/core-js/modules/es.promise.all-settled.js"],"names":["initialProfileState","data","isLoading","isAllLoaded","isRemoving","toRemove","error","filmsCount","playlistsCount","profileReducer","state","action","type","fieldName","payload","isInitialLoaded","pageMaxFetchCount","Set","map","record","Boolean","isPlaylist","id","resource","title","filter","is_public","Profile","useContext","UpdateContext","clearToUpdate","updateResource","UserContext","user","clearUser","RemoveModalContext","showModal","clear","removeModalData","history","useHistory","useReducer","dispatch","handleProfileOnBottom","useCallback","useBottomScrollListener","triggerOnNoScroll","useEffect","auth","replace","process","push","a","Promise","allSettled","me","playlists","films","populatePlaylists","skipFilms","skipPlaylists","limit","pageInitialMaxFetchCount","response","status","value","film","img","playlist","image","film_id","image_not_found","length","fetchInitialData","fetchData","removePlaylist","removeFilm","console","remove","handleRemove","e","stopPropagation","className","index","isProfile","dispatchPrivacyUpdate","handleRedirect","pathname","search","handleRedirectPlaylist","Array","_","document","Playlist","useState","style","setStyle","onClick","icon","line","text","isPublic","author_name","require","$","aFunction","newPromiseCapabilityModule","perform","iterate","target","stat","iterable","C","this","capability","f","resolve","reject","result","promiseResolve","values","counter","remaining","promise","alreadyCalled","undefined","call","then","reason"],"mappings":"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","file":"static/js/16.cf46eee1.chunk.js","sourcesContent":["import { pageMaxFetchCount } from \"../../config\"\n\nexport const initialProfileState = {\n    data: null,\n    isLoading: false,\n    isAllLoaded: false,\n    isRemoving: false,\n    toRemove: null,\n    error: null,\n    filmsCount: 0,\n    playlistsCount: 0,\n}\n\nexport function profileReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                isLoading: false,\n                isInitialLoaded: true,\n                isAllLoaded: action.filmsCount < pageMaxFetchCount && action.playlistsCount < pageMaxFetchCount,\n                filmsCount: state.filmsCount + action.filmsCount,\n                playlistsCount: state.playlistsCount + action.playlistsCount,\n                data: [...new Set(action.data)]\n            }\n        }\n        case 'load': {\n            return !state.isLoading && !state.isAllLoaded && state.isInitialLoaded && !state.error ?\n                { ...state, isLoading: true, isAllLoaded: false } :\n                state\n        }\n        case 'success': {\n            return {\n                ...state,\n                isLoading: false,\n                isAllLoaded: action.filmsCount < pageMaxFetchCount && action.playlistsCount < pageMaxFetchCount,\n                filmsCount: state.filmsCount + action.filmsCount,\n                playlistsCount: state.playlistsCount + action.playlistsCount,\n                data: [...new Set([...state.data, ...action.data])]\n            }\n        }\n        case 'update-resource': {\n            return state.data ? {\n                ...state,\n                data: state.data.map(record => {\n                    if (Boolean(record.isPlaylist) === action.isPlaylist && record.id === action.resource.id) {\n                        return { ...record, title: action.resource.title }\n                    }\n\n                    return record\n                })\n            } : state\n        }\n        case 'remove': {\n            return {\n                ...state,\n                toRemove: action.payload,\n                isRemoving: true\n            }\n        }\n        case 'remove-success': {\n            return {\n                ...state,\n                isRemoving: false,\n                toRemove: null,\n                data: state.toRemove ? state.data.filter(resource => resource.id !== state.toRemove.id) : state.data\n            }\n        }\n        case 'change-playlist-privacy-success': {\n            return {\n                ...state,\n                data: state.data.map(data => {\n                    if (data.isPlaylist && data.id === action.payload.id) return { ...data, is_public: action.payload.is_public }\n                    return data\n                })\n            }\n        }\n        case 'clear': {\n            return initialProfileState\n        }\n        default: return state\n    }\n}","import React, { useEffect, useReducer, useCallback, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { initialProfileState, profileReducer } from './reducer';\n\nimport Film from '../film-row';\nimport Playlist from '../playlist';\n\nimport { me } from '../../services/userService'\nimport { remove as removePlaylist } from '../../services/playlistService'\nimport { remove as removeFilm } from '../../services/filmService'\n\nimport { pageInitialMaxFetchCount, pageMaxFetchCount } from '../../config';\n\nimport UserContext from '../../contexts/user/userContext';\nimport RemoveModalContext from '../../contexts/removeModal/removeModalContext';\nimport useBottomScrollListener from '../../hooks/use-bottom-scroll-listener';\n\nimport Skeleton from '../../skeletons/film'\nimport UpdateContext from '../../contexts/updateModal/updateContext';\n\nimport image_not_found from '../../images/image_not_found.png'; \nimport 'core-js/modules/esnext.promise.all-settled'\n\nconst Profile = () => {\n\n    const { clearToUpdate, updateResource } = useContext(UpdateContext)\n\n    const { user, clearUser } = useContext(UserContext)\n\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\n\n    let history = useHistory()\n\n    const [state, dispatch] = useReducer(profileReducer, initialProfileState)\n    const { data, isLoading, isAllLoaded, isInitialLoaded, error, isRemoving, toRemove, filmsCount, playlistsCount } = state\n\n    const handleProfileOnBottom = useCallback(() => {\n        if (!isLoading && !isAllLoaded && isInitialLoaded && !error) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllLoaded, isInitialLoaded, error])\n\n    useBottomScrollListener(handleProfileOnBottom, { triggerOnNoScroll: true })\n\n    useEffect(() => {\n        if (!user.auth && user.isInitialLoaded) {\n            history.replace(`${process.env.REACT_APP_PATH_NAME}`)\n            history.push(`${process.env.REACT_APP_PATH_NAME}login`)\n            clearUser()\n        }\n    }, [user, history, clearUser])\n\n    useEffect(() => {\n        async function fetchInitialData() {\n\n            const [response] = await Promise.allSettled([\n                me({ playlists: true, films: true, populatePlaylists: true, skipFilms: 0, skipPlaylists: 0, limit: pageInitialMaxFetchCount })\n            ])\n\n            let data = []\n\n            let films = []\n            let playlists = []\n\n            if (response.status === \"fulfilled\") {\n                films = response.value.data.films.map(film => {\n                    return {\n                        ...film,\n                        img: `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`,\n\n                    }\n                })\n\n                playlists = response.value.data.playlists.map(playlist => {\n                    const image = playlist.film_id ?\n                        `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail` :\n                        image_not_found\n                    return {\n                        ...playlist,\n                        img: image,\n                        isPlaylist: true\n\n                    }\n                })\n\n                data = [...data, ...films, ...playlists]\n            }\n\n            dispatch({\n                type: 'initial-success',\n                data: data,\n                filmsCount: films.length,\n                playlistsCount: playlists.length,\n            })\n        }\n\n        dispatch({ type: 'clear' })\n        fetchInitialData()\n\n    }, [])\n\n    useEffect(() => {\n        async function fetchData() {\n            const [response] = await Promise.allSettled([\n                me({ playlists: true, films: true, populatePlaylists: true, skipFilms: filmsCount, skipPlaylists: playlistsCount, limit: pageMaxFetchCount })\n            ])\n\n            let data = []\n\n            let films = []\n            let playlists = []\n\n            if (response.status === \"fulfilled\") {\n                films = response.value.data.films.map(film => {\n                    return {\n                        ...film,\n                        img: `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`,\n\n                    }\n                })\n\n                playlists = response.value.data.playlists.map(playlist => {\n                    const image = playlist.film_id ?\n                        `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail` :\n                        image_not_found\n                    return {\n                        ...playlist,\n                        img: image,\n                        isPlaylist: true\n\n                    }\n                })\n\n                data = [...data, ...films, ...playlists]\n            }\n\n            dispatch({\n                type: 'success',\n                data: data,\n                filmsCount: films.length,\n                playlistsCount: playlists.length,\n            })\n        }\n\n        if (isLoading && isInitialLoaded) fetchData()\n    }, [filmsCount, isLoading, playlistsCount, isInitialLoaded])\n\n    useEffect(() => {\n        async function remove() {\n\n            try {\n                if (toRemove.isPlaylist) {\n                    const resPlaylist = await removePlaylist(toRemove.id)\n                    if (resPlaylist.status === 204) {\n                        dispatch({\n                            type: 'remove-success'\n                        })\n                        clear()\n                    }\n                } else {\n                    const resFilm = await removeFilm(toRemove.id)\n                    if (resFilm.status === 204) {\n                        dispatch({\n                            type: 'remove-success'\n                        })\n                        clear()\n                    }\n                }\n            } catch (err) {\n                console.error(err)\n            }\n        }\n        if (isRemoving && removeModalData.isRemoving && toRemove &&\n            removeModalData.id === toRemove.id && removeModalData.title === toRemove.title &&\n            removeModalData.type === (toRemove.isPlaylist ? 'playlist' : 'film')) remove()\n    }, [isRemoving, removeModalData, toRemove, clear])\n\n    useEffect(() => {\n        const handleUpdateResource = () => {\n            dispatch({\n                type: 'update-resource',\n                resource: updateResource.resource,\n                isPlaylist: updateResource.isPlaylist\n            })\n\n            clearToUpdate()\n        }\n\n        if (updateResource.isPlaylist !== null && updateResource.resource !== null) handleUpdateResource()\n    }, [updateResource, clearToUpdate])\n\n    const handleRemove = (e, resource) => {\n        e.stopPropagation()\n        if (removeModalData.isRemoving) return\n        dispatch({\n            type: 'remove',\n            payload: resource\n        })\n        showModal(resource.id, resource.isPlaylist ? 'playlist' : 'film', resource.title)\n    };\n\n    const handleRedirectFilm = (film) => {\n        history.push({ pathname: `${process.env.REACT_APP_PATH_NAME}film/` + film.id, state: { film } });\n    }\n\n    const handleRedirectPlaylist = (record) => {\n        if (!record.film_id) return\n        history.push({\n            pathname: `${process.env.REACT_APP_PATH_NAME}film/` + record.film_id,\n            search: `?list=${record.id}`\n        });\n    }\n\n    return (\n        <div className=\"row mt-5 mx-2\">\n            {\n                data ? data.map((record, index) => {\n                    if (record.isPlaylist) {\n                        return <Playlist key={record.id}\n                            playlist={record} index={index}\n                            isProfile={true}\n                            dispatchPrivacyUpdate={dispatch}\n                            handleRedirect={() => handleRedirectPlaylist(record)}\n                            handleRemove={(e) => handleRemove(e, record)} />\n                    } else {\n                        return <Film key={record.id} isProfile={true}\n                            film={record} index={index}\n                            handleRedirect={() => handleRedirectFilm(record)}\n                            handleRemove={(e) => handleRemove(e, record)} />\n                    }\n                }) : ([...Array(24)].map((_, index) => (\n                    <Skeleton key={index} />\n                )))\n            }\n\n            {\n                !isAllLoaded && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {\n                        (isLoading) &&\n                        <div className=\"spinner-border\" />\n                    }\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default Profile\n","import { useEffect } from 'react'\nimport ProfileComponent from '../components/profile'\n\nexport default function Profile() {\n\n    useEffect(() => {\n        document.title = \"Profile\"\n    }, [])\n\n    return <ProfileComponent />\n\n}","import React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TextTruncate from \"react-text-truncate\";\nimport BlurredImageComponent from \"./blurred-image\";\nimport RemoveButton from './buttons/remove';\nimport ChangePrivacyButton from './buttons/change-privacy';\nimport EditButton from './buttons/edit';\n\nconst Playlist = ({ playlist, handleRedirect, handleRemove, isProfile, dispatchPrivacyUpdate }) => {\n\n    const [style, setStyle] = useState(\"mb-4 play-outer-container remove-container\")\n\n    useEffect(() => {\n        if (!playlist.film_id) setStyle(\"mb-4 play-cursor-default remove-container\")\n    }, [playlist.film_id])\n\n\n    return (\n        <div className=\"col-12 col-sm-6 col-md-3 col-lg-2 container-px\"\n            key={playlist.id}>\n            <div className={`col ${style} p-0`} onClick={() => handleRedirect(playlist.id, playlist.film_id)}>\n                <div className=\"play-container p-0\">\n                    <BlurredImageComponent\n                        image={playlist.img} />\n\n                    <div className=\"row play-middle w-100 m-0\">\n                        <div className=\"col-5 col-sm-5 pr-1 d-flex justify-content-end align-items-center\">\n                            <FontAwesomeIcon icon=\"play\" />\n                        </div>\n                        <div className=\"col-7 col-sm-7 pl-1 d-flex justify-content-start align-items-center\">\n                            <small className=\"font-weight-bold\" >Play all</small>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row m-0 mt-1\">\n                    <div className={`p-0 col ${isProfile ? 'button-ripple-div-next-width-3x' : 'col-12'}`}>\n                        <TextTruncate line={1} text={playlist.title}\n                            className=\"mb-1 mt-1 title \" />\n                    </div>\n\n\n                    {\n                        isProfile && <>\n                            <ChangePrivacyButton\n                                id={playlist.id}\n                                isPublic={playlist.is_public}\n                                isProfile={true}\n                                dispatchPrivacyUpdate={dispatchPrivacyUpdate} />\n                            <RemoveButton handleRemove={handleRemove} />\n                            <EditButton isPlaylist={true} id={playlist.id} title={playlist.title} />\n                        </>\n                    }\n                </div>\n                <p className=\"mb-0 author-nick\">\n                    <span>{playlist.author_name}</span>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Playlist","export default __webpack_public_path__ + \"static/media/image_not_found.c4ba1e76.png\";","// TODO: Remove from `core-js@4`\nrequire('./es.promise.all-settled.js');\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\n\n// `Promise.allSettled` method\n// https://tc39.es/ecma262/#sec-promise.allsettled\n$({ target: 'Promise', stat: true }, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'fulfilled', value: value };\n          --remaining || resolve(values);\n        }, function (error) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'rejected', reason: error };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n"],"sourceRoot":""}