{"version":3,"sources":["config/index.js","helpers/components/rippleButton.js","services/playlistService.js","helpers/components/changePrivacyButton.js","helpers/hooks/useIntersectionObserver.js","components/blurredImage/index.js","helpers/index.js","components/add/reducers/playlistDropdownMenuReducer.js","components/add/playlistDropdownMenu.js","components/add/playlistAddButton.js","components/searchPage/reducer.js","components/searchPage/index.js"],"names":["commentsMaxFetchCount","recommendationsMaxFetchCount","playlistButtonMaxFetchCount","pageInitialMaxFetchCount","pageMaxFetchCount","RippleButton","onClick","children","className","useRipple","background","addRipple","ripples","variant","e","onMouseDown","create","body","axios","post","headers","authHeader","index","id","get","show","params","partialUpdate","patch","remove","delete","ChangePrivacyButton","isPublic","isProfile","dispatchPrivacyUpdate","filmDispatch","useState","isChanging","setIsChanging","useEffect","a","playlistApi","is_public","then","res","type","payload","data","undefined","fieldName","catch","err","console","error","changePrivacy","privacyButton","stopPropagation","icon","style","height","width","useIntersectionObserver","target","onIntersect","threshold","rootMargin","React","observer","IntersectionObserver","current","observe","unobserve","Image","src","thumb","isLoaded","setIsLoaded","alt","visibility","onLoad","opacity","BlurredImageComponent","image","ref","useRef","isVisible","setIsVisible","observerElement","isIntersecting","concat","checkIfPlaylistButtonClick","tagName","parentNode","animVal","includes","displayCommentDate","comment","date","Date","parse","createdAt","getDate","slice","getMonth","getFullYear","getHours","getMinutes","parseSearchDate","film","today","time","Math","abs","floor","UTC","playlistDropdownMenuInitialState","playlists","isLoading","isAllFetched","isCreating","isAdding","playlistToUpgrade","title","playlistDropdownMenuReducer","state","action","length","map","playlist","contains","PlaylistDropdownMenu","filmID","handlePlaylistClose","isRecommendations","createToast","useContext","ToastContext","useReducer","dispatch","handleOnPlaylistDropdownMenuBottom","useCallback","scrollRef","useBottomScrollListener","userApi","skip","limit","result","forEach","films","indexOf","getMyPlaylists","films_id","errorMessage","response","errors","creatPlaylist","is_remove_films","message","addToPlaylist","Dropdown","Menu","left","Row","Col","setTimeout","Divider","maxHeight","overflowY","minHeight","xs","sm","Form","Check","FormCheck","Input","onChange","handleAddToPlaylist","checked","Label","Spinner","animation","ItemText","FormControl","isInvalid","value","placeholder","Feedback","Select","Group","Button","disabled","PlaylistAddButton","props","user","UserContext","isOpen","setIsOpen","auth","onToggle","event","metadata","Toggle","bsPrefix","color","display","faEllipsisV","searchInitialState","isInitialLoaded","search","filter","sort","dir","sorts","searchReducer","resetSort","filters","Search","history","useHistory","location","useLocation","handleSearchOnBottom","searchParams","queryString","filmApi","getFilms","handleOnclick","filterClick","sortClick","dirClick","tmpType","push","cursor","faFilter","Collapse","in","filterTmp","fontWeight","fontSize","sortTmp","lg","process","flex","Truncate","lines","author_name","views","line","text","description"],"mappings":"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","file":"static/js/9.d1df841b.chunk.js","sourcesContent":["export const commentsMaxFetchCount = 10\nexport const recommendationsMaxFetchCount = 12\n\nexport const playlistButtonMaxFetchCount = 10\n\nexport const pageInitialMaxFetchCount = 40\nexport const pageMaxFetchCount = 20\n","import Button from 'react-bootstrap/Button'\nimport useRipple from 'useripple'\n\nconst RippleButton = ({ onClick, children, className }) => {\n\n    const [addRipple, ripples] = useRipple({ background: 'black' })\n\n    return (\n        <Button variant=\"link\" onClick={(e) => {\n            onClick(e)\n        }}\n            onMouseDown={addRipple}\n            className={`button-ripple ${className}`}>\n            {children}\n            {ripples}\n        </Button>\n    )\n}\n\nexport default RippleButton","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const create = (body) => axios.post('playlists', body, { headers: authHeader() })\nexport const index = (id) => axios.get(`playlists/${id}`, { headers: authHeader() })\nexport const show = (params) => axios.get(`playlists`, { params, headers: authHeader() })\nexport const partialUpdate = (id, body) => axios.patch(`playlists/${id}`, body, { headers: authHeader() })\n\n\nexport const remove = (id) => axios.delete(`playlists/${id}`, { headers: authHeader() })\n\n","import Col  from \"react-bootstrap/Col\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useState } from \"react\"\nimport * as playlistApi from '../../services/playlistService'\nimport RippleButton from \"./rippleButton\"\n\nconst ChangePrivacyButton = ({ isPublic, id, isProfile, dispatchPrivacyUpdate, filmDispatch }) => {\n\n    const [isChanging, setIsChanging] = useState(false)\n\n\n    useEffect(() => {\n        async function changePrivacy() {\n            await playlistApi.partialUpdate(id, { is_public: !isPublic })\n                .then(res => {\n                    setIsChanging(false)\n\n                    dispatchPrivacyUpdate({\n                        type: 'change-playlist-privacy-success',\n                        payload: res.data\n                    })\n\n                    if (filmDispatch !== undefined) {\n                        filmDispatch({\n                            type: 'field',\n                            fieldName: 'reloadPlaylist',\n                            payload: true\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.error(err)\n                    setIsChanging(false)\n                })\n        }\n        if (isChanging) changePrivacy()\n    }, [dispatchPrivacyUpdate, isChanging, isPublic, id, filmDispatch])\n\n    const handleChangePrivacy = (e) => {\n        e.stopPropagation()\n        if (!isChanging) setIsChanging(true)\n    }\n\n    const privacyButton = (\n        <RippleButton\n            className=\"button-ripple-24 p-0\"\n            onClick={handleChangePrivacy}>\n            <FontAwesomeIcon icon={isPublic ? \"globe-europe\" : \"lock\"} />\n        </RippleButton>\n    )\n\n    return isProfile ?\n        (\n            <Col className=\"text-center justify-content-center d-flex align-items-center p-0 flex-grow-0\"\n            >\n                <Col\n                    className=\"remove-holder p-0 m-0 flex-grow-0\"\n                    style={{ height: '24px', width: '24' }}>\n                    {privacyButton}\n                </Col>\n            </Col>\n        ) :\n        privacyButton\n}\n\nexport default ChangePrivacyButton","import React from \"react\";\nconst useIntersectionObserver = ({\n  target,\n  onIntersect,\n  threshold = 0.1,\n  rootMargin = \"0px\"\n}) => {\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, {\n      rootMargin,\n      threshold\n    });\nconst current = target.current;\nobserver.observe(current);\nreturn () => {\n      observer.unobserve(current);\n    };\n  });\n};\nexport default useIntersectionObserver;","import { useState, useRef } from 'react';\nimport useIntersectionObserver from '../../helpers/hooks/useIntersectionObserver';\nimport \"./blurred.css\";\n\nconst Image = ({ src, thumb }) => {\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    return (\n        <div className=\"ratio ratio-16x9\">\n            <img\n                className=\"image thumb\"\n                alt=\"\"\n                src={thumb}\n                style={{ visibility: isLoaded ? \"hidden\" : \"visible\" }}\n            />\n            <img\n                onLoad={() => {\n                    setIsLoaded(true);\n                }}\n                className=\"image full\"\n                style={{ opacity: isLoaded ? 1 : 0 }}\n                alt=\"\"\n                src={src}\n            />\n        </div>\n    );\n}\nfunction BlurredImageComponent({ image }) {\n    const ref = useRef();\n    const [isVisible, setIsVisible] = useState(false);\n    \n    useIntersectionObserver({\n        target: ref,\n        onIntersect: ([{ isIntersecting }], observerElement) => {\n            if (isIntersecting) {\n                setIsVisible(true);\n                observerElement.unobserve(ref.current);\n            }\n        }\n    });\n\n    return (\n        <div\n            ref={ref}\n            className=\"image-container ratio ratio-16x9 play-image\"\n        >\n            {isVisible && (\n                <Image  src={image.concat('?width=small_webp')} thumb={image.concat('?width=preview_webp')} />\n            )}\n        </div>\n    );\n}\n\nexport default BlurredImageComponent;","export const checkIfPlaylistButtonClick = (target) => {\n    if ((target.tagName === 'path' && target.parentNode.className.animVal && target.parentNode.className.animVal.includes('playlist-add-icon')) ||\n        (target.tagName === 'svg' && target.className.animVal && target.className.animVal.includes('playlist-add-icon')) ||\n        (target.className && typeof target.className === 'string' && target.className.includes('playlist-add-icon-holder')))\n        return true\n    return false\n}\n\nexport const displayCommentDate = (comment) => {\n    let date = new Date(Date.parse(comment.createdAt));\n    let time = (('0' + date.getDate()).slice(-2) + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-'\n        + ('0' + date.getFullYear()).slice(-2)\n        + ' o ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2))\n    return time;\n};\n\nexport const parseSearchDate = (film) => {\n\n    let date = new Date(Date.parse(film.createdAt));\n    let today = new Date();\n\n\n    let time = Math.abs(Math.floor((\n        Date.UTC(\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes()) -\n        Date.UTC(\n            today.getFullYear(),\n            today.getMonth(),\n            today.getDate(),\n            today.getHours(),\n            today.getMinutes()))\n        / (1000 * 60)));\n\n    if (time / 60 >= 1) {\n        time /= 60;\n\n        if (time / 24 >= 1) {\n\n            time /= 24;\n\n            if (time / 30 >= 1) {\n\n                time /= 30;\n\n                if (time / 12 >= 1) {\n\n                    time = time / 12;\n                    time = Math.floor(time) + ' years ';\n\n                } else {\n                    time = Math.floor(time) + ' months ';\n                }\n\n            } else {\n                time = Math.floor(time) + ' days ';\n            }\n\n        } else {\n            time = Math.floor(time) + ' hours ';\n        }\n    } else {\n        time = Math.floor(time) + ' minutes ';\n    }\n\n    time = time + 'ago';\n\n    return time;\n};\n","import { playlistButtonMaxFetchCount } from \"../../../config\"\n\nexport const playlistDropdownMenuInitialState = {\n    playlists: [],\n    isLoading: true,\n    isAllFetched: false,\n    isCreating: false,\n    isAdding: false,\n    playlistToUpgrade: null,\n    title: '',\n    isPublic: false,\n    error: '',\n}\n\nexport function playlistDropdownMenuReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                error: '',\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'load': {\n            return {\n                ...state,\n                isLoading: true,\n                isAllFetched: false,\n            }\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                playlists: [...state.playlists, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < playlistButtonMaxFetchCount,\n                error: '',\n            }\n        }\n        case 'create': {\n            return {\n                ...state,\n                isLoading: false,\n                isCreating: true\n            }\n        }\n        case 'create-success': {\n            return {\n                ...state,\n                isLoading: false,\n                isCreating: false\n            }\n        }\n        case 'add': {\n            return {\n                ...state,\n                isLoading: false,\n                isAdding: true,\n                playlistToUpgrade: action.payload\n            }\n        }\n        case 'add-update-playlist': {\n            return {\n                ...state,\n                playlists: state.playlists.map(playlist => {\n                    if (playlist.id === state.playlistToUpgrade.id) return { ...playlist, contains: !playlist.contains }\n                    else return playlist\n                }),\n                playlistToUpgrade: null\n            }\n        }\n        case 'add-success': {\n            return {\n                ...state,\n                isAdding: false\n            }\n        }\n        case 'change-playlist-privacy-success': {\n            return {\n                ...state,\n                playlists: state.playlists.map(playlist => {\n                    if (playlist.id === action.payload.id) return { ...playlist, is_public: action.payload.is_public }\n                    return playlist\n                })\n            }\n        }\n        case 'error':\n            return {\n                ...state,\n                isLoading: false,\n                isAllFetched: false,\n                isCreating: false,\n                error: action.payload,\n                title: ''\n            }\n        default:\n            return state\n\n    }\n}\n","import React, { useCallback, useEffect, useContext, useReducer } from 'react';\nimport { Button, Col, Dropdown, Form, FormCheck, FormControl, Row, Spinner } from \"react-bootstrap\";\n\nimport * as userApi from '../../services/userService'\nimport * as playlistApi from '../../services/playlistService'\n\nimport ToastContext from '../../helpers/contexts/toast/toastContext';\nimport useBottomScrollListener from '../../helpers/hooks/useBottomScrollListener';\nimport { playlistDropdownMenuReducer, playlistDropdownMenuInitialState } from './reducers/playlistDropdownMenuReducer'\nimport ChangePrivacyButton from '../../helpers/components/changePrivacyButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { playlistButtonMaxFetchCount } from '../../config';\nimport RippleButton from '../../helpers/components/rippleButton';\n\nfunction PlaylistDropdownMenu({ filmID, handlePlaylistClose, isRecommendations, filmDispatch }) {\n\n\n    const { createToast } = useContext(ToastContext);\n    const [state, dispatch] = useReducer(playlistDropdownMenuReducer, playlistDropdownMenuInitialState);\n\n    const { playlists, title, isPublic, isLoading, isAllFetched, isCreating, isAdding, playlistToUpgrade, error } = state\n\n    const handleOnPlaylistDropdownMenuBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && !isCreating && !isAdding) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isCreating, isAdding])\n\n    const scrollRef = useBottomScrollListener(handleOnPlaylistDropdownMenuBottom);\n\n    useEffect(() => {\n        async function getMyPlaylists() {\n            await userApi.me({ playlists: true, skip: playlists.length, limit: playlistButtonMaxFetchCount })\n                .then(res => {\n\n                    let result = res.data.playlists\n\n                    result.forEach(playlist => {\n                        playlist.contains = playlist.films.indexOf(filmID) > -1\n                    });\n\n                    dispatch({\n                        type: 'load-success',\n                        payload: result\n                    })\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (isLoading) getMyPlaylists()\n\n    }, [filmID, playlists, isLoading])\n\n    useEffect(() => {\n\n        async function creatPlaylist() {\n            const body = { title: title, is_public: isPublic, films_id: [filmID] };\n\n            await playlistApi.create(body)\n                .then(res => {\n                    dispatch({\n                        type: 'create-success'\n                    })\n                    createToast(`Created playlist ${title}`)\n                    handlePlaylistClose()\n\n                })\n                .catch(err => {\n                    console.error(err)\n                    let errorMessage = null\n\n                    if (err.response && err.response.data && err.response.data.error) {\n                        errorMessage = err.response.data.error\n                    } else if (err.response && err.response.data && err.response.data.errors) {\n                        errorMessage = err.response.data.errors[0]\n                    }\n\n                    dispatch({\n                        type: 'error',\n                        payload: errorMessage === \"Path `title` is required.\" ? 'Playlist title is required' : errorMessage\n                    })\n                })\n        }\n\n        if (isCreating) creatPlaylist()\n\n    }, [isCreating, title, isPublic, createToast, handlePlaylistClose, filmID,])\n\n    useEffect(() => {\n        async function addToPlaylist() {\n\n            let body = { films_id: [filmID] };\n\n            body = playlistToUpgrade.contains ? { ...body, is_remove_films: true } : { ...body, is_remove_films: false }\n\n            const message = playlistToUpgrade.contains ? `Deleted from playlist ${playlistToUpgrade.title}` : `Added to playlist ${playlistToUpgrade.title}`\n\n            dispatch({\n                type: 'add-update-playlist',\n                playlist: playlistToUpgrade\n            })\n\n            await playlistApi.partialUpdate(playlistToUpgrade.id, body)\n                .then(res => {\n                    dispatch({\n                        type: 'add-success'\n                    })\n\n                    if (isRecommendations) {\n                        filmDispatch({\n                            type: 'field',\n                            fieldName: 'reloadPlaylist',\n                            payload: true\n                        })\n                    }\n                    createToast(message)\n                })\n                .catch(err => console.error(err))\n        }\n        if (isAdding && playlistToUpgrade) addToPlaylist()\n    }, [isAdding, playlistToUpgrade, createToast, filmDispatch, filmID, isRecommendations])\n\n    const handleAddToPlaylist = (playlist) => {\n        dispatch({\n            type: 'add',\n            payload: playlist\n        })\n    };\n\n    const handleCreatePlaylist = (e) => {\n        e.stopPropagation()\n        dispatch({\n            type: 'create'\n        })\n    };\n\n    return (\n\n        <Dropdown.Menu\n            onClick={e => e.stopPropagation()}\n            style={{ width: 240 + \"px\", left: '50px !important' }}>\n            <Row className=\"m-0 m-button button-ripple\" >\n                <Col className=\"playlist-add-exit-text-width\">Save to...</Col>\n                <RippleButton className=\"button-ripple-24 playlist-add-icon-holder p-0 d-flex align-items-center text-center justify-content-center\"\n                    onClick={() => setTimeout(handlePlaylistClose, 150)}>\n                    <FontAwesomeIcon icon=\"times\" />\n                </RippleButton>\n            </Row>\n            <Dropdown.Divider />\n            <div\n                ref={scrollRef}\n                style={{\n                    maxHeight: 100 + 'px', overflowY: 'scroll', minHeight: 3 + 'rem'\n                }}>\n\n                {\n                    playlists.map((playlist, index) => {\n                        return (<Row className=\"m-0 playlist-form-group\" key={playlist.id} >\n                            <Col xs={10} sm={10} className=\"p-0\">\n                                <Form.Check id={playlist.id} className=\"form-check\">\n                                    <FormCheck.Input type=\"checkbox\"\n                                        onChange={() => handleAddToPlaylist(playlist)}\n                                        checked={playlist.contains} />\n                                    <FormCheck.Label>\n                                        <p className=\"playlist-check-label\">\n                                            {playlist.title}\n                                        </p>\n                                    </FormCheck.Label>\n                                </Form.Check>\n\n                            </Col>\n                            <ChangePrivacyButton\n                                id={playlist.id}\n                                isPublic={playlist.is_public}\n                                isProfile={false}\n                                filmDispatch={filmDispatch}\n                                dispatchPrivacyUpdate={dispatch} />\n\n                        </Row>)\n                    })\n                }\n\n                {\n                    !isAllFetched && <div style={{\n                        height: 3 + 'rem'\n                    }}\n                        className=\"fetch-spinner d-flex justify-content-center align-items-center\">\n                        {isLoading && <Spinner animation=\"border\" />}\n                    </div>\n                }\n            </div>\n            <Dropdown.Divider />\n            <Dropdown.ItemText>Create a new playlist</Dropdown.ItemText>\n            <Row className=\"m-0 p-0\">\n                <Form>\n                    <FormControl\n                        isInvalid={error !== ''}\n                        onChange={(e) => dispatch({ type: 'field', fieldName: 'title', payload: e.target.value })}\n                        className=\"mb-2 mt-2\"\n                        placeholder=\"Enter playlist title...\" />\n\n                    <FormControl.Feedback type=\"invalid\"\n                        className=\"mb-2 mt-2\">\n                        {error}\n                    </FormControl.Feedback>\n                    <Form.Select aria-label=\"Privacy\" className=\"mb-2 mt-2\"\n                        onChange={(e) => dispatch({ type: 'field', fieldName: 'isPublic', payload: e.target.value === 'public' })}>\n                        <option value=\"private\">Private</option>\n                        <option value=\"public\">Public</option>\n                    </Form.Select>\n\n                    <Form.Group className=\"d-flex align-items-center mt-2\">\n                        <Button disabled={isCreating}\n                            onClick={isCreating ? null : handleCreatePlaylist}>Create</Button>\n\n                        {\n                            isCreating &&\n                            <Spinner className=\"ms-2\" animation=\"grow\" />\n                        }\n                    </Form.Group>\n\n                </Form>\n\n            </Row>\n\n        </Dropdown.Menu >\n\n\n    )\n}\n\nexport default PlaylistDropdownMenu\n","import React, { useState, useContext } from 'react';\nimport { Col, Dropdown } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport PlaylistDropdownMenu from './playlistDropdownMenu'\nimport UserContext from '../../helpers/contexts/user/userContext';\nimport useRipple from \"useripple\"\n\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\n\nimport './playlistAdd.css'\n\nfunction PlaylistAddButton(props) {\n\n    const { user } = useContext(UserContext);\n\n    const [addRipple, ripples] = useRipple({ background: \"black\" })\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const handlePlaylistClose = () => {\n        setIsOpen(false)\n    }\n\n    const allClass = \"\"\n    const previewClass = \"col-sm-2 col-2 p-0\"\n\n    return (\n\n        user.auth ?\n            <Dropdown show={isOpen}\n                onToggle={(isOpen, event, metadata) => {\n                    setIsOpen(isOpen)\n                }} className={props.isRecommendations ? previewClass : allClass} >\n                <Dropdown.Toggle variant=\"link\" bsPrefix=\"p-0\"\n                    className=\"m-button button-ripple\"\n                    style={{ color: \"black\" }}>\n                    <div style={{ display: 'inline-block', width: '100%', height: '100%' }}>\n                        <Col\n                            onClick={addRipple}\n                            className=\"playlist-add-icon-holder p-0 button-ripple button-ripple-24\">\n                            <FontAwesomeIcon style={{ opacity: (isOpen ? 1 : \"\") }}\n                                className=\"playlist-add-icon\" icon={faEllipsisV} />\n                            {ripples}\n                        </Col>\n                    </div>\n                </Dropdown.Toggle>\n                {isOpen && <PlaylistDropdownMenu\n                    isRecommendations={props.isRecommendations}\n                    filmDispatch={props.filmDispatch}\n                    isOpen={isOpen}\n                    filmID={props.filmID}\n                    handlePlaylistClose={handlePlaylistClose} />}\n            </Dropdown>\n            :\n            null\n\n    )\n}\n\nexport default PlaylistAddButton\n","import { pageMaxFetchCount } from \"../../config\"\n\nexport const searchInitialState = {\n    films: [],\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    error: null,\n    search: '',\n    filter: '',\n    sort: '',\n    dir: 1,\n    sorts: [\n        { id: 'upload_date', title: 'Upload date', dir: 1 },\n        { id: 'view_count', title: 'View count', dir: 1 },\n        { id: 'rating', title: 'Rating', dir: 1 },\n    ]\n\n}\n\nexport const searchReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                isLoading: false,\n                isInitialLoaded: true,\n                error: null,\n                isAllFetched: action.payload.films.length < pageMaxFetchCount,\n                films: action.payload.films,\n                search: action.payload.params.search,\n                sort: action.payload.params.sort,\n                filter: action.payload.params.filter,\n                dir: action.payload.params.dir,\n\n            }\n        }\n        case 'load': {\n            return !state.isLoading && !state.isAllFetched && state.isInitialLoaded && !state.error ? {\n                ...state,\n                isLoading: true,\n            } : state\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n                isAllFetched: action.payload.length < pageMaxFetchCount,\n                films: [...state.films, ...action.payload],\n            }\n        }\n        case 'sorts-change': {\n            return {\n                ...state,\n                sort: action.resetSort ? '' : state.sort,\n                sorts: state.sorts.map(sort => {\n                    if (sort.id === action.payload.id) return action.payload\n                    else return sort\n                })\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                error: true,\n            }\n        }\n        default: return state\n    }\n}\n","import React, { useEffect, useReducer, useState, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom'\nimport useBottomScrollListener from '../../helpers/hooks/useBottomScrollListener';\n\nimport { Col, Collapse, Row, Spinner } from 'react-bootstrap';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport queryString from 'query-string';\n\nimport TextTruncate from \"react-text-truncate\";\nimport Truncate from \"react-truncate\";\n\nimport PlaylistAddButtonComponent from '../add/playlistAddButton';\n\nimport { parseSearchDate, checkIfPlaylistButtonClick } from '../../helpers'\nimport * as filmApi from '../../services/filmService'\n\nimport BlurredImageComponent from '../blurredImage'\n\nimport { searchReducer, searchInitialState } from './reducer'\nimport { pageMaxFetchCount } from '../../config';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\nimport RippleButton from '../../helpers/components/rippleButton';\n\nimport \"./search.css\";\n\nlet filters = [\n    { id: 'last_hour', title: 'Last hour' },\n    { id: 'today', title: 'Today' },\n    { id: 'this_week', title: 'This week' },\n    { id: 'this_month', title: 'This month' },\n    { id: 'this_year', title: 'This year' },\n];\n\nconst Search = (props) => {\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const [state, dispatch] = useReducer(searchReducer, searchInitialState)\n\n    const { films, isLoading, isAllFetched, search, sort, filter, dir, sorts, error, isInitialLoaded } = state\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const handleSearchOnBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && !error && isInitialLoaded) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [error, isAllFetched, isInitialLoaded, isLoading])\n\n    useBottomScrollListener(handleSearchOnBottom)\n\n    useEffect(() => {\n\n        let searchParams = queryString.parse(location.search);\n\n        const params = {\n            search: searchParams.title,\n            sort: searchParams.sort ?? '',\n            filter: searchParams.filter ?? '',\n            dir: searchParams.dir ?? 1\n        }\n\n        function getSearchedFilms() {\n            dispatch({\n                type: 'initial-success',\n                payload: { films: location.state.films, params: params }\n            })\n        }\n\n        async function getFilms() {\n            await filmApi.search({ ...params, limit: pageMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'initial-success',\n                        payload: { films: res.data, params: params }\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                    console.error(err)\n                })\n        }\n\n        if (location.state && location.state.films) getSearchedFilms()\n        else getFilms()\n\n    }, [location])\n\n    useEffect(() => {\n        async function getFilms() {\n            await filmApi.search({\n                search: search,\n                sort: sort,\n                filter: filter,\n                dir: dir,\n                skip: films.length,\n                limit: pageMaxFetchCount\n            })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                    console.error(err)\n                })\n        }\n\n        if (isLoading) getFilms()\n\n    }, [dir, films.length, filter, isLoading, search, sort])\n\n    const setRedirect = (e, filmID) => {\n        history.push(`${process.env.REACT_APP_PATH_NAME}film/` + filmID);\n    };\n\n\n    const handleOnclick = (state, type) => {\n\n        let filterClick = filter;\n        let sortClick = sort;\n        let dirClick = dir;\n\n\n        if (state === 'filter') {\n            if (filterClick === type.id) {\n                filterClick = '';\n            } else {\n                filterClick = type.id;\n            }\n        } else {\n            let tmpType = type;\n\n            if (sortClick === type.id) {\n                sortClick = type.id;\n\n\n                if (tmpType.dir === 1) {\n                    tmpType.dir = -1;\n                    dirClick = type.dir;\n                } else if (tmpType.dir === -1) {\n                    tmpType.dir = 1;\n                    sortClick = '';\n                }\n\n                dispatch({\n                    type: 'sorts-change',\n                    payload: tmpType,\n                    resetSort: sortClick === ''\n                })\n\n                dirClick = type.dir\n\n            } else {\n                sortClick = type.id;\n                dirClick = type.dir;\n            }\n\n        }\n\n\n        if (sortClick !== '' && filterClick !== '') {\n            history.push({\n                search: `?title=${search}&sort=${sortClick}&dir=${dirClick}&filter=${filterClick}`,\n            });\n\n        } else if (sortClick === '' && filterClick !== '') {\n            history.push({\n                search: `?title=${search}&filter=${filterClick}`,\n            });\n        } else if (sortClick !== '' && filterClick === '') {\n            history.push({\n                search: `?title=${search}&sort=${sortClick}&dir=${dirClick}`,\n            });\n        } else if (sortClick === '' && filterClick === '') {\n            history.push({\n                search: `?title=${search}`,\n            });\n        }\n\n    };\n\n    return (\n        <>\n            <RippleButton className=\"mt-3 mx-3 search-button\"\n                onClick={() => setIsOpen(!isOpen)}>\n                <span\n                    aria-controls=\"filter-collapse\"\n                    aria-expanded={isOpen}\n                    className=\"p-2\">\n                    <FontAwesomeIcon style={{ cursor: \"pointer\" }} icon={faFilter} />\n                </span>\n            </RippleButton>\n            <Collapse in={isOpen}>\n                <Row id=\"filter-collapse\" className=\"mx-2\">\n                    <Col className=\"mt-4\" sm={4}>\n                        <p style={{ 'fontWeight': 500 }}>UPLOAD DATE</p>\n\n                        <Col sm={8} className=\"mt-3 mb-3 divider\" />\n\n\n                        {\n                            filters.map((filterTmp) => {\n                                return (<p key={filterTmp.id} style={filter === filterTmp.id ?\n                                    { fontWeight: 700, fontSize: 80 + '%' } :\n                                    { fontWeight: 400, fontSize: 80 + '%' }}\n                                    onClick={() => handleOnclick('filter', filterTmp)}\n                                    className=\"search-filter\">{filterTmp.title}</p>)\n                            })\n                        }\n\n                    </Col>\n\n                    <Col className=\"mt-4\" sm={4}>\n                        <p style={{ 'fontWeight': 500 }}>SORT BY</p>\n\n                        <Col sm={8} className=\"mt-3 mb-3 divider\" />\n\n                        {\n                            sorts.map((sortTmp) => {\n                                return (<Col key={sortTmp.id} className=\"d-flex\">\n                                    <p style={sort === sortTmp.id ?\n                                        { fontWeight: 700, fontSize: 80 + '%' } :\n                                        { fontWeight: 400, fontSize: 80 + '%' }}\n                                        onClick={() => handleOnclick('sort', sortTmp)}\n                                        className=\"search-filter\">{sortTmp.title}\n                                    </p>\n                                    {sort === sortTmp.id && sortTmp.dir === 1 ?\n                                        <FontAwesomeIcon className=\"ms-2\" icon=\"sort-up\" /> :\n                                        sort === sortTmp.id && sortTmp.dir === -1 ?\n                                            <FontAwesomeIcon className=\"ms-2\" icon=\"sort-down\" /> : \"\"}\n                                </Col>)\n                            })\n                        }\n\n                    </Col>\n\n                </Row>\n            </Collapse>\n\n            <Col sm={12} className=\"mt-2 mb-3 divider\" />\n\n            <Row className=\"mx-2 mt-4\">\n                {\n                    films.map((film, index) => {\n                        const time = parseSearchDate(film);\n\n                        return <Col xs={12} sm={12} lg={8}\n                            key={film.id}>\n                            <Col className=\"play-outer-container m-0 mb-1\"\n                                onClick={(e) => {\n                                    const isPlaylistButton = checkIfPlaylistButtonClick(e.target)\n                                    if (!isPlaylistButton) setRedirect(e, film.id)\n\n\n                                }} >\n                                <Row className=\"search-style mb-4 m-0\">\n                                    <Col xs={8} sm={4} className=\"p-0\">\n                                        <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                                            <BlurredImageComponent\n                                                image={`${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`} />\n                                            <FontAwesomeIcon className=\"play-middle\" icon=\"play\" />\n                                        </div>\n                                    </Col>\n                                    <Col xs={4} sm={8}>\n                                        <Row className=\"m-0\">\n                                            <Col className=\"p-0 mb-1\"\n                                                style={{\n                                                    flex: '0 0 auto !important',\n                                                    width: 'calc(83.33333333% - 24px) !important'\n                                                }}>\n                                                <Truncate lines={1}\n                                                    className=\"mb-0 search-title fw-bold\">\n                                                    {film.title}\n                                                </Truncate>\n                                            </Col>\n                                            <Col className=\"d-flex justify-content-end\">\n                                                <PlaylistAddButtonComponent\n                                                    index={index}\n                                                    filmID={film.id} />\n                                            </Col>\n                                        </Row>\n                                        <p className=\"d-none d-sm-inline mb-1 author-nick-search\">\n                                            <small>{film.author_name} &#183; {film.views} views &#183; {time}</small>\n                                        </p>\n\n                                        <p className=\"d-inline d-sm-none mb-0 author-nick-color\">\n                                            <small>{film.author_name} &#183; {film.views} views</small>\n                                        </p>\n\n                                        <small className=\"d-none d-sm-inline\">\n                                            <TextTruncate className=\"mb-0 author-nick-search\"\n                                                line={2} text={film.description} />\n                                        </small>\n\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Col>\n                    })\n                }\n\n            </Row>\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {\n                        (isLoading) &&\n                        <Spinner animation=\"border\" />\n                    }\n                </div>\n            }\n        </>\n\n    )\n}\n\nexport default Search\n"],"sourceRoot":""}