{"version":3,"sources":["components/modals/forgotPassword.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/helpers/input.js","components/modals/reducer.js"],"names":["ForgotPassword","history","useHistory","useReducer","authReducer","authInitialState","state","dispatch","email","isSuccess","isSubmitted","isSending","isError","error","useEffect","a","authApi","then","res","type","catch","err","errorMessage","response","data","errors","payload","console","submitData","id","title","onClose","goBack","onSubmit","e","preventDefault","htmlFor","isInvalid","name","value","onChange","fieldName","target","className","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","Input","placeholder","InputTag","inputRef","useRef","current","classList","add","remove","ref","nick","password","action"],"mappings":"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","file":"static/js/11.5ba2f4f0.chunk.js","sourcesContent":["import React, { useReducer, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Modal from '../helpers/modal';\nimport Input from '../helpers/input';\n\nimport { authInitialState, authReducer } from './reducer';\n\nimport * as authApi from '../../services/authService'\n\nconst ForgotPassword = () => {\n    let history = useHistory()\n\n    const [state, dispatch] = useReducer(authReducer, authInitialState)\n\n    const { email, isSuccess, isSubmitted, isSending, isError, error } = state\n\n    useEffect(() => {\n        async function submitData() {\n\n            await authApi.forget({ email: email })\n                .then(res => {\n                    dispatch({\n                        type: 'success'\n                    })\n                })\n                .catch(err => {\n                    let errorMessage = null;\n\n                    if (err.response && err.response.data && err.response.data.errors)\n                        errorMessage = err.response.data.errors;\n\n                    dispatch({\n                        type: 'error',\n                        payload: errorMessage\n                    })\n\n                    console.error(err)\n                })\n        }\n        if (isSending) submitData()\n    }, [isSending, email])\n\n    const handleSubmitForgotRequest = (e) => {\n        e.preventDefault();\n\n        dispatch({\n            type: 'submit'\n        })\n\n        if (email) {\n            dispatch({\n                type: 'send'\n            })\n        }\n    };\n\n    const modalClose = () => {\n        history.goBack();\n    };\n\n\n    return (\n\n        <Modal id=\"forgotPasswordModal\" title=\"Forgot\" onClose={modalClose}>\n            <form onSubmit={handleSubmitForgotRequest}>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <Input\n                        isInvalid={(isSubmitted && !email)}\n                        type=\"email\" name=\"email\" value={email} onChange={e => dispatch({ type: 'field', fieldName: 'email', payload: e.target.value })} />\n                    <div className=\"invalid-feedback\">\n                        Email is required\n                    </div>\n                </div>\n\n                {\n                    isSuccess &&\n                    <div className=\"alert alert-danger mt-2\">\n                        Email with link to reset password has been sent.\n                    </div>\n                }\n\n                {\n                    isError &&\n                    <div className=\"alert alert-danger mt-2\">\n                        {error ? error : \"Error while sending email.\"}\n                    </div>\n                }\n\n                <div className=\"d-flex align-items-center mt-2\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Reset password\n                    </button>\n\n                    {\n                        isSending &&\n                        <div className=\"spinner-grow ml-2\" />\n                    }\n                </div>\n\n            </form>\n\n        </Modal>\n\n\n    );\n}\n\nexport default ForgotPassword","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useEffect, useRef } from \"react\"\n\nconst Input = ({ isInvalid, onChange, type, name, value, placeholder = '' }) => {\n\n    const InputTag = type === 'textarea' ? 'textarea' : 'input'\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        let ref = inputRef.current\n        if (ref) {\n            if (isInvalid) inputRef.current.classList.add('is-invalid')\n            else inputRef.current.classList.remove('is-invalid')\n        }\n    }, [isInvalid])\n\n    return (\n        <InputTag ref={inputRef} className=\"form-control\"\n            placeholder={placeholder}\n            type={type} name={name}\n            value={value} onChange={onChange} />\n    )\n}\n\nexport default Input","\nexport const authInitialState = {\n    email: '',\n    nick: '',\n    password: '',\n    isSubmitted: false,\n    isSending: false,\n    isSuccess: false,\n    isError: false,\n    error: null\n}\n\nexport const authReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                isSubmitted: false,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'submit': {\n            return {\n                ...state,\n                isError: false,\n                error: null,\n                isSubmitted: true\n            }\n        }\n        case 'send': {\n            return {\n                ...state,\n                isSending: true\n            }\n        }\n        case 'success': {\n            return {\n\n                ...state,\n                isError: false,\n                error: null,\n                isSending: false,\n                isSuccess: true\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isSending: false,\n                isError: true,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}"],"sourceRoot":""}