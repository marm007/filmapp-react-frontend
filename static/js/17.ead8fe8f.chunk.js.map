{"version":3,"sources":["components/dialogs/login.js","pages/login.js","helpers/index.js","components/input.js","reducers/auth-reducer.js"],"names":["Login","login","useContext","UserContext","history","useHistory","location","useLocation","useReducer","authReducer","authInitialState","email","password","isSubmitted","isSending","isError","isSuccess","error","dispatch","onSubmit","event","preventDefault","type","authLogin","then","res","data","user","name","id","token","refreshToken","setTimeout","handleCloseModalWindow","catch","err","errorMessage","response","errors","payload","console","className","htmlFor","isInvalid","value","onChange","e","fieldName","target","disabled","onClick","push","pathname","slice","search","title","onClose","displayCommentDate","comment","date","Date","parse","createdAt","getDate","getMonth","getFullYear","getHours","getMinutes","parseSearchDate","film","today","time","Math","abs","floor","UTC","toSplit","replace","split","historyObject","process","state","Input","placeholder","inputRef","useRef","useEffect","current","classList","add","remove","ref","rows","nick","action"],"mappings":"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","file":"static/js/17.ead8fe8f.chunk.js","sourcesContent":["import React, { useContext, useReducer } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport Input from '../input';\n\nimport { login as authLogin } from '../../services/authService'\n\nimport UserContext from '../../contexts/user/userContext'\nimport { authInitialState, authReducer } from '../../reducers/auth-reducer';\nimport { handleCloseModalWindow } from '../../helpers';\n\nconst Login = () => {\n\n    const { login } = useContext(UserContext);\n\n    let history = useHistory()\n    let location = useLocation()\n\n    const [{ email, password, isSubmitted, isSending, isError, isSuccess, error }, dispatch] = useReducer(authReducer, authInitialState)\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        dispatch({ type: 'submit' })\n\n        if (email && password) {\n            dispatch({ type: 'send' })\n\n            return authLogin({ email, password })\n                .then(res => {\n                    dispatch({\n                        type: 'success'\n                    })\n                    login(res.data.user.name, res.data.user.id, res.data.token, res.data.refreshToken)\n                    setTimeout(() => handleCloseModalWindow(history, '/login', true), 1000)\n                })\n                .catch(err => {\n                    let errorMessage = null;\n\n                    if (err.response && err.response.data && err.response.data.errors)\n                        errorMessage = err.response.data.errors;\n\n                    dispatch({\n                        type: 'error',\n                        payload: errorMessage\n                    })\n\n                    console.error(err)\n                })\n        }\n    }\n\n    const handleForgotPassword = () => {\n        handleCloseModalWindow(history, '/login')\n\n        setTimeout(function () {\n            history.push(`${location.pathname.slice(0, -5)}forgot${location.search}`);\n        }, 500);\n    };\n\n    const handleRegister = () => {\n        handleCloseModalWindow(history, '/login')\n\n        setTimeout(function () {\n            history.push(`${location.pathname.slice(0, -5)}register${location.search}`);\n        }, 500);\n    };\n\n\n\n    return (\n        <>\n            <form onSubmit={isSending ? null : handleSubmit}>\n                <div>\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\n                    <Input isInvalid={isSubmitted && !email} type=\"email\" name=\"email\" value={email}\n                        onChange={e => dispatch({ type: 'field', fieldName: 'email', payload: e.target.value })} />\n                    <div className=\"invalid-feedback\">\n                        Email is required\n                    </div>\n                </div>\n\n                <div className=\"mt-2\">\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\n                    <Input isInvalid={isSubmitted && !password} type=\"password\" name=\"password\"\n                        value={password} onChange={e => dispatch({ type: 'field', fieldName: 'password', payload: e.target.value })} />\n                    <div className=\"invalid-feedback\">\n                        Password is required\n                    </div>\n                </div>\n\n                <div className=\"d-flex align-items-center mt-2\">\n                    <button disabled={isSending} type=\"submit\" className=\"btn btn-primary\">\n                        Login\n                    </button>\n                    {\n                        isSending &&\n                        <div className=\"spinner-grow ml-2\" />\n                    }\n                </div>\n            </form>\n\n            {\n                isError &&\n                <div className=\"alert alert-danger mt-2 mb-0\">\n                    {error ? error : 'Error while logging in.'}\n                </div>\n            }\n\n            {\n                isSuccess &&\n                <div className=\"alert alert-success mt-2 mb-0\">\n                    You are now logged in.\n                </div>\n            }\n\n            <button onClick={handleRegister} className=\"p-0 mt-2 btn btn-link\">Register</button>\n\n            <div className=\"col-12 col-sm-12 p-0 m-0 \">\n                <button type=\"button\" onClick={handleForgotPassword} className=\"p-0 mt-2 btn btn-link\">Forgot password?</button>\n            </div>\n        </>\n    );\n}\n\nexport default Login","import { useHistory } from 'react-router-dom'\n\nimport Modal from '../components/modal';\nimport LoginComponent from '../components/dialogs/login';\n\nimport { handleCloseModalWindow } from '../helpers';\n\nexport default function Login() {\n\n\n    let history = useHistory()\n\n    const modalClose = () => {\n        handleCloseModalWindow(history, '/login')\n    };\n\n    return (\n        <Modal id=\"loginModal\" title=\"Login\" onClose={modalClose}>\n            <LoginComponent />\n        </Modal>\n    );\n}","export const displayCommentDate = (comment) => {\n    let date = new Date(Date.parse(comment.createdAt));\n    let time = (('0' + date.getDate()).slice(-2) + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-'\n        + ('0' + date.getFullYear()).slice(-2)\n        + ' o ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2))\n    return time;\n};\n\nexport const parseSearchDate = (film) => {\n\n    let date = new Date(Date.parse(film.createdAt));\n    let today = new Date();\n\n\n    let time = Math.abs(Math.floor((\n        Date.UTC(\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes()) -\n        Date.UTC(\n            today.getFullYear(),\n            today.getMonth(),\n            today.getDate(),\n            today.getHours(),\n            today.getMinutes()))\n        / (1000 * 60)));\n\n    if (time / 60 >= 1) {\n        time /= 60;\n\n        if (time / 24 >= 1) {\n\n            time /= 24;\n\n            if (time / 30 >= 1) {\n\n                time /= 30;\n\n                if (time / 12 >= 1) {\n\n                    time = time / 12;\n                    time = Math.floor(time) + ' years ';\n\n                } else {\n                    time = Math.floor(time) + ' months ';\n                }\n\n            } else {\n                time = Math.floor(time) + ' days ';\n            }\n\n        } else {\n            time = Math.floor(time) + ' hours ';\n        }\n    } else {\n        time = Math.floor(time) + ' minutes ';\n    }\n\n    time = time + 'ago';\n\n    return time;\n};\n\nexport const handleCloseModalWindow = (history, toSplit, replace = false) => {\n\n    let pathname = history.location.pathname.split(toSplit)[0]\n\n    const historyObject = {\n        pathname: pathname === '' ? process.env.REACT_APP_PATH_NAME : pathname,\n        search: history.location.search,\n        state: history.location.state\n    }\n\n    if (replace) {\n        history.replace(historyObject)\n    }\n    else {\n        history.push(historyObject)\n    }\n\n}","import { useEffect, useRef } from \"react\"\n\nconst Input = ({ isInvalid, onChange, type, name, value, placeholder = '' }) => {\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        let ref = inputRef.current\n        if (ref) {\n            if (isInvalid) inputRef.current.classList.add('is-invalid')\n            else inputRef.current.classList.remove('is-invalid')\n        }\n    }, [isInvalid])\n\n    return type === 'textarea' ?\n        <textarea ref={inputRef} className=\"form-control\"\n            placeholder={placeholder}\n            type={type} name={name}\n            value={value} onChange={onChange} rows={8}/> :\n        <input ref={inputRef} className=\"form-control\"\n            placeholder={placeholder}\n            type={type} name={name}\n            value={value} onChange={onChange} />\n\n\n}\n\nexport default Input","\nexport const authInitialState = {\n    email: '',\n    nick: '',\n    password: '',\n    isSubmitted: false,\n    isSending: false,\n    isSuccess: false,\n    isError: false,\n    error: null\n}\n\nexport const authReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                isSubmitted: false,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'submit': {\n            return {\n                ...state,\n                isError: false,\n                error: null,\n                isSubmitted: true\n            }\n        }\n        case 'send': {\n            return {\n                ...state,\n                isSending: true\n            }\n        }\n        case 'success': {\n            return {\n\n                ...state,\n                isError: false,\n                error: null,\n                isSending: false,\n                isSuccess: true\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isSending: false,\n                isError: true,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}"],"sourceRoot":""}