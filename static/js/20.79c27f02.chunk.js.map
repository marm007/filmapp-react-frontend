{"version":3,"sources":["helpers/hooks/useWindowsWidth.js","images/image_not_found.png","components/pages/film/reducers/previewReducer.js","helpers/contexts/film/filmContext.js","components/pages/film/preview.js","components/pages/film/reducers/recommendationsReducer.js","components/pages/film/recommendations.js","components/pages/film/reducers/commentsReducer.js","services/commentService.js","components/pages/film/comments.js","components/pages/film/reducers/playlistReducer.js","components/pages/film/playlistContainer.js","helpers/contexts/film/filmProvider.js","components/pages/film/index.js"],"names":["useWindowsWidth","width","useState","isScreenSmall","setIsScreenSmall","checkScreenSize","window","innerWidth","useEffect","addEventListener","removeEventListener","initialPreviewState","film","img","video","title","views","likes","dislikes","description","isLiked","isDisliked","isLikeButtonClicked","likeAction","isDescExpanded","previewReducer","state","action","type","fieldName","payload","FilmContext","createContext","FilmPreview","props","history","useHistory","location","useLocation","user","useContext","UserContext","filmDispatch","playerRef","useCallback","node","getBoundingClientRect","height","setPlayerNode","useReducer","dispatch","playerNode","measure","a","requests","filmApi","match","params","id","auth","push","userApi","details","Promise","allSettled","filmResponse","filmViewResponse","userResponse","status","filmData","value","data","comments","commentsCount","comments_count","process","liked","indexOf","disliked","handleGetFilm","likeResult","likeData","userResult","console","error","response","pathname","handleLike","handleTruncate","e","preventDefault","TruncateButton","className","onClick","ref","playsInline","poster","src","icon","faEye","style","cursor","faThumbsUp","faThumbsDown","whiteSpace","textAlign","line","truncateText","text","textTruncateChild","recommendationsInitialState","films","isLoading","isAllFetched","isInitialLoaded","recommendationsReducer","length","recommendationsMaxFetchCount","FilmsRecommendations","filmState","handleRecommendationsOnBottom","useBottomScrollListener","exclude","limit","then","res","forEach","catch","err","isPreviewLoaded","initialLoad","skip","fetchData","map","index","isRecommendations","handleRedirect","commentsInitialState","isAdding","isRemoving","toRemove","isSorting","sort","sorts","dir","commentsReducer","commentsMaxFetchCount","filter","comment","sortToChange","all","film_id","axios","get","remove","delete","headers","authHeader","Comments","RemoveModalContext","showModal","clear","removeModalData","handleOnCommentsBottom","commentApi","loadSortedComments","loadComments","form","post","addComment","substring","concat","removeComment","sortParams","sortComments","sortTmp","tmpSort","handleSortComments","href","role","onSubmit","placeholder","onChange","target","disabled","author_name","displayCommentDate","author_id","handleRemoveComment","filmPlaylistInitialState","playlist","currentFilm","currentFilmIndex","isRemovingPlaylist","isRemovingFilm","removingFilmId","headerHeight","playerHeight","filmPlaylistReducer","filtered","findIndex","is_public","PlaylistContainer","clearPlaylist","headerRef","playlistApi","filmIndex","filmId","Array","prototype","call","reloadPlaylist","handleReloadPlaylist","parsed","queryString","parse","search","list","handleGetPlaylist","removePlaylist","films_id","is_remove_films","removeFilm","sm","handleRemove","isPublic","isProfile","dispatchPrivacyUpdate","onYReachEnd","onScrollY","isNonExisting","fontWeight","alt","image_not_found","image","filmInitialState","filmReducer","FilmProvider","children","Provider","Film","onSmallScreen","useWindowWidth","historyObject"],"mappings":"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","file":"static/js/20.79c27f02.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useWindowsWidth = (width = 600) => {\n  const [isScreenSmall, setIsScreenSmall] = useState(false);\n\n  let checkScreenSize = () => {\n    setIsScreenSmall(window.innerWidth < width);\n  };\n  useEffect(() => {\n    checkScreenSize();\n    window.addEventListener(\"resize\", checkScreenSize);\n\n    return () => window.removeEventListener(\"resize\", checkScreenSize);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return isScreenSmall;\n};\n\nexport default useWindowsWidth;\n","export default __webpack_public_path__ + \"static/media/image_not_found.c4ba1e76.png\";","const initialFilm = {\n    img: '',\n    video: '',\n    film: '',\n    title: '',\n    views: '',\n    likes: '',\n    dislikes: '',\n    description: `\\r\\n\\n\\n`,\n}\n\nexport const initialPreviewState = {\n    film: initialFilm,\n    isLiked: false,\n    isDisliked: false,\n    isLikeButtonClicked: false,\n    likeAction: null,\n    isDescExpanded: false\n}\n\nexport function previewReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'like': {\n            return {\n                ...state,\n                isLikeButtonClicked: true,\n                likeAction: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                film: action.film,\n                isLiked: action.isLiked,\n                isDisliked: action.isDisliked,\n                isLikeButtonClicked: false,\n                likeAction: null,\n                isDescExpanded: false\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLikeButtonClicked: false,\n                likeAction: null\n            }\n        }\n        default: return state\n    }\n}","import { createContext } from 'react'\nconst FilmContext = createContext();\nexport default FilmContext","import React, { useState, useEffect, useCallback, useContext, useReducer } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faThumbsDown, faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { Player } from 'video-react';\nimport TextTruncate from 'react-text-truncate';\nimport \"../../../../node_modules/video-react/dist/video-react.css\";\n\nimport { initialPreviewState, previewReducer } from './reducers/previewReducer';\n\nimport * as filmApi from '../../../services/filmService'\nimport * as userApi from '../../../services/userService'\n\nimport FilmContext from '../../../helpers/contexts/film/filmContext'\nimport UserContext from '../../../helpers/contexts/user/userContext';\n\n\nconst FilmPreview = (props) => {\n\n    let history = useHistory()\n    let location = useLocation()\n\n    const { user } = useContext(UserContext)\n\n    // eslint-disable-next-line no-unused-vars\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const playerRef = useCallback(node => {\n        if (node !== null) {\n            filmDispatch({\n                type: 'field',\n                fieldName: 'playerHeight',\n                payload: node.getBoundingClientRect().height\n            })\n            setPlayerNode(node)\n        }\n    }, [filmDispatch])\n\n    const [state, dispatch] = useReducer(previewReducer, initialPreviewState)\n\n    const { film, isLiked, isDisliked, isLikeButtonClicked, likeAction, isDescExpanded } = state\n\n    const [playerNode, setPlayerNode] = useState(null);\n\n\n    useEffect(() => {\n        if (playerNode) {\n\n            const measure = () => {\n                filmDispatch({\n                    type: 'field',\n                    fieldName: 'playerHeight',\n                    payload: playerNode.getBoundingClientRect().height\n                })\n            }\n\n            window.addEventListener(\"resize\", measure);\n\n            return () => window.removeEventListener(\"resize\", measure);\n        }\n    }, [playerNode, filmDispatch]);\n\n    useEffect(() => {\n        async function handleGetFilm() {\n            let requests = [filmApi.index(props.match.params.id), filmApi.view(props.match.params.id)]\n            if (user.auth) requests.push(userApi.me({ details: true }))\n\n            const [filmResponse, filmViewResponse, userResponse] = await Promise.allSettled(requests);\n\n            if (filmResponse.status === \"rejected\" || filmViewResponse.status === \"rejected\") {\n                filmDispatch({\n                    type: 'field',\n                    fieldName: 'error',\n                    payload: true\n                })\n                return\n            }\n\n\n            const filmData = filmResponse.value.data\n\n            filmDispatch({\n                type: 'success',\n                comments: filmData.comments,\n                commentsCount: filmData.comments_count\n            })\n\n            const film = {\n                ...filmData,\n                img: `${process.env.REACT_APP_API_URL}films/${filmData.id}/thumbnail?width=poster`,\n                video: `${process.env.REACT_APP_API_URL}films/${filmData.id}/video`,\n                views: filmViewResponse.value.data.views\n            }\n            let isLiked = false\n            let isDisliked = false\n\n\n            if (userResponse && userResponse.status === \"fulfilled\") {\n                const details = userResponse.value.data.details\n                isLiked = details.liked.indexOf(props.match.params.id) > -1\n                isDisliked = details.disliked.indexOf(props.match.params.id) > -1\n            }\n\n            dispatch({\n                type: 'success',\n                film: film,\n                isLiked: isLiked,\n                isDisliked: isDisliked\n            })\n\n        }\n        handleGetFilm()\n    }, [props.match.params.id, filmDispatch, user.auth])\n\n    useEffect(() => {\n        async function handleLike() {\n            if (likeAction === null) return\n\n            try {\n                const likeResult = await filmApi.like(film.id, { action: likeAction })\n\n                let likeData = likeResult.data\n                likeData.img = `${process.env.REACT_APP_API_URL}films/${likeData.id}/thumbnail?width=poster`\n                likeData.video = `${process.env.REACT_APP_API_URL}films/${likeData.id}/video`\n\n                const userResult = await userApi.me({ details: true })\n                const details = userResult.data.details\n                const isLiked = details.liked.indexOf(likeData.id) > -1\n                const isDisliked = details.disliked.indexOf(likeData.id) > -1\n\n                dispatch({\n                    type: 'success',\n                    film: likeData,\n                    isLiked: isLiked,\n                    isDisliked: isDisliked\n                })\n\n            } catch (err) {\n                console.error(err)\n                dispatch({\n                    type: 'error'\n                })\n                if (err.response && err.response.status === 401) {\n                    history.push(`${location.pathname}/login`);\n                }\n            }\n        }\n\n        if (isLikeButtonClicked) handleLike()\n    }, [film.id, isLikeButtonClicked, likeAction, history, location])\n\n    const handleTruncate = (e) => {\n        e.preventDefault();\n        dispatch({\n            type: 'field',\n            fieldName: 'isDescExpanded',\n            payload: !isDescExpanded\n        })\n    }\n\n    const handleLike = (action) => {\n        if (isLikeButtonClicked) return\n        dispatch({\n            type: 'like',\n            payload: action\n        })\n\n    };\n\n    const TruncateButton = (title) => {\n        return (<span>\n            <button className=\"btn btn-link p-0 m-0 mb-1 title fw-bold\"\n                onClick={handleTruncate}>{title}</button>\n        </span>)\n    }\n    return (\n\n        <div>\n            <div className=\"col col-sm-12\">\n                <div ref={playerRef}>\n                    <Player\n                        playsInline\n                        poster={film.img}\n                        src={film.video} />\n                </div>\n            </div>\n            {\n                film &&\n                <>\n                    <div className=\"col col-sm-12 mt-4\">\n                        <div className=\"row p-0 m-0\">\n                            <div className=\"col col-sm-12 p-0\">\n                                {!film.title && <p className=\"fw-bold\"><br /></p>}\n                                <p className=\"fw-bold\">{film.title}</p>\n                            </div>\n                            <div className=\"col-4 col-sm-4 p-0\">\n                                <p><FontAwesomeIcon icon={faEye} /> &ensp;{film.views}</p>\n                            </div>\n                            <div className=\"col-4 col-sm-4 text-right d-flex justify-content-end\">\n                                <p style={{ cursor: \"pointer\" }}\n                                    className={isLiked ? 'film-picked-thumb-color' : ''}\n                                    onClick={() => handleLike('like')}>\n                                    <FontAwesomeIcon icon={faThumbsUp} />\n                                    &ensp;{film.likes}\n                                </p>\n                            </div>\n                            <div className=\"col-4 col-sm-4\">\n                                <p style={{ cursor: \"pointer\" }} className={isDisliked ? 'film-picked-thumb-color' : ''}\n                                    onClick={() => handleLike('dislike')}>\n                                    <FontAwesomeIcon icon={faThumbsDown} />\n                                    &ensp;{film.dislikes}\n                                </p>\n                            </div>\n                            <div className=\"col col-sm-12 mt-4 mb-4 divider\" />\n\n                            <div className=\"col col-sm-12 p-0\" style={{ whiteSpace: 'pre-line', textAlign: 'justify' }}>\n                                <TextTruncate line={!isDescExpanded && 2}\n                                    truncateText=\"…\"\n                                    text={film.description}\n                                    textTruncateChild={TruncateButton('Show more')} />\n\n                                {isDescExpanded && TruncateButton('Show less')}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col col-sm-12 mt-4 mb-2 divider\" />\n                </>\n            }\n        </div>\n\n\n    )\n}\n\n\nexport default FilmPreview\n","import { recommendationsMaxFetchCount } from \"../../../../config\"\n\nexport const recommendationsInitialState = {\n    films: null,\n    id: null,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    error: null,\n}\n\nexport function recommendationsReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'clear': {\n            return recommendationsInitialState\n        }\n        case 'initial-success': {\n            return {\n                ...recommendationsInitialState,\n                films: action.films,\n                id: action.id,\n                isInitialLoaded: true\n            }\n        }\n        case 'load': {\n\n            return {\n                ...state,\n                isLoading: true,\n                isAllFetched: false\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                films: [...state.films, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < recommendationsMaxFetchCount\n            }\n        }\n        case 'error': {\n            return {\n                ...recommendationsInitialState,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}\n","import React, { useEffect, useReducer, useCallback, useContext } from 'react';\n\nimport { recommendationsReducer, recommendationsInitialState } from './reducers/recommendationsReducer'\n\nimport Film from '../../helpers/film';\n\nimport * as filmApi from '../../../services/filmService'\n\nimport { recommendationsMaxFetchCount } from \"../../../config\"\n\nimport useBottomScrollListener from '../../../helpers/hooks/useBottomScrollListener';\nimport FilmContext from '../../../helpers/contexts/film/filmContext';\n\nconst FilmsRecommendations = (props) => {\n\n    // eslint-disable-next-line no-unused-vars\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(recommendationsReducer, recommendationsInitialState)\n\n    const { films, isLoading, isAllFetched, isInitialLoaded, id, error } = state\n\n    const handleRecommendationsOnBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded && !error && id) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded, error, id])\n\n    useBottomScrollListener(handleRecommendationsOnBottom)\n\n    useEffect(() => {\n        async function initialLoad() {\n            await filmApi.all({ exclude: props.match.params.id, limit: recommendationsMaxFetchCount })\n                .then(res => {\n                    let films = res.data;\n\n                    films.forEach(film => {\n                        film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`\n\n                    });\n\n                    dispatch({\n                        type: 'initial-success',\n                        films: films,\n                        id: props.match.params.id\n                    })\n\n\n                })\n                .catch(err => console.error(err))\n        }\n\n        dispatch({\n            type: 'clear'\n        })\n\n        if (filmState.isPreviewLoaded) {\n            initialLoad()\n        }\n    }, [props.match.params.id, filmState.isPreviewLoaded])\n\n    useEffect(() => {\n        if (filmState.error) {\n            dispatch({\n                type: 'error',\n                payload: filmState.error\n            })\n        }\n    }, [filmState.error])\n\n    useEffect(() => {\n        async function fetchData() {\n            await filmApi.all({ exclude: id, skip: films.length, limit: recommendationsMaxFetchCount }).then(res => {\n                let films = res.data;\n\n                films.forEach(film => {\n                    film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`\n\n                });\n\n                dispatch({\n                    type: 'success',\n                    payload: films\n                })\n            }).catch(err => console.error(err))\n        }\n        if (isLoading && films && id) fetchData()\n    }, [isLoading, id, films])\n\n    return (\n\n        <div className=\"col\">\n\n            {\n                films && films.map((film, index) => <Film key={film.id} film={film} index={index} isRecommendations={true} filmDispatch={filmDispatch} handleRedirect={() => props.handleRedirect(film.id)} />)\n            }\n\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {(isLoading) && !error && <div className=\"spinner-border\" />}\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default FilmsRecommendations\n","import { commentsMaxFetchCount } from \"../../../../config\"\n\nexport const commentsInitialState = {\n    comments: null,\n    commentsCount: null,\n    text: '',\n    id: null,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    isAdding: false,\n    isRemoving: false,\n    toRemove: null,\n    isSorting: false,\n    sort: null,\n    sorts: [\n        { id: 'created_at', title: 'By date', dir: 1 },\n        { id: 'author_name', title: 'By author name', dir: 1 }\n    ],\n    error: null\n}\n\nexport function commentsReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'clear': {\n            return {\n                ...commentsInitialState,\n                id: action.id\n            }\n        }\n        case 'load': {\n            return !state.isLoading && !state.isAllFetched && state.isInitialLoaded && !state.isAdding &&\n                !state.error && state.id && !state.isSorting ?\n                {\n                    ...state,\n                    isLoading: true\n                } : state\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                comments: action.comments,\n                commentsCount: action.commentsCount,\n                isAllFetched: action.comments.length < commentsMaxFetchCount,\n                isInitialLoaded: true,\n                error: null,\n            }\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                comments: [...state.comments, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < commentsMaxFetchCount\n            }\n        }\n        case 'add': {\n            return {\n                ...state,\n                isAdding: true,\n                error: null\n            }\n        }\n        case 'add-success': {\n            return {\n                ...state,\n                text: '',\n                commentsCount: state.commentsCount + 1,\n                comments: [action.payload, ...state.comments],\n                isAdding: false\n            }\n        }\n        case 'remove': {\n            return {\n                ...state,\n                isRemoving: true,\n                toRemove: action.payload\n            }\n        }\n        case 'remove-success': {\n            return {\n                ...state,\n                isRemoving: false,\n                toRemove: null,\n                commentsCount: state.commentsCount - 1,\n                comments: state.toRemove ? state.comments.filter(comment => comment.id !== state.toRemove.id) : state.data\n            }\n        }\n        case 'sort': {\n            return {\n                ...state,\n                comments: null,\n                isAllFetched: false,\n                sorts: state.sorts.map(sort => {\n                    if (sort.id === action.sortToChange.id) return action.sortToChange\n                    else return sort\n                }),\n                sort: action.sort,\n                isSorting: true,\n            }\n        }\n        case 'sort-success': {\n            return {\n                ...state,\n                isSorting: false,\n                comments: action.payload,\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isAdding: false,\n                isLoading: false,\n                isSorting: false,\n                error: action.payload,\n            }\n        }\n        default: return state\n    }\n}","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const all = (film_id, params) => axios.get(`films/${film_id}/comments`, { params })\n\nexport const create = (film_id, form) => axios.post(`films/${film_id}/comments`, form, { headers: authHeader() })\n\nexport const update = (id, update) => axios.put(`comments/${id}`, update, { headers: authHeader() })\n\nexport const remove = (id) => axios.delete(`comments/${id}`, { headers: authHeader() })\n\nexport const sort = (film_id, params) => axios.get(`films/${film_id}/comments/sort`, { params, headers: authHeader() })\n\n\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useContext, useEffect, useReducer, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { commentsReducer, commentsInitialState } from './reducers/commentsReducer';\n\nimport * as commentApi from '../../../services/commentService'\n\nimport { commentsMaxFetchCount } from \"../../../config\"\n\nimport { displayCommentDate } from '../../../helpers';\nimport useBottomScrollListener from '../../../helpers/hooks/useBottomScrollListener';\nimport UserContext from '../../../helpers/contexts/user/userContext';\nimport FilmContext from '../../../helpers/contexts/film/filmContext';\nimport RemoveModalContext from '../../../helpers/contexts/removeModal/removeModalContext';\nimport RippleButton from '../../helpers/rippleButton';\n\nconst Comments = (props) => {\n\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\n\n    const { user } = useContext(UserContext);\n\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(commentsReducer, commentsInitialState)\n    const {\n        comments,\n        commentsCount,\n        text,\n        isInitialLoaded,\n        isLoading,\n        isAllFetched,\n        isAdding,\n        id,\n        isRemoving,\n        toRemove,\n        isSorting,\n        sort,\n        sorts,\n        error\n    } = state\n\n    const handleOnCommentsBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded && !isAdding && !error && id && !isSorting) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded, isAdding, error, id, isSorting])\n\n    useBottomScrollListener(handleOnCommentsBottom)\n\n    useEffect(() => {\n        dispatch({\n            type: 'clear',\n            id: props.match.params.id\n        })\n    }, [props.match.params.id])\n\n    useEffect(() => {\n        if (filmState.error) {\n            dispatch({\n                type: 'error',\n                payload: filmState.error\n            })\n        }\n    }, [filmState.error])\n\n    useEffect(() => {\n        function getCommentsFromContext() {\n            dispatch({\n                type: 'initial-success',\n                comments: filmState.comments,\n                commentsCount: filmState.commentsCount,\n            })\n        }\n\n        if (filmState.comments && filmState.commentsCount !== null) getCommentsFromContext()\n    }, [filmState.comments, filmState.commentsCount, filmDispatch])\n\n    useEffect(() => {\n        async function loadComments() {\n            await commentApi.all(id, { skip: comments.length, limit: commentsMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                })\n        }\n        async function loadSortedComments() {\n            await commentApi.sort(id, { [sort.id]: sort.dir, skip: comments.length, limit: commentsMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                })\n        }\n        if (isLoading && isInitialLoaded && !isAdding &&\n            comments && id && !isSorting) {\n            if (!sort)\n                loadComments()\n            else\n                loadSortedComments()\n        }\n    }, [isLoading, isAdding, id, comments, isInitialLoaded, isSorting, sort])\n\n\n    useEffect(() => {\n        const addComment = async () => {\n            const comment = { text: text }\n\n            await commentApi.create(id, comment)\n                .then(res => {\n                    dispatch({\n                        type: 'add-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error',\n                        payload: err.response.status\n                    })\n                })\n        };\n        if (isAdding && !isLoading && id) addComment()\n    }, [isAdding, isLoading, id, text])\n\n    useEffect(() => {\n        async function removeComment() {\n            await commentApi.remove(toRemove.id)\n                .then(res => {\n                    dispatch({ type: 'remove-success' })\n                    clear()\n                })\n                .catch(err => {\n                    clear()\n                    console.error(err)\n                })\n        }\n\n        if (isRemoving && toRemove && removeModalData.isRemoving &&\n            removeModalData.id === toRemove.id && removeModalData.type === 'comment' &&\n            removeModalData.title === toRemove.text.substring(0, 10).concat('...')) removeComment()\n    }, [isRemoving, toRemove, clear, removeModalData])\n\n    useEffect(() => {\n        async function sortComments() {\n            const sortParams = sort ? { [sort.id]: sort.dir, limit: commentsMaxFetchCount } : {}\n\n            await commentApi.sort(id, sortParams)\n                .then(res => {\n                    dispatch({ type: 'sort-success', payload: res.data })\n                })\n                .catch(err => {\n                    dispatch({ type: 'error', payload: 'Sort error.' })\n                    console.error(err)\n                })\n        }\n        if (isSorting) sortComments()\n    }, [isSorting, sort, id])\n\n    const handleAddComment = () => {\n        dispatch({\n            type: 'add'\n        })\n    }\n\n    const handleRemoveComment = (comment) => {\n        if (removeModalData.isRemoving) return\n        dispatch({ type: 'remove', payload: comment })\n        showModal(comment.id, 'comment', comment.text.substring(0, 10).concat('...'))\n    }\n\n    const handleSortComments = (e, id) => {\n        e.preventDefault()\n\n        let sortToChange = null\n\n        switch (id) {\n            case 'created_at':\n                sortToChange = sorts[0]\n\n                break;\n            case 'author_name':\n                sortToChange = sorts[1]\n                break;\n            default:\n                return;\n        }\n\n        let tmpSort = null\n\n        if (sort && sort.id === sortToChange.id) {\n            sortToChange.dir *= -1\n            tmpSort = sortToChange\n            if (sortToChange.dir === 1) {\n                tmpSort = null\n            }\n        } else {\n            tmpSort = sortToChange\n        }\n\n        dispatch({\n            type: 'sort',\n            sortToChange: sortToChange,\n            sort: tmpSort\n        })\n\n    };\n\n\n    return (\n\n        <div className=\"col\">\n            <div className=\"row p-0 mt-4 mb-4\">\n                <div className=\"col-7 col-sm-5 col-md-4 d-flex align-items-center \">\n                    {commentsCount !== null && <span>{commentsCount}{commentsCount === 1 ? ' comment' : ' comments'} </span>}\n                </div>\n                <div className=\"dropdown col-2 col-sm-2\">\n                    <button className=\"btn btn-secondary dropdown-toggle\" id=\"sortDropDown\"\n                        data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        Sort\n                    </button>\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"#sortDropDown\">\n                        {\n                            sorts.map(sortTmp => {\n                                return (\n                                    <li key={sortTmp.id} onClick={e => handleSortComments(e, sortTmp.id)}>\n                                        <a className={`dropdown-item${(sort && sortTmp.id === sort.id) ? ' active' : ''}`} href=\"#\" role=\"button\">\n                                            {sortTmp.title}\n                                            {sort && sort.id === sortTmp.id && sortTmp.dir === 1 ?\n                                                <FontAwesomeIcon className=\"ms-2\" icon=\"sort-up\" /> :\n                                                sort && sort.id === sortTmp.id && sortTmp.dir === -1 ?\n                                                    <FontAwesomeIcon className=\"ms-2\" icon=\"sort-down\" /> : \"\"}\n                                        </a></li>);\n                            })\n                        }\n\n                    </ul>\n                </div>\n            </div>\n            <form onSubmit={(text && !isAdding) ? handleAddComment : null}>\n                <div id=\"fiordur\">\n                    <input type=\"text\" className=\"form-input\" placeholder=\"Comment\" value={text}\n                        onChange={e => dispatch({ type: 'field', fieldName: 'text', payload: e.target.value })}\n                    />\n                </div>\n                <div className=\"col d-flex justify-content-end\" >\n                    <button disabled={isAdding || !text}\n                        type=\"submit\"\n                        className=\"btn btn-primary mt-3\">\n                        Submit\n                    </button>\n                </div>\n            </form>\n\n            {\n                isAdding && <div style={{ height: 32 + 'px' }} className=\"d-flex justify-content-center\">\n                    <div className=\"spinner-border\" />\n                </div>\n            }\n            {\n                comments && comments.map(comment => {\n                    return (\n                        <div className=\"col col-sm-12 p-0 mt-4 remove-container\" key={comment.id}>\n                            <div className=\"d-flex\">\n                                <p className=\"m-0 fw-bold\">\n                                    <small className=\"m-0 fw-bold\">{comment.author_name}&nbsp;</small>\n                                </p>\n                                <p >\n                                    <small className=\"m-0\">{displayCommentDate(comment)}</small>\n                                </p>\n                                {\n                                    user.id === comment.author_id &&\n\n                                    <RippleButton className=\"m-button cursor-pointer button-ripple-24 d-flex justify-content-center align-items-center remove-holder p-0 m-0 ms-auto\"\n                                        onClick={() => handleRemoveComment(comment)}>\n                                        <FontAwesomeIcon icon=\"trash-alt\" />\n\n                                    </RippleButton>\n                                }\n                            </div>\n                            <p className=\"d-block d-sm-block\">\n                                <small>{comment.text}</small>\n                            </p>\n                        </div>\n                    )\n                })\n            }\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {(isLoading || isSorting) && !error && <div className=\"spinner-border\" />}\n                </div>\n            }\n\n        </div>\n\n    )\n}\n\nexport default Comments","\nexport const filmPlaylistInitialState = {\n    playlist: null,\n    currentFilm: null,\n    currentFilmIndex: 0,\n    isLoading: false,\n    isRemovingPlaylist: false,\n    isRemovingFilm: false,\n    removingFilmId: null,\n    headerHeight: null,\n    playerHeight: null\n}\n\nexport const filmPlaylistReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                isLoading: false,\n                playlist: action.playlist,\n                currentFilm: action.currentFilm,\n                currentFilmIndex: action.currentFilmIndex\n            }\n        }\n        case 'clear': {\n            return filmPlaylistInitialState\n        }\n        case 'remove-film': {\n            return {\n                ...state,\n                removingFilmId: action.payload,\n                isRemovingFilm: true\n            }\n        }\n        case 'remove-film-success': {\n\n            if (!state.removingFilmId)\n                return {\n                    ...state,\n                    isRemovingFilm: false\n                }\n\n            const filtered = state.playlist.films.filter(film => film.id !== state.removingFilmId)\n            return {\n                ...state,\n                currentFilm: state.removingFilmId === state.currentFilm ? null : state.currentFilm,\n                currentFilmIndex: state.removingFilmId === state.currentFilm ? 0 : filtered.findIndex(film => film.id === state.currentFilm) + 1,\n                playlist: {\n                    ...state.playlist,\n                    films: filtered\n                },\n                isRemovingFilm: false,\n            }\n        }\n        case 'change-playlist-privacy-success': {\n            return {\n                ...state,\n                playlist: { ...state.playlist, is_public: action.payload.is_public }\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                error: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}","import React, { useContext, useEffect, useCallback, useReducer } from 'react';\nimport { useLocation } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport queryString from \"query-string\";\nimport TextTruncate from \"react-text-truncate\";\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nimport { filmPlaylistInitialState, filmPlaylistReducer } from './reducers/playlistReducer';\n\nimport BlurredImageComponent from '../../helpers/blurredImage';\n\nimport * as playlistApi from '../../../services/playlistService'\n\nimport FilmContext from '../../../helpers/contexts/film/filmContext';\nimport UserContext from '../../../helpers/contexts/user/userContext';\nimport RemoveModalContext from '../../../helpers/contexts/removeModal/removeModalContext';\nimport RemoveButton from '../../helpers/removeButton';\nimport ChangePrivacyButton from '../../helpers/changePrivacyButton';\n\nimport image_not_found from '../../../images/image_not_found.png'; // Tell Webpack this JS file uses this image\n\nconst PlaylistContainer = (props) => {\n\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\n\n    let location = useLocation()\n\n    const { user } = useContext(UserContext)\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(filmPlaylistReducer, filmPlaylistInitialState)\n\n    const {\n        playlist,\n        isRemovingPlaylist,\n        isRemovingFilm,\n        removingFilmId,\n        currentFilm,\n        currentFilmIndex,\n        headerHeight,\n        playerHeight,\n        error\n    } = state\n\n    const clearPlaylist = () => {\n        dispatch({ type: 'clear' })\n    }\n\n    const headerRef = useCallback(node => {\n        if (node !== null) {\n            dispatch({\n                type: 'field',\n                fieldName: 'headerHeight',\n                payload: node.getBoundingClientRect().height\n            });\n        }\n    }, [])\n\n    useEffect(() => {\n        dispatch({\n            type: 'field',\n            fieldName: 'playerHeight',\n            payload: filmState.playerHeight\n        });\n    }, [filmState.playerHeight])\n\n    useEffect(() => {\n        dispatch({\n            type: 'error',\n            payload: filmState.error\n        });\n    }, [filmState.error])\n\n\n    useEffect(() => {\n        async function handleReloadPlaylist() {\n            await playlistApi.index(playlist.id)\n                .then(res => {\n\n                    let filmIndex = 0\n                    let filmId = null\n\n                    Array.prototype.forEach.call(res.data.films, (film, index) => {\n                        if (film && film.id === props.match.params.id) {\n                            filmIndex = index + 1\n                            filmId = film.id\n                        }\n                    })\n\n                    dispatch({\n                        type: 'success',\n                        playlist: res.data,\n                        currentFilm: filmId,\n                        currentFilmIndex: filmIndex\n                    })\n\n                    filmDispatch({\n                        type: 'field',\n                        fieldName: 'reloadPlaylist',\n                        payload: false\n                    })\n\n                    return res.data\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (filmState.reloadPlaylist && playlist) handleReloadPlaylist()\n\n    }, [filmState.reloadPlaylist, playlist, filmDispatch, props.match.params.id])\n\n\n\n    useEffect(() => {\n        const parsed = queryString.parse(location.search);\n        if (!parsed.list) {\n            clearPlaylist()\n            return\n        }\n\n        async function handleGetPlaylist() {\n            await playlistApi.index(parsed.list).then(res => {\n\n                let filmIndex = 0\n                let filmId = null\n\n                Array.prototype.forEach.call(res.data.films, (film, index) => {\n                    if (film && film.id === props.match.params.id) {\n                        filmIndex = index + 1\n                        filmId = film.id\n                    }\n                })\n\n                dispatch({\n                    type: 'success',\n                    playlist: res.data,\n                    currentFilm: filmId,\n                    currentFilmIndex: filmIndex\n                })\n                return res.data\n            }).catch(err => {\n                console.error(err)\n                clearPlaylist()\n            })\n        }\n        if (!error && filmState.isPreviewLoaded) handleGetPlaylist()\n    }, [props.match.params.id, location.search, error, filmState.isPreviewLoaded])\n\n\n    useEffect(() => {\n        async function removePlaylist() {\n            await playlistApi.remove(playlist.id)\n                .then(res => {\n                    clearPlaylist()\n                    clear()\n                })\n                .catch(err => {\n                    console.error(err)\n                    clear()\n                })\n        }\n        if (isRemovingPlaylist && removeModalData.isRemoving &&\n            removeModalData.id === playlist.id && removeModalData.type === 'playlist' &&\n            removeModalData.title === playlist.title) removePlaylist()\n    }, [clear, isRemovingPlaylist, playlist, removeModalData])\n\n\n    useEffect(() => {\n        async function removeFilm() {\n            await playlistApi.partialUpdate(playlist.id, { films_id: [removingFilmId], is_remove_films: true })\n                .then(res => {\n                    dispatch({\n                        type: 'remove-film-success'\n                    })\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (isRemovingFilm) removeFilm()\n    }, [isRemovingFilm, playlist, removingFilmId])\n\n    const handleRemovePlaylist = () => {\n\n        if (removeModalData.isRemoving) return\n\n        dispatch({\n            type: 'field',\n            fieldName: 'isRemovingPlaylist',\n            payload: true\n        })\n\n        showModal(playlist.id, 'playlist', playlist.title)\n    }\n\n    const handleRemoveFromPlaylist = (id) => {\n        if (isRemovingFilm) return\n\n        dispatch({\n            type: 'remove-film',\n            payload: id\n        })\n    }\n\n\n    return (\n\n        playlist && playerHeight && !error &&\n        <div className='col mb-4'>\n            <div className='col p-0 border'>\n                <div ref={headerRef}\n                    style={{ height: headerHeight + 'px' }}\n                    className=\"col remove-container pt-2 pb-2 film-preview-playlist-header\" sm={12}>\n                    <div className=\"row m-0 px-2\">\n                        <div className=\"button-ripple-div-next-width colbutton-ripple-div-next-width\">\n                            <p className=\"mb-1 fw-bold film-preview-playlist-text-truncate\">{playlist.title}</p>\n                        </div>\n                        <div style={{ width: '24px' }} className=\"p-0 justify-content-end d-flex\">\n                            {\n                                user.id === playlist.author_id &&\n                                <RemoveButton handleRemove={() => handleRemovePlaylist()} />\n                            }\n                        </div>\n                        <div className=\"col-12 col-sm-12\">\n                            {\n                                user.id === playlist.author_id &&\n                                <ChangePrivacyButton\n                                    id={playlist.id}\n                                    isPublic={playlist.is_public}\n                                    isProfile={false}\n                                    dispatchPrivacyUpdate={dispatch} />\n                            }\n                            {\n                                user.id === playlist.author_id && <small>&nbsp;</small>\n\n                            }\n                            <small>{playlist.author_name}&nbsp;</small>\n                            <small\n                                className=\"film-preview-playlist-index\">\n                                - {currentFilmIndex}/{playlist.films.length}\n                            </small>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ height: playerHeight - headerHeight + 'px' }}\n                    className=\"col-12 col-sm-12 p-0 film-preview-playlist-container\">\n                    <PerfectScrollbar\n                        onYReachEnd={() => { }}\n                        onScrollY={() => { }}>\n                        {\n                            playlist.films.map((film, index) => {\n                                return(\n                                    <div className=\"row m-0 p-0 pe-2 remove-container\" key={film.id}>\n                                        <div className={`${index === playlist.films.length - 1 ?\n                                            \"mt-3 mb-3 \" :\n                                            \"mt-3\"} button-ripple-div-next-width col`}\n                                            onClick={() => {\n                                                if (!film.isNonExisting)\n                                                    props.handleRedirect(film.id)\n                                            }}>\n                                            <div className=\"row m-0 p-0 play-outer-container\">\n                                                <div\n                                                    className=\"col-1 col-sm-1 text-center justify-content-center d-flex align-items-center p-0 ps-1\" >\n                                                    {\n                                                        (currentFilm === film.id) ?\n                                                            <small>\n                                                                <FontAwesomeIcon style={{ fontWeight: 300 }}\n                                                                    icon=\"play\" />\n                                                            </small>\n                                                            :\n                                                            <small>{index + 1}</small>\n\n                                                    }\n                                                </div>\n                                                <div className=\"col-6 col-sm-6 pe-2 ps-2\">\n                                                    <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half w-100 play-container\">\n                                                        {film.isNonExisting ?\n                                                            <img alt=\"\" className=\"embed-responsive-item play-image\"\n                                                                src={image_not_found} />\n                                                            :\n                                                            <BlurredImageComponent\n                                                                image={`${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`} />\n                                                        }\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-5 col-sm-5 p-0\">\n                                                    {film.isNonExisting ?\n                                                        (<TextTruncate line={2} text=\"Not found\"\n                                                            className=\"mb-0 title fw-bold\" />)\n                                                        :\n                                                        (<>\n                                                            <TextTruncate line={1} text={film.title}\n                                                                className=\"mb-0 title fw-bold\" />\n                                                            <p className=\"mb-1 author-nick\">\n                                                                <span>{film.author_name}</span>\n                                                            </p>\n                                                        </>)\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {\n                                            user.id === playlist.author_id &&\n                                            <div style={{ width: '24px' }} className=\"p-0 d-flex align-items-center justify-content-center\">\n                                                <RemoveButton handleRemove={() => handleRemoveFromPlaylist(film.id)} />\n                                            </div>\n                                        }\n\n                                    </div>\n                                )\n                            })\n                        }\n                    </PerfectScrollbar>\n                </div>\n            </div>\n        </div >\n\n\n    )\n}\n\n\nexport default PlaylistContainer\n","import { useReducer } from \"react\"\nimport FilmContext from \"./filmContext\"\n\nconst filmInitialState = {\n    isPreviewLoaded: false,\n    comments: null,\n    commentsCount: null,\n    playerHeight: null,\n    reloadPlaylist: false,\n    error: null\n}\n\nconst filmReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                isPreviewLoaded: true,\n                comments: action.comments,\n                commentsCount: action.commentsCount,\n                error: null\n            }\n        }\n        case 'reset-comments': {\n            return {\n                ...state,\n                comments: null,\n                commentsCount: null\n            }\n        }\n        default:\n            return state\n    }\n}\n\nconst FilmProvider = ({ children }) => {\n    const [filmState, filmDispatch] = useReducer(filmReducer, filmInitialState)\n\n\n    return (\n        <FilmContext.Provider value={[filmState, filmDispatch]}>\n            {children}\n        </FilmContext.Provider>\n    );\n}\n\nexport default FilmProvider","import { useHistory, useLocation } from 'react-router-dom'\nimport queryString from \"query-string\";\n\nimport FilmPreview from './preview'\nimport FilmsRecommendations from './recommendations';\nimport Comments from './comments';\nimport PlaylistContainer from './playlistContainer';\n\nimport useWindowWidth from '../../../helpers/hooks/useWindowsWidth'\nimport FilmProvider from '../../../helpers/contexts/film/filmProvider'\n\nimport './film.css'\n\n\nconst Film = (props) => {\n\n    let history = useHistory()\n    let location = useLocation()\n\n    const onSmallScreen = useWindowWidth(768);\n\n    const handleRedirect = (id) => {\n        const parsed = queryString.parse(location.search);\n        let historyObject = { pathname: `${process.env.REACT_APP_PATH_NAME}film/` + id }\n        if (parsed.list) historyObject = { ...historyObject, search: `?list=${parsed.list}` }\n        history.push(historyObject);\n    };\n\n    return (\n        <FilmProvider>\n            <div className=\"row p-0 m-0 mt-4 mx-2\">\n                <div className=\"col-12 order-first col-sm-12 order-first col-md-8\">\n                    <FilmPreview {...props} />\n                    {!onSmallScreen && <Comments {...props} />}\n                </div>\n                <div className=\"col-12 order-2 col-sm-12 order-2 col-md-4\">\n                    <PlaylistContainer handleRedirect={handleRedirect} {...props} />\n                    <FilmsRecommendations handleRedirect={handleRedirect} {...props} />\n                </div>\n                {onSmallScreen &&\n                    <div className=\"col-12 order-last col-sm-12 order-sm-last col-md-8\">\n                        <Comments {...props} />\n                    </div>\n                }\n            </div>\n\n        </FilmProvider>\n    )\n}\n\nexport default Film"],"sourceRoot":""}