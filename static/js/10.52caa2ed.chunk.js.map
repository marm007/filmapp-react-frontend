{"version":3,"sources":["components/homePage/reducer.js","components/homePage/index.js"],"names":["initialState","films","isLoading","isAllFetched","isInitialLoaded","error","homePageReducer","state","action","type","fieldName","payload","Set","length","pageInitialMaxFetchCount","pageMaxFetchCount","Home","props","history","useHistory","useReducer","dispatch","handleOnHomePageData","useCallback","useBottomScrollListener","triggerOnNoScroll","useEffect","a","filmApi","limit","then","res","response","data","forEach","film","img","process","id","fetchData","skip","catch","err","console","getAllFilms","handleRedirect","push","pathname","Row","className","map","index","style","height","width","Spinner","animation"],"mappings":"8OAEaA,EAAe,CACxBC,MAAO,KACPC,WAAW,EACXC,cAAc,EACdC,iBAAiB,EACjBC,MAAO,MAGEC,EAAkB,SAACC,EAAOC,GACnC,OAAQA,EAAOC,MACX,IAAK,QACD,OAAO,2BACAF,GADP,kBAEKC,EAAOE,UAAYF,EAAOG,UAGnC,IAAK,OACD,OAAO,2BACAJ,GADP,IAEIL,WAAW,EACXC,cAAc,EACdE,MAAO,KAGf,IAAK,eACD,OAAO,2BACAE,GADP,IAEIN,MAAM,YAAK,IAAIW,IAAJ,YAAYJ,EAAOG,WAC9BT,WAAW,EACXE,iBAAiB,EACjBD,aAAcK,EAAOG,QAAQE,OAASC,MAG9C,IAAK,UACD,OAAO,2BACAP,GADP,IAEIN,MAAM,YAAK,IAAIW,IAAJ,sBAAYL,EAAMN,OAAlB,YAA4BO,EAAOG,YAC9CT,WAAW,EACXC,aAAcK,EAAOG,QAAQE,OAASE,IACtCV,MAAO,OAGf,IAAK,QACD,OAAO,2BACAE,GADP,IAEIL,WAAW,EACXC,cAAc,EACdE,MAAOG,EAAOG,UAGtB,QACI,OAAOJ,I,wBCqCJS,UA9Ef,SAAcC,GAEV,IAAIC,EAAUC,cAEd,EAA0BC,qBAAWd,EAAiBN,GAAtD,mBAAOO,EAAP,KAAcc,EAAd,KACQpB,EAAoDM,EAApDN,MAAOC,EAA6CK,EAA7CL,UAAWC,EAAkCI,EAAlCJ,aAAcC,EAAoBG,EAApBH,gBAGlCkB,EAAuBC,uBAAY,WAChCrB,GAAcC,IAAgBC,GAC/BiB,EAAS,CACLZ,KAAM,WAGf,CAACP,EAAWC,EAAcC,IAE7BoB,YAAwBF,EAAsB,CAAEG,mBAAmB,IAEnEC,qBAAU,WAAM,4CACZ,sBAAAC,EAAA,sEACUC,IAAY,CAAEC,MAAOf,MAA4BgB,MAAK,SAAAC,GACxD,IAAIC,EAAWD,EAAIE,KAEnBD,EAASE,SAAQ,SAAAC,GACbA,EAAKC,IAAL,UAAcC,0DAAd,iBAAoDF,EAAKG,GAAzD,kCAIJjB,EAAS,CACLZ,KAAM,eACNE,QAASqB,OAXrB,4CADY,uBAAC,WAAD,wBAgBZO,KAED,IAEHb,qBAAU,WAAM,4CACZ,sBAAAC,EAAA,sEACUC,IAAY,CAAEY,KAAMvC,EAAMY,OAAQgB,MAAOd,MAC1Ce,MAAK,SAAAC,GACF,IAAIC,EAAWD,EAAIE,KAEnBD,EAASE,SAAQ,SAAAC,GACbA,EAAKC,IAAL,UAAcC,0DAAd,iBAAoDF,EAAKG,GAAzD,kCAIJjB,EAAS,CACLZ,KAAM,UACNE,QAASqB,OAEdS,OAAM,SAAAC,GAAG,OAAIC,QAAQtC,MAAMqC,MAdtC,4CADY,sBAiBRxC,GAAaE,GAAmBH,GAjBvB,WAAD,wBAiB+B2C,KAC5C,CAAC1C,EAAWE,EAAiBH,IAEhC,IAAM4C,EAAiB,SAACP,GACpBpB,EAAQ4B,KAAK,CAAEC,SAAU,UAAGV,2BAAH,SAA4CC,KAGzE,OACI,eAACU,EAAA,EAAD,CAAKC,UAAU,YAAf,UAEQhD,GAASA,EAAMiD,KAAI,SAACf,EAAMgB,GAAP,OAAiB,cAAC,IAAD,CAAoBhB,KAAMA,EAAMgB,MAAOA,EAAON,eAAgBA,GAAnDV,EAAKG,QAInDnC,GAAgB,qBAAKiD,MAAO,CAAEC,OAAQ,OAAWC,MAAO,QAAUL,UAAU,gCAA5D,UACX/C,IAAcE,IAAoB,cAACmD,EAAA,EAAD,CAASC,UAAU","file":"static/js/10.52caa2ed.chunk.js","sourcesContent":["import { pageInitialMaxFetchCount, pageMaxFetchCount } from \"../../config\"\n\nexport const initialState = {\n    films: null,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    error: null,\n}\n\nexport const homePageReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'load': {\n            return {\n                ...state,\n                isLoading: true,\n                isAllFetched: false,\n                error: ''\n            }\n        }\n        case 'initial-load': { \n            return {\n                ...state,\n                films: [...new Set([...action.payload])],\n                isLoading: false,\n                isInitialLoaded: true,\n                isAllFetched: action.payload.length < pageInitialMaxFetchCount,\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                films: [...new Set([...state.films, ...action.payload])],\n                isLoading: false,\n                isAllFetched: action.payload.length < pageMaxFetchCount,\n                error: null\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                isAllFetched: false,\n                error: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}","import React, { useEffect, useReducer, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Spinner } from 'react-bootstrap';\n\n\nimport * as filmApi from '../../services/filmService'\nimport { homePageReducer, initialState } from './reducer';\nimport useBottomScrollListener from '../../helpers/hooks/useBottomScrollListener';\n\nimport Film from '../../helpers/components/film'\nimport { pageMaxFetchCount, pageInitialMaxFetchCount } from '../../config';\n\nfunction Home(props) {\n\n    let history = useHistory()\n\n    const [state, dispatch] = useReducer(homePageReducer, initialState)\n    const { films, isLoading, isAllFetched, isInitialLoaded } = state\n\n\n    const handleOnHomePageData = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded])\n\n    useBottomScrollListener(handleOnHomePageData, { triggerOnNoScroll: true })\n\n    useEffect(() => {\n        async function fetchData() {\n            await filmApi.all({ limit: pageInitialMaxFetchCount }).then(res => {\n                let response = res.data;\n\n                response.forEach(film => {\n                    film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail?width=small_webp`\n\n                });\n\n                dispatch({\n                    type: 'initial-load',\n                    payload: response\n                })\n            })\n        }\n        fetchData()\n\n    }, [])\n\n    useEffect(() => {\n        async function getAllFilms() {\n            await filmApi.all({ skip: films.length, limit: pageMaxFetchCount })\n                .then(res => {\n                    let response = res.data;\n\n                    response.forEach(film => {\n                        film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail?width=small_webp`\n\n                    });\n\n                    dispatch({\n                        type: 'success',\n                        payload: response\n                    })\n                }).catch(err => console.error(err))\n        }\n        if (isLoading && isInitialLoaded && films) getAllFilms()\n    }, [isLoading, isInitialLoaded, films])\n\n    const handleRedirect = (id) => {\n        history.push({ pathname: `${process.env.REACT_APP_PATH_NAME}film/` + id });\n    };\n\n    return (\n        <Row className=\"mt-5 mx-2\">\n            {\n                films && films.map((film, index) => <Film key={film.id} film={film} index={index} handleRedirect={handleRedirect} />)\n            }\n\n            {\n                !isAllFetched && <div style={{ height: 32 + 'px', width: '100%' }} className=\"d-flex justify-content-center\">\n                    {(isLoading || !isInitialLoaded) && <Spinner animation=\"border\" />}\n                </div>\n            }\n\n        </Row>\n    )\n}\n\nexport default Home;\n"],"sourceRoot":""}