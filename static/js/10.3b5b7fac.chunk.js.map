{"version":3,"sources":["config/index.js","helpers/hooks/useBottomScrollListener.js","components/helpers/rippleButton.js","services/filmService.js","services/playlistService.js","services/userService.js","components/helpers/changePrivacyButton.js","helpers/index.js","helpers/hooks/useIntersectionObserver.js","components/helpers/blurredImage/index.js","components/helpers/playlistAdd/reducer.js","components/helpers/playlistAdd/menu.js","components/helpers/playlistAdd/index.js","components/pages/search/reducer.js","components/pages/search/skeleton.js","components/pages/search/index.js"],"names":["commentsMaxFetchCount","recommendationsMaxFetchCount","playlistButtonMaxFetchCount","pageInitialMaxFetchCount","pageMaxFetchCount","createCallback","debounce","handleOnScroll","options","lodashDebounce","useBottomScrollListener","onBottom","useMemo","offset","debounceOptions","leading","triggerOnNoScroll","id","debouncedOnBottom","containerRef","useRef","useCallback","current","scrollNode","scrollContainerBottomPosition","Math","round","scrollTop","clientHeight","scrollHeight","document","getElementById","scrollingElement","documentElement","window","innerHeight","useEffect","ref","node","addEventListener","removeEventListener","RippleButton","onClick","children","className","useRipple","background","addRipple","ripples","style","color","e","onMouseDown","all","params","axios","get","index","search","view","patch","create","form","post","headers","authHeader","like","remove","delete","body","show","partialUpdate","me","ChangePrivacyButton","isPublic","isProfile","dispatchPrivacyUpdate","filmDispatch","useState","isChanging","setIsChanging","a","playlistApi","is_public","then","res","type","payload","data","undefined","fieldName","catch","err","console","error","changePrivacy","privacyButton","stopPropagation","icon","height","width","jsxLoop","checkIfPlaylistButtonClick","target","tagName","parentNode","animVal","includes","displayCommentDate","comment","date","Date","parse","createdAt","getDate","slice","getMonth","getFullYear","getHours","getMinutes","parseSearchDate","film","today","time","abs","floor","UTC","times","callback","i","useIntersectionObserver","onIntersect","threshold","rootMargin","React","observer","IntersectionObserver","observe","unobserve","BlurredImage","src","thumb","isCached","isLoaded","setIsLoaded","alt","visibility","onLoad","opacity","BlurredImageComponent","image","isVisible","setIsVisible","setIsCached","observerElement","isIntersecting","tmp","Image","concat","complete","playlistDropdownMenuInitialState","playlists","isLoading","isAllFetched","isCreating","isAdding","playlistToUpgrade","title","playlistDropdownMenuReducer","state","action","length","map","playlist","contains","PlaylistDropdownMenu","filmID","handlePlaylistClose","isRecommendations","createToast","useContext","ToastContext","titleInputRef","useReducer","dispatch","handleOnPlaylistDropdownMenuBottom","scrollRef","userApi","skip","limit","result","forEach","films","indexOf","getMyPlaylists","films_id","errorMessage","response","errors","classList","add","creatPlaylist","is_remove_films","message","addToPlaylist","handleChange","left","setTimeout","maxHeight","overflowY","minHeight","onChange","handleAddToPlaylist","checked","htmlFor","onSubmit","preventDefault","placeholder","value","disabled","PlaylistAddButton","menuRef","user","UserContext","isOpen","setIsOpen","dropdownMenu","setDropdownMenu","handleOpenMenu","log","handleCloseMenu","auth","Dropdown","hide","display","faEllipsisV","searchInitialState","isInitialLoaded","filter","sort","dir","sorts","searchReducer","resetSort","SearchSkeleton","lineHeight","filters","Search","history","useHistory","location","useLocation","handleSearchOnBottom","searchParams","queryString","filmApi","getFilms","handleOnclick","filterClick","sortClick","dirClick","tmpType","push","cursor","faFilter","filterTmp","fontWeight","fontSize","sortTmp","process","flex","Truncate","lines","author_name","views","line","text","description"],"mappings":"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","file":"static/js/10.3b5b7fac.chunk.js","sourcesContent":["export const commentsMaxFetchCount = 10\nexport const recommendationsMaxFetchCount = 12\n\nexport const playlistButtonMaxFetchCount = 10\n\nexport const pageInitialMaxFetchCount = 40\nexport const pageMaxFetchCount = 20\n","import { useCallback, useEffect, useRef, useMemo } from 'react';\nimport lodashDebounce from 'lodash.debounce';\n\nconst createCallback = (debounce, handleOnScroll, options) => {\n  if (debounce) {\n    return lodashDebounce(handleOnScroll, debounce, options);\n  } else {\n    return handleOnScroll;\n  }\n};\n\nfunction useBottomScrollListener(\n  onBottom = () => { },\n  options = {},\n) {\n  const { offset, triggerOnNoScroll, debounce, debounceOptions, id } = useMemo(\n    () => ({\n      offset: options?.offset ?? 20,\n      debounce: options?.debounce ?? 200,\n      debounceOptions: options?.debounceOptions ?? { leading: true },\n      triggerOnNoScroll: options?.triggerOnNoScroll ?? false,\n      id: options?.id ?? null\n    }),\n    [options?.offset, options?.debounce, options?.debounceOptions, options?.triggerOnNoScroll, options?.id],\n  );\n\n  const debouncedOnBottom = useMemo(() => createCallback(debounce, onBottom, debounceOptions), [onBottom, debounce, debounceOptions]);\n  const containerRef = useRef(null);\n  const handleOnScroll = useCallback(() => {\n\n    if (containerRef.current != null) {\n      const scrollNode = containerRef.current;\n      const scrollContainerBottomPosition = Math.round(scrollNode.scrollTop + scrollNode.clientHeight);\n      const scrollPosition = Math.round(scrollNode.scrollHeight - offset);\n\n      if (scrollPosition <= scrollContainerBottomPosition) {\n        debouncedOnBottom();\n      }\n    } else if (id !== null) {\n      const scrollNode = document.getElementById(id);\n      if (scrollNode) {\n        const scrollContainerBottomPosition = Math.round(scrollNode.scrollTop + scrollNode.clientHeight);\n        const scrollPosition = Math.round(scrollNode.scrollHeight - offset);\n        if (scrollPosition <= scrollContainerBottomPosition) {\n          debouncedOnBottom();\n        }\n      }\n    } else {\n      const scrollNode = document.scrollingElement || document.documentElement;\n      const scrollContainerBottomPosition = Math.round(scrollNode.scrollTop + window.innerHeight);\n      const scrollPosition = Math.round(scrollNode.scrollHeight - offset);\n\n      if (scrollPosition <= scrollContainerBottomPosition) {\n        debouncedOnBottom();\n      }\n    }\n  }, [debouncedOnBottom, offset, id]);\n\n  useEffect(() => {\n    const ref = containerRef.current;\n    const node = document.getElementById(id)\n\n    if (ref != null) {\n      ref.addEventListener('scroll', handleOnScroll);\n    } else if (node !== null) {\n      node.addEventListener('scroll', handleOnScroll);\n    } else {\n      window.addEventListener('scroll', handleOnScroll);\n    }\n\n    if (triggerOnNoScroll) {\n      handleOnScroll();\n    }\n\n    return () => {\n      if (ref != null) {\n        ref.removeEventListener('scroll', handleOnScroll);\n      } else if (node !== null) {\n        node.addEventListener('scroll', handleOnScroll);\n      } else {\n        window.removeEventListener('scroll', handleOnScroll);\n      }\n    };\n  }, [handleOnScroll, triggerOnNoScroll, id]);\n\n  return containerRef;\n}\n\nexport default useBottomScrollListener;\n","import useRipple from 'useripple'\n\nconst RippleButton = ({ onClick, children, className }) => {\n\n    const [addRipple, ripples] = useRipple({ background: 'black' })\n\n    return (\n        <button style={{ color: 'black' }} onClick={(e) => {\n            onClick(e)\n        }}\n            onMouseDown={addRipple}\n            className={`btn btn-link button-ripple ${className}`}>\n            {children}\n            {ripples}\n        </button>\n    )\n}\n\nexport default RippleButton","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const all = (params) => axios.get('films/', {params})\nexport const index = (id) => axios.get(`films/${id}`)\nexport const search = (params) => axios.get('films/search', {params})\n\nexport const view = (id) => axios.patch(`films/${id}/view`)\n\nexport const video = (id) => axios.get(`films/${id}/video`)\nexport const thumbnail = (id, params) => axios.get(`films/${id}/thumbnail`, {params})\n\nexport const create = (form) => axios.post(`films`, form, {headers: authHeader()})\n\nexport const update = (id, form) => axios.put(`films/${id}`, form, {headers: authHeader()})\nexport const partialUpdate = (id, form) => axios.patch(`films/${id}`, form, {headers: authHeader()})\n\nexport const like = (id, form) => axios.patch(`films/${id}/action`, form, {headers: authHeader()})\n\nexport const remove = (id) => axios.delete(`films/${id}`, { headers: authHeader() })\n\n\n\n","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const create = (body) => axios.post('playlists', body, { headers: authHeader() })\nexport const index = (id) => axios.get(`playlists/${id}`, { headers: authHeader() })\nexport const show = (params) => axios.get(`playlists`, { params, headers: authHeader() })\nexport const partialUpdate = (id, body) => axios.patch(`playlists/${id}`, body, { headers: authHeader() })\n\n\nexport const remove = (id) => axios.delete(`playlists/${id}`, { headers: authHeader() })\n\n","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const me = (params) => axios.get('users/me', { params, headers: authHeader() })\nexport const partialUpdate = (body) => axios.patch('users', body, { headers: authHeader() })\n\nexport const userService = {\n    login,\n    logout,\n    register\n};\n\nfunction login(username, password) {\n\n    let loginHeaderMy = null\n\n    const requestOptions = {\n        method: 'POST',\n        headers: loginHeaderMy\n\n    };\n\n    return fetch(`${process.env.REACT_APP_API_URL}/users/auth`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        })\n}\n\nfunction logout() {\n    localStorage.removeItem('user');\n}\n\nfunction register(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n    return fetch(`${process.env.REACT_APP_API_URL}/users/`, requestOptions)\n        .then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                logout();\n            }\n            const error = (data && data.errors) || response.statusText;\n            return Promise.reject(error);\n        }\n        return data;\n    })\n}\n\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useState } from \"react\"\nimport * as playlistApi from '../../services/playlistService'\nimport RippleButton from \"./rippleButton\"\n\nconst ChangePrivacyButton = ({ isPublic, id, isProfile, dispatchPrivacyUpdate, filmDispatch }) => {\n\n    const [isChanging, setIsChanging] = useState(false)\n\n\n    useEffect(() => {\n        async function changePrivacy() {\n            await playlistApi.partialUpdate(id, { is_public: !isPublic })\n                .then(res => {\n                    setIsChanging(false)\n\n                    dispatchPrivacyUpdate({\n                        type: 'change-playlist-privacy-success',\n                        payload: res.data\n                    })\n\n                    if (filmDispatch !== undefined) {\n                        filmDispatch({\n                            type: 'field',\n                            fieldName: 'reloadPlaylist',\n                            payload: true\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.error(err)\n                    setIsChanging(false)\n                })\n        }\n        if (isChanging) changePrivacy()\n    }, [dispatchPrivacyUpdate, isChanging, isPublic, id, filmDispatch])\n\n    const handleChangePrivacy = (e) => {\n        e.stopPropagation()\n        if (!isChanging) setIsChanging(true)\n    }\n\n    const privacyButton = (\n        <RippleButton\n            className=\"button-ripple-24 p-0\"\n            onClick={handleChangePrivacy}>\n            <FontAwesomeIcon icon={isPublic ? \"globe-europe\" : \"lock\"} />\n        </RippleButton>\n    )\n\n    return isProfile ?\n        (\n            <div className=\"col text-center justify-content-center d-flex align-items-center p-0 flex-grow-0\"\n            >\n                <div\n                    className=\"col remove-holder p-0 m-0 flex-grow-0\"\n                    style={{ height: '24px', width: '24' }}>\n                    {privacyButton}\n                </div>\n            </div>\n        ) :\n        privacyButton\n}\n\nexport default ChangePrivacyButton","export const checkIfPlaylistButtonClick = (target) => {\n    if ((target.tagName === 'path' && target.parentNode.className.animVal && target.parentNode.className.animVal.includes('playlist-add-icon')) ||\n        (target.tagName === 'svg' && target.className.animVal && target.className.animVal.includes('playlist-add-icon')) ||\n        (target.className && typeof target.className === 'string' && target.className.includes('playlist-add-icon-holder')))\n        return true\n    return false\n}\n\nexport const displayCommentDate = (comment) => {\n    let date = new Date(Date.parse(comment.createdAt));\n    let time = (('0' + date.getDate()).slice(-2) + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-'\n        + ('0' + date.getFullYear()).slice(-2)\n        + ' o ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2))\n    return time;\n};\n\nexport const parseSearchDate = (film) => {\n\n    let date = new Date(Date.parse(film.createdAt));\n    let today = new Date();\n\n\n    let time = Math.abs(Math.floor((\n        Date.UTC(\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes()) -\n        Date.UTC(\n            today.getFullYear(),\n            today.getMonth(),\n            today.getDate(),\n            today.getHours(),\n            today.getMinutes()))\n        / (1000 * 60)));\n\n    if (time / 60 >= 1) {\n        time /= 60;\n\n        if (time / 24 >= 1) {\n\n            time /= 24;\n\n            if (time / 30 >= 1) {\n\n                time /= 30;\n\n                if (time / 12 >= 1) {\n\n                    time = time / 12;\n                    time = Math.floor(time) + ' years ';\n\n                } else {\n                    time = Math.floor(time) + ' months ';\n                }\n\n            } else {\n                time = Math.floor(time) + ' days ';\n            }\n\n        } else {\n            time = Math.floor(time) + ' hours ';\n        }\n    } else {\n        time = Math.floor(time) + ' minutes ';\n    }\n\n    time = time + 'ago';\n\n    return time;\n};\n\n\nexport function* jsxLoop(times, callback) {\n    for (var i = 0; i < times; ++i)\n        yield callback(i);\n}","import React from \"react\";\nconst useIntersectionObserver = ({\n  target,\n  onIntersect,\n  threshold = 0.1,\n  rootMargin = \"0px\"\n}) => {\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, {\n      rootMargin,\n      threshold\n    });\n    const current = target.current;\n    observer.observe(current);\n    return () => {\n      observer.unobserve(current);\n    };\n  });\n};\nexport default useIntersectionObserver;","import React, { useState, useRef } from 'react';\nimport useIntersectionObserver from '../../../helpers/hooks/useIntersectionObserver';\nimport \"./blurred.css\";\n\nconst BlurredImage = ({ src, thumb, isCached }) => {\n    const [isLoaded, setIsLoaded] = useState(isCached);\n\n    return (\n        <div className=\"ratio ratio-16x9\">\n            <img\n                className=\"image thumb\"\n                alt=\"\"\n                src={thumb}\n                style={{ visibility: isLoaded ? \"hidden\" : \"visible\" }}\n            />\n            <img\n                onLoad={() => {\n                    setIsLoaded(true);\n                }}\n                className=\"image full\"\n                style={{ opacity: isLoaded ? 1 : 0 }}\n                alt=\"\"\n                src={src}\n            />\n        </div>\n    );\n}\n\nfunction BlurredImageComponent({ image }) {\n    const ref = useRef();\n    const [isVisible, setIsVisible] = useState(false);\n    const [isCached, setIsCached] = useState(false);\n\n    useIntersectionObserver({\n        target: ref,\n        onIntersect: ([{ isIntersecting }], observerElement) => {\n            if (isIntersecting) {\n                let tmp = new Image();\n                tmp.src = image.concat('?width=small_webp');\n                setIsCached(tmp.complete)\n                setIsVisible(true);\n                observerElement.unobserve(ref.current);\n            }\n        }\n    });\n\n    return (\n        <div\n            ref={ref}\n            className=\"image-container ratio ratio-16x9 play-image\"\n        >\n            {isVisible && (\n                <BlurredImage isCached={isCached} src={image.concat('?width=small_webp')} thumb={image.concat('?width=preview_webp')} />\n            )}\n        </div>\n    );\n}\n\nexport default BlurredImageComponent;","import { playlistButtonMaxFetchCount } from \"../../../config\"\n\nexport const playlistDropdownMenuInitialState = {\n    playlists: [],\n    isLoading: true,\n    isAllFetched: false,\n    isCreating: false,\n    isAdding: false,\n    playlistToUpgrade: null,\n    title: '',\n    isPublic: false,\n    error: '',\n}\n\nexport function playlistDropdownMenuReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                error: '',\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'load': {\n            return {\n                ...state,\n                isLoading: true,\n                isAllFetched: false,\n            }\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                playlists: [...state.playlists, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < playlistButtonMaxFetchCount,\n                error: '',\n            }\n        }\n        case 'create': {\n            return {\n                ...state,\n                isLoading: false,\n                isCreating: true\n            }\n        }\n        case 'create-success': {\n            return {\n                ...state,\n                isLoading: false,\n                isCreating: false\n            }\n        }\n        case 'add': {\n            return {\n                ...state,\n                isLoading: false,\n                isAdding: true,\n                playlistToUpgrade: action.payload\n            }\n        }\n        case 'add-update-playlist': {\n            return {\n                ...state,\n                playlists: state.playlists.map(playlist => {\n                    if (playlist.id === state.playlistToUpgrade.id) return { ...playlist, contains: !playlist.contains }\n                    else return playlist\n                }),\n                playlistToUpgrade: null\n            }\n        }\n        case 'add-success': {\n            return {\n                ...state,\n                isAdding: false\n            }\n        }\n        case 'change-playlist-privacy-success': {\n            return {\n                ...state,\n                playlists: state.playlists.map(playlist => {\n                    if (playlist.id === action.payload.id) return { ...playlist, is_public: action.payload.is_public }\n                    return playlist\n                })\n            }\n        }\n        case 'error':\n            return {\n                ...state,\n                isLoading: false,\n                isCreating: false,\n                error: action.payload,\n                title: ''\n            }\n        default:\n            return state\n\n    }\n}\n","import React, { useCallback, useEffect, useContext, useReducer, useRef } from 'react';\n\nimport * as userApi from '../../../services/userService'\nimport * as playlistApi from '../../../services/playlistService'\n\nimport ToastContext from '../../../helpers/contexts/toast/toastContext';\nimport useBottomScrollListener from '../../../helpers/hooks/useBottomScrollListener';\nimport { playlistDropdownMenuReducer, playlistDropdownMenuInitialState } from './reducer'\nimport ChangePrivacyButton from '../changePrivacyButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { playlistButtonMaxFetchCount } from '../../../config';\nimport RippleButton from '../rippleButton';\n\nfunction PlaylistDropdownMenu({ filmID, handlePlaylistClose, isRecommendations, filmDispatch }) {\n\n\n    const { createToast } = useContext(ToastContext);\n\n    const titleInputRef = useRef()\n\n    const [state, dispatch] = useReducer(playlistDropdownMenuReducer, playlistDropdownMenuInitialState);\n\n    const { playlists, title, isPublic, isLoading, isAllFetched, isCreating, isAdding, playlistToUpgrade, error } = state\n\n    const handleOnPlaylistDropdownMenuBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && !isCreating && !isAdding) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isCreating, isAdding])\n\n    const scrollRef = useBottomScrollListener(handleOnPlaylistDropdownMenuBottom);\n\n    useEffect(() => {\n        async function getMyPlaylists() {\n            await userApi.me({ playlists: true, skip: playlists.length, limit: playlistButtonMaxFetchCount })\n                .then(res => {\n\n                    let result = res.data.playlists\n\n                    result.forEach(playlist => {\n                        playlist.contains = playlist.films.indexOf(filmID) > -1\n                    });\n\n                    dispatch({\n                        type: 'load-success',\n                        payload: result\n                    })\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (isLoading) getMyPlaylists()\n\n    }, [filmID, playlists, isLoading])\n\n    useEffect(() => {\n\n        async function creatPlaylist() {\n            const body = { title: title, is_public: isPublic, films_id: [filmID] };\n\n            await playlistApi.create(body)\n                .then(res => {\n                    dispatch({\n                        type: 'create-success'\n                    })\n                    createToast(`Created playlist ${title}`)\n                    handlePlaylistClose()\n\n                })\n                .catch(err => {\n                    console.error(err)\n                    let errorMessage = null\n\n                    if (err.response && err.response.data && err.response.data.error) {\n                        errorMessage = err.response.data.error\n                    } else if (err.response && err.response.data && err.response.data.errors) {\n                        errorMessage = err.response.data.errors[0]\n                    }\n                    titleInputRef.current.classList.add('is-invalid')\n                    dispatch({\n                        type: 'error',\n                        payload: errorMessage === \"Path `title` is required.\" ? 'Playlist title is required' : errorMessage\n                    })\n                })\n        }\n\n        if (isCreating) creatPlaylist()\n\n    }, [isCreating, title, isPublic, createToast, handlePlaylistClose, filmID,])\n\n    useEffect(() => {\n        async function addToPlaylist() {\n\n            let body = { films_id: [filmID] };\n\n            body = playlistToUpgrade.contains ? { ...body, is_remove_films: true } : { ...body, is_remove_films: false }\n\n            const message = playlistToUpgrade.contains ? `Deleted from playlist ${playlistToUpgrade.title}` : `Added to playlist ${playlistToUpgrade.title}`\n\n            dispatch({\n                type: 'add-update-playlist',\n                playlist: playlistToUpgrade\n            })\n\n            await playlistApi.partialUpdate(playlistToUpgrade.id, body)\n                .then(res => {\n                    dispatch({\n                        type: 'add-success'\n                    })\n\n                    if (isRecommendations) {\n                        filmDispatch({\n                            type: 'field',\n                            fieldName: 'reloadPlaylist',\n                            payload: true\n                        })\n                    }\n                    createToast(message)\n                })\n                .catch(err => console.error(err))\n        }\n        if (isAdding && playlistToUpgrade) addToPlaylist()\n    }, [isAdding, playlistToUpgrade, createToast, filmDispatch, filmID, isRecommendations])\n\n    const handleAddToPlaylist = (playlist) => {\n        dispatch({\n            type: 'add',\n            payload: playlist\n        })\n    };\n\n    const handleChange = (fieldName, payload) => {\n        titleInputRef.current.classList.remove('is-invalid')\n        dispatch({\n            type: 'field',\n            fieldName: fieldName,\n            payload: payload\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        dispatch({\n            type: 'create'\n        })\n    };\n\n    return (\n\n        <div onClick={e => e.stopPropagation()}\n            style={{ width: 240 + \"px\", left: '50px !important' }}>\n            <div className=\"row m-0 m-button button-ripple\" >\n                <div className=\"col playlist-add-exit-text-width\">Save to...</div>\n                <RippleButton className=\"button-ripple-24 playlist-add-icon-holder p-0 d-flex align-items-center text-center justify-content-center\"\n                    onClick={() => setTimeout(handlePlaylistClose, 150)}>\n                    <FontAwesomeIcon icon=\"times\" />\n                </RippleButton>\n            </div>\n            <hr className=\"dropdown-divider\" />\n            <div ref={scrollRef}\n                style={{\n                    maxHeight: 100 + 'px', overflowY: 'scroll', minHeight: 3 + 'rem'\n                }}>\n                {\n                    playlists.map((playlist, index) => {\n                        return (<div className=\"row m-0 playlist-form-group\" key={playlist.id} >\n                            <div className=\"col-10 col-sm-10 p-0\">\n                                <div id={playlist.id} className=\"form-check\">\n                                    <input type=\"checkbox\"\n                                        id={`add-playlist-${playlist.id}`}\n                                        className=\"form-check-input\"\n                                        onChange={() => handleAddToPlaylist(playlist)}\n                                        checked={playlist.contains} />\n                                    <label className=\"form-check-label\" htmlFor={`add-playlist-${playlist.id}`}>\n                                        <p className=\"playlist-check-label\">\n                                            {playlist.title}\n                                        </p>\n                                    </label>\n                                </div>\n\n                            </div>\n                            <ChangePrivacyButton\n                                id={playlist.id}\n                                isPublic={playlist.is_public}\n                                isProfile={false}\n                                filmDispatch={filmDispatch}\n                                dispatchPrivacyUpdate={dispatch} />\n\n                        </div>)\n                    })\n                }\n\n                {\n                    !isAllFetched && <div style={{\n                        height: 3 + 'rem'\n                    }}\n                        className=\"fetch-spinner d-flex justify-content-center align-items-center\">\n                        {isLoading && <div className=\"spinner-border\" />}\n                    </div>\n                }\n            </div>\n            <hr className=\"dropdown-divider\" />\n            <div className=\"row m-0 p-0\">\n                <span className=\"m-0\">Create a new playlist</span>\n            </div>\n            <div className=\"row m-0 p-0\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-group mb-2 mt-2\" >\n                        <input type=\"text\" className=\"form-control\" aria-label=\"playlistNameInput\"\n                            placeholder=\"Enter playlist title...\" ref={titleInputRef}\n                            onChange={(e) => handleChange('title', e.target.value)}\n                        />\n                        <div className=\"invalid-feedback\">\n                            {error}\n                        </div>\n                    </div>\n                    <div className=\"mb-2 mt-2\">\n                        <select className=\"form-select\"\n                            onChange={(e) => handleChange('isPublic', e.target.value === 'public')}>\n                            <option value=\"private\">Private</option>\n                            <option value=\"public\">Public</option>\n                        </select>\n                    </div>\n\n                    <div className=\"d-flex align-items-center mt-2\">\n                        <button type=\"submit\" className=\"btn btn-primary\" disabled={isCreating}>\n                            Create\n                        </button>\n\n                        {\n                            isCreating &&\n                            <div className=\"spinner-grow ms-2\" />\n                        }\n                    </div>\n\n                </form>\n\n            </div>\n\n        </div >\n\n\n    )\n}\n\nexport default PlaylistDropdownMenu\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport PlaylistDropdownMenu from './menu'\nimport UserContext from '../../../helpers/contexts/user/userContext';\nimport useRipple from \"useripple\"\n\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\nimport { Dropdown } from 'bootstrap'\n\nimport './playlistAdd.css'\n\nfunction PlaylistAddButton({ isRecommendations, filmDispatch, filmID }) {\n\n    const menuRef = useRef()\n\n    const { user } = useContext(UserContext);\n\n    const [addRipple, ripples] = useRipple({ background: \"black\" })\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const [dropdownMenu, setDropdownMenu] = useState(null)\n\n    const handlePlaylistClose = () => {\n        setIsOpen(false)\n        dropdownMenu.hide()\n    }\n\n    const handleOpenMenu = () => {\n        console.log('open')\n        setIsOpen(true)\n\n    }\n\n    const handleCloseMenu = () => {\n        console.log('close')\n        setIsOpen(false)\n    }\n\n    useEffect(() => {\n        const ref = menuRef.current;\n\n        if (ref && user.auth) {\n\n            ref.addEventListener('show.bs.dropdown', handleOpenMenu)\n            ref.addEventListener('hide.bs.dropdown', handleCloseMenu)\n\n            setDropdownMenu(new Dropdown(`#playlist-dropdown-${filmID}`))\n\n            return () => {\n                ref.removeEventListener('show.bs.dropdown', handleOpenMenu)\n                ref.removeEventListener('hide.bs.dropdown', handleCloseMenu)\n            }\n        }\n\n    }, [filmID, menuRef, user.auth])\n\n    return (\n\n        user.auth ?\n            <div ref={menuRef}\n\n                className=\"p-0 dropdown\" style={{ width: '26px' }} >\n                <button onClick={() => {\n                    if (dropdownMenu) {\n                        if (isOpen) dropdownMenu.show()\n                        else dropdownMenu.hide()\n                    }\n                }}\n                    className=\"btn btn-link m-button button-ripple dropdown-toggle p-0\"\n                    type=\"button\" id={`playlist-dropdown-${filmID}`}\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\"\n                    style={{ color: \"black\" }}>\n                    <div style={{ display: 'inline-block', width: '100%', height: '100%' }}>\n                        <div onClick={addRipple}\n                            className=\"col playlist-add-icon-holder p-0 button-ripple button-ripple-24\">\n                            <FontAwesomeIcon style={{ opacity: (isOpen ? 1 : \"\") }}\n                                className=\"playlist-add-icon\" icon={faEllipsisV} />\n                            {ripples}\n                        </div>\n                    </div>\n                </button>\n                <div className=\"dropdown-menu\" aria-labelledby={`playlist-dropdown-${filmID}`}>\n                    {isOpen && <PlaylistDropdownMenu\n                        isRecommendations={isRecommendations}\n                        filmDispatch={filmDispatch}\n                        filmID={filmID}\n                        handlePlaylistClose={handlePlaylistClose} />\n                    }\n                </div>\n            </div >\n            :\n            null\n\n    )\n}\n\nexport default PlaylistAddButton\n","import { pageMaxFetchCount } from \"../../../config\"\n\nexport const searchInitialState = {\n    films: null,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    error: null,\n    search: '',\n    filter: '',\n    sort: '',\n    dir: 1,\n    sorts: [\n        { id: 'upload_date', title: 'Upload date', dir: 1 },\n        { id: 'view_count', title: 'View count', dir: 1 },\n        { id: 'rating', title: 'Rating', dir: 1 },\n    ]\n\n}\n\nexport const searchReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                isLoading: false,\n                isInitialLoaded: true,\n                error: null,\n                isAllFetched: action.payload.films.length < pageMaxFetchCount,\n                films: action.payload.films,\n                search: action.payload.params.search,\n                sort: action.payload.params.sort,\n                filter: action.payload.params.filter,\n                dir: action.payload.params.dir,\n\n            }\n        }\n        case 'load': {\n            return !state.isLoading && !state.isAllFetched && state.isInitialLoaded && !state.error ? {\n                ...state,\n                isLoading: true,\n            } : state\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n                isAllFetched: action.payload.length < pageMaxFetchCount,\n                films: [...state.films, ...action.payload],\n            }\n        }\n        case 'sorts-change': {\n            return {\n                ...state,\n                sort: action.resetSort ? '' : state.sort,\n                sorts: state.sorts.map(sort => {\n                    if (sort.id === action.payload.id) return action.payload\n                    else return sort\n                })\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                error: true,\n            }\n        }\n        default: return state\n    }\n}\n","import Skeleton from 'react-loading-skeleton';\n\nconst SearchSkeleton = () => {\n\n\n    return (\n\n        <div className=\"col-12 col-sm-12 col-lg-8 m-0 mb-1\">\n            <div className=\"row mb-4 m-0\">\n                <div className=\"col-8 col-sm-4 p-0\">\n                    <div className=\"ratio ratio-16x9\">\n                        <Skeleton className=\"w-100 h-100\" style={{ lineHeight: '1.5' }} />\n                    </div>\n                </div>\n                <div className=\"col-4 col-sm-8\">\n                    <div className=\"col-12 col-sm-12 p-0 pb-1 h-25\">\n                        <Skeleton className=\"w-100 h-100\" style={{ lineHeight: '1.5' }} />\n                    </div>\n                    <div className=\"col-12 col-sm-12 h-75 pt-1\">\n                        <Skeleton className=\"w-100 h-100\" style={{ lineHeight: '1.5' }} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchSkeleton","import React, { useEffect, useReducer, useState, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\nimport queryString from 'query-string';\nimport TextTruncate from \"react-text-truncate\";\nimport Truncate from \"react-truncate\";\n\nimport { searchReducer, searchInitialState } from './reducer'\n\nimport BlurredImageComponent from '../../helpers/blurredImage'\nimport PlaylistAddButtonComponent from '../../helpers/playlistAdd';\n\nimport * as filmApi from '../../../services/filmService'\n\nimport { pageMaxFetchCount } from '../../../config';\n\nimport { parseSearchDate, checkIfPlaylistButtonClick, jsxLoop } from '../../../helpers'\nimport useBottomScrollListener from '../../../helpers/hooks/useBottomScrollListener';\nimport RippleButton from '../../helpers/rippleButton';\n\nimport \"./search.css\";\nimport Skeleton from './skeleton';\n\nlet filters = [\n    { id: 'last_hour', title: 'Last hour' },\n    { id: 'today', title: 'Today' },\n    { id: 'this_week', title: 'This week' },\n    { id: 'this_month', title: 'This month' },\n    { id: 'this_year', title: 'This year' },\n];\n\nconst Search = () => {\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const [state, dispatch] = useReducer(searchReducer, searchInitialState)\n\n    const { films, isLoading, isAllFetched, search, sort, filter, dir, sorts, error, isInitialLoaded } = state\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const handleSearchOnBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && !error && isInitialLoaded) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [error, isAllFetched, isInitialLoaded, isLoading])\n\n    useBottomScrollListener(handleSearchOnBottom)\n\n    useEffect(() => {\n\n        let searchParams = queryString.parse(location.search);\n\n        const params = {\n            search: searchParams.title,\n            sort: searchParams.sort ?? '',\n            filter: searchParams.filter ?? '',\n            dir: searchParams.dir ?? 1\n        }\n\n        function getSearchedFilms() {\n            dispatch({\n                type: 'initial-success',\n                payload: { films: location.state.films, params: params }\n            })\n        }\n\n        async function getFilms() {\n            await filmApi.search({ ...params, limit: pageMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'initial-success',\n                        payload: { films: res.data, params: params }\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                    console.error(err)\n                })\n        }\n\n        if (location.state && location.state.films) getSearchedFilms()\n        else getFilms()\n\n    }, [location])\n\n    useEffect(() => {\n        async function getFilms() {\n            await filmApi.search({\n                search: search,\n                sort: sort,\n                filter: filter,\n                dir: dir,\n                skip: films.length,\n                limit: pageMaxFetchCount\n            })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                    console.error(err)\n                })\n        }\n\n        if (isLoading) getFilms()\n\n    }, [dir, films, filter, isLoading, search, sort])\n\n    const setRedirect = (e, filmID) => {\n        history.push(`${process.env.REACT_APP_PATH_NAME}film/` + filmID);\n    };\n\n\n    const handleOnclick = (state, type) => {\n\n        let filterClick = filter;\n        let sortClick = sort;\n        let dirClick = dir;\n\n\n        if (state === 'filter') {\n            if (filterClick === type.id) {\n                filterClick = '';\n            } else {\n                filterClick = type.id;\n            }\n        } else {\n            let tmpType = type;\n\n            if (sortClick === type.id) {\n                sortClick = type.id;\n\n\n                if (tmpType.dir === 1) {\n                    tmpType.dir = -1;\n                    dirClick = type.dir;\n                } else if (tmpType.dir === -1) {\n                    tmpType.dir = 1;\n                    sortClick = '';\n                }\n\n                dispatch({\n                    type: 'sorts-change',\n                    payload: tmpType,\n                    resetSort: sortClick === ''\n                })\n\n                dirClick = type.dir\n\n            } else {\n                sortClick = type.id;\n                dirClick = type.dir;\n            }\n\n        }\n\n\n        if (sortClick !== '' && filterClick !== '') {\n            history.push({\n                search: `?title=${search}&sort=${sortClick}&dir=${dirClick}&filter=${filterClick}`,\n            });\n\n        } else if (sortClick === '' && filterClick !== '') {\n            history.push({\n                search: `?title=${search}&filter=${filterClick}`,\n            });\n        } else if (sortClick !== '' && filterClick === '') {\n            history.push({\n                search: `?title=${search}&sort=${sortClick}&dir=${dirClick}`,\n            });\n        } else if (sortClick === '' && filterClick === '') {\n            history.push({\n                search: `?title=${search}`,\n            });\n        }\n\n    };\n\n    return (\n        <>\n            <RippleButton className=\"mt-3 mx-4 search-button p-0\"\n                onClick={() => setIsOpen(!isOpen)}>\n                <div\n                    aria-controls=\"filter-collapse\"\n                    aria-expanded={isOpen}\n                    data-bs-toggle=\"collapse\" \n                    data-bs-target=\"#searchCollapse\"\n                    className=\"px-4 py-2\">\n                    <FontAwesomeIcon style={{ cursor: \"pointer\" }} icon={faFilter} />\n                </div>\n            </RippleButton>\n            <div className=\"collapse\" id=\"searchCollapse\">\n                <div id=\"filter-collapse\" className=\"row mx-2\">\n                    <div className=\"col col-sm-4 mt-4\">\n                        <p style={{ 'fontWeight': 500 }}>UPLOAD DATE</p>\n\n                        <div className=\"col col-sm-8 mt-3 mb-3 divider\" />\n\n                        {\n                            filters.map((filterTmp) => {\n                                return (<p key={filterTmp.id} style={filter === filterTmp.id ?\n                                    { fontWeight: 700, fontSize: 80 + '%' } :\n                                    { fontWeight: 400, fontSize: 80 + '%' }}\n                                    onClick={() => handleOnclick('filter', filterTmp)}\n                                    className=\"search-filter\">{filterTmp.title}</p>)\n                            })\n                        }\n\n                    </div>\n\n                    <div className=\"col col-sm-4 mt-4\">\n                        <p style={{ 'fontWeight': 500 }}>SORT BY</p>\n\n                        <div className=\"col col-sm-8 mt-3 mb-3 divider\" />\n\n                        {\n                            sorts.map((sortTmp) => {\n                                return (<div key={sortTmp.id} className=\"col d-flex\">\n                                    <p style={sort === sortTmp.id ?\n                                        { fontWeight: 700, fontSize: 80 + '%' } :\n                                        { fontWeight: 400, fontSize: 80 + '%' }}\n                                        onClick={() => handleOnclick('sort', sortTmp)}\n                                        className=\"search-filter\">{sortTmp.title}\n                                    </p>\n                                    {sort === sortTmp.id && sortTmp.dir === 1 ?\n                                        <FontAwesomeIcon className=\"ms-2\" icon=\"sort-up\" /> :\n                                        sort === sortTmp.id && sortTmp.dir === -1 ?\n                                            <FontAwesomeIcon className=\"ms-2\" icon=\"sort-down\" /> : \"\"}\n                                </div>)\n                            })\n                        }\n\n                    </div>\n\n                </div>\n            </div>\n\n            <div className=\"col col-sm-12 mt-2 mb-3 divider\" />\n\n            <div className=\"row mx-2 mt-4\">\n                {\n                    films ? films.map((film, index) => {\n                        const time = parseSearchDate(film);\n\n                        return <div className=\"col-12 col-sm-12 col-lg-8\"\n                            key={film.id}>\n                            <div className=\"col play-outer-container m-0 mb-1\"\n                                onClick={(e) => {\n                                    const isPlaylistButton = checkIfPlaylistButtonClick(e.target)\n                                    if (!isPlaylistButton) setRedirect(e, film.id)\n                                }} >\n                                <div className=\"row search-style mb-4 m-0\">\n                                    <div className=\"col-8 col-sm-4 p-0\">\n                                        <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                                            <BlurredImageComponent\n                                                image={`${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`} />\n                                            <FontAwesomeIcon className=\"play-middle\" icon=\"play\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-4 col-sm-8\">\n                                        <div className=\"row m-0\">\n                                            <div className=\"col p-0 mb-1\"\n                                                style={{\n                                                    flex: '0 0 auto !important',\n                                                    width: 'calc(83.33333333% - 24px) !important'\n                                                }}>\n                                                <Truncate lines={1}\n                                                    className=\"mb-0 search-title fw-bold\">\n                                                    {film.title}\n                                                </Truncate>\n                                            </div>\n                                            <div className=\"col d-flex justify-content-end\">\n                                                <PlaylistAddButtonComponent\n                                                    index={index}\n                                                    filmID={film.id} />\n                                            </div>\n                                        </div>\n                                        <p className=\"d-none d-sm-inline mb-1 author-nick-search\">\n                                            <span>{film.author_name} &#183; {film.views} views &#183; {time}</span>\n                                        </p>\n\n                                        <p className=\"d-inline d-sm-none mb-0 author-nick\">\n                                            <span>{film.author_name} &#183; {film.views} views</span>\n                                        </p>\n\n                                        <span className=\"d-none d-sm-inline  author-nick-search\">\n                                            <TextTruncate className=\"mb-0\"\n                                                line={2} text={film.description} />\n                                        </span>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    }) : [...jsxLoop(20, i =>\n                        <Skeleton key={i} />\n                    )]\n                }\n\n            </div>\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {\n                        (isLoading) &&\n                        <div className=\"spinner-border\" />\n                    }\n                </div>\n            }\n        </>\n\n    )\n}\n\nexport default Search\n"],"sourceRoot":""}