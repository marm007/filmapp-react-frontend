{"version":3,"sources":["components/dialogs/updateFilm/reducer.js","components/dialogs/updateFilm/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/models/input/index.js","services/filmService.js"],"names":["updateFilmInitialState","title","description","initialFilm","isInitialLoaded","isSumbitted","isSending","isError","error","isSuccess","updateFilmReducer","state","action","type","fieldName","payload","UpdateFilm","history","useHistory","id","useParams","useReducer","dispatch","useEffect","a","filmApi","then","res","data","catch","err","getInitialFilm","setTimeout","goBack","updateFilm","onClose","onSubmit","e","preventDefautl","className","htmlFor","name","value","isInvalid","onChange","target","disabled","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","Input","placeholder","InputTag","inputRef","useRef","current","classList","add","remove","ref","all","params","axios","get","index","search","view","patch","create","form","post","headers","authHeader","update","put","like","delete"],"mappings":"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","file":"static/js/15.d68cc7d7.chunk.js","sourcesContent":["export const updateFilmInitialState = {\n    title: '',\n    description: '',\n    initialFilm: {\n        title: '',\n        description: ''\n    },\n    isInitialLoaded: false,\n    isSumbitted: false,\n    isSending: false,\n    isError: false,\n    error: '',\n    isSuccess: false,\n}\n\nexport const updateFilmReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                error: '',\n                isError: false,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                isInitialLoaded: true,\n                title: action.title,\n                description: action.description,\n                initialFilm: {\n                    title: action.title,\n                    description: action.description\n                }\n            }\n        }\n        case 'submit': {\n            return {\n                ...state,\n                isSumbitted: true,\n                isError: false,\n                error: ''\n            }\n        }\n        case 'send': {\n            return {\n                ...state,\n                isSending: true\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                isSuccess: true,\n                isSending: false,\n                isSumbitted: false,\n                isError: false,\n                error: ''\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isSuccess: false,\n                isSending: false,\n                isSumbitted: false,\n                isError: true,\n                error: action.payload ? action.payload : ''\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}","import React, { useEffect, useReducer } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport Input from '../../models/input'\nimport Modal from '../../models/modal'\nimport { updateFilmInitialState, updateFilmReducer } from './reducer'\n\nimport * as filmApi from '../../../services/filmService'\n\nconst UpdateFilm = () => {\n    let history = useHistory()\n    let { id } = useParams();\n\n    const [state, dispatch] = useReducer(updateFilmReducer, updateFilmInitialState)\n    const { title, description, initialFilm, isInitialLoaded,\n        isSumbitted, isSending, isError, error, isSuccess } = state\n\n\n    useEffect(() => {\n        const getInitialFilm = async () => {\n            await filmApi.index(id)\n                .then(res => {\n                    dispatch({\n                        type: 'initial-success',\n                        title: res.data.title,\n                        description: res.data.description\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                })\n        }\n\n        getInitialFilm()\n\n    }, [id, history])\n\n    useEffect(() => {\n        const updateFilm = async () => {\n            await filmApi.update(id, { title, description })\n                .then(res => {\n                    dispatch({\n                        type: 'success'\n                    })\n\n                    setTimeout(() => history.goBack(), 500)\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                })\n        }\n\n        if (isSending) updateFilm()\n    }, [description, id, history, isSending, title])\n\n    const modalClose = () => {\n        history.goBack()\n    }\n\n    const handleSumbit = (e) => {\n        e.preventDefautl()\n        dispatch({\n            type: 'submit'\n        })\n\n        if (title && description) {\n            dispatch({\n                type: 'send'\n            })\n        }\n    }\n\n    return (\n        <Modal id=\"updatateFilmModal\" title=\"Update\" onClose={modalClose}>\n            <form onSubmit={isSending ? handleSumbit : null}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title</label>\n                    <Input type=\"text\" name=\"title\" value={title}\n                        isInvalid={isSumbitted && !title}\n                        onChange={e => dispatch({ type: 'field', fieldName: 'title', payload: e.target.value })}\n                    />\n                    <div className=\"invalid-feedback\">\n                        Title cannot be empty\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Description</label>\n                    <Input type=\"textarea\" name=\"description\" value={description}\n                        isInvalid={isSumbitted && !description}\n                        onChange={e => dispatch({ type: 'field', fieldName: 'description', payload: e.target.value })} />\n                    <div className=\"invalid-feedback\">\n                        Description cannot be empty\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\"\n                        disabled={!isInitialLoaded ||\n                            (isInitialLoaded && description === initialFilm.description && title === initialFilm.title)}\n                        type=\"submit\">Save</button>\n                </div>\n            </form>\n            {\n                isError && <div className=\"alert alert-danger mt-2 mb-0\">\n                    {error ? error : 'Something went wrong'}\n                </div>\n            }\n\n            {\n                isSuccess && <div className=\"alert alert-success mt-2 mb-0\">\n                    Changes saved successfully!\n                </div>\n            }\n        </Modal>\n    )\n}\n\nexport default UpdateFilm","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useEffect, useRef } from \"react\"\n\nconst Input = ({ isInvalid, onChange, type, name, value, placeholder = '' }) => {\n\n    const InputTag = type === 'textarea' ? 'textarea' : 'input'\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        let ref = inputRef.current\n        if (ref) {\n            if (isInvalid) inputRef.current.classList.add('is-invalid')\n            else inputRef.current.classList.remove('is-invalid')\n        }\n    }, [isInvalid])\n\n    return (\n        <InputTag ref={inputRef} className=\"form-control\"\n            placeholder={placeholder}\n            type={type} name={name}\n            value={value} onChange={onChange} />\n    )\n}\n\nexport default Input","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const all = (params) => axios.get('films/', {params})\nexport const index = (id) => axios.get(`films/${id}`)\nexport const search = (params) => axios.get('films/search', {params})\n\nexport const view = (id) => axios.patch(`films/${id}/view`)\n\nexport const video = (id) => axios.get(`films/${id}/video`)\nexport const thumbnail = (id, params) => axios.get(`films/${id}/thumbnail`, {params})\n\nexport const create = (form) => axios.post(`films`, form, {headers: authHeader()})\n\nexport const update = (id, form) => axios.put(`films/${id}`, form, {headers: authHeader()})\nexport const partialUpdate = (id, form) => axios.patch(`films/${id}`, form, {headers: authHeader()})\n\nexport const like = (id, form) => axios.patch(`films/${id}/action`, form, {headers: authHeader()})\n\nexport const remove = (id) => axios.delete(`films/${id}`, { headers: authHeader() })\n\n\n\n"],"sourceRoot":""}