{"version":3,"sources":["components/dialogs/update-film.js","pages/update-film.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","helpers/index.js","components/input.js","services/filmService.js","reducers/update-reducer.js"],"names":["UpdateFilm","setToUpdate","useContext","UpdateContext","history","useHistory","id","useParams","useReducer","updateReducer","updateInitialState","update","title","description","initial","isInitialLoaded","isSumbitted","isSending","isError","error","isSuccess","dispatch","useEffect","getInitialFilm","a","index","then","res","type","payload","data","catch","err","location","state","onSubmit","event","preventDefault","partialUpdate","setTimeout","handleCloseModalWindow","className","htmlFor","name","value","isInvalid","onChange","e","fieldName","target","disabled","onClose","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","displayCommentDate","comment","date","Date","parse","createdAt","getDate","slice","getMonth","getFullYear","getHours","getMinutes","parseSearchDate","film","today","time","Math","abs","floor","UTC","toSplit","replace","pathname","split","historyObject","process","search","push","Input","placeholder","inputRef","useRef","current","classList","add","remove","ref","rows","all","params","axios","get","indexDetails","view","patch","create","form","post","headers","authHeader","body","like","delete","action"],"mappings":"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","file":"static/js/11.8ecdff2c.chunk.js","sourcesContent":["import React, { useContext, useEffect, useReducer } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport Input from '../input'\nimport { updateInitialState, updateReducer } from \"../../reducers/update-reducer\";\n\nimport { index, partialUpdate } from '../../services/filmService'\nimport { handleCloseModalWindow } from '../../helpers'\nimport UpdateContext from '../../contexts/updateModal/updateContext'\n\nconst UpdateFilm = () => {\n\n    const { setToUpdate } = useContext(UpdateContext)\n\n    let history = useHistory()\n    let { id } = useParams();\n\n    const [{\n        update,\n        initial,\n        isInitialLoaded,\n        isSumbitted,\n        isSending,\n        isError,\n        error,\n        isSuccess }, dispatch] = useReducer(updateReducer,\n            { ...updateInitialState, update: { title: '', description: '' }, initial: { title: '', description: '' } })\n\n\n    useEffect(() => {\n        const getInitialFilm = async () => {\n            await index(id)\n                .then(res => {\n                    dispatch({\n                        type: 'initial-success',\n                        payload: { title: res.data.title, description: res.data.description }\n                    })\n                })\n                .catch(err => {\n                    dispatch({ type: 'error' })\n                })\n        }\n\n        if (history.location.state && history.location.state.title && history.location.state.description) {\n            dispatch({\n                type: 'initial-success',\n                payload: { title: history.location.state.title, description: history.location.state.description }\n            })\n        } else {\n            getInitialFilm()\n        }\n\n    }, [id, history])\n\n\n    const handleSumbit = (event) => {\n        event.preventDefault()\n        dispatch({ type: 'submit' })\n\n        if (update.title && update.description) {\n            dispatch({ type: 'send' })\n\n            return partialUpdate(id, { title: update.title, description: update.description })\n                .then(res => {\n                    dispatch({ type: 'success' })\n\n                    setToUpdate(false, res.data)\n\n                    setTimeout(() => handleCloseModalWindow(history, '/update-film'), 500)\n                })\n                .catch(err => {\n                    dispatch({ type: 'error' })\n                })\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={isSending ? null : handleSumbit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title</label>\n                    <Input type=\"text\" name=\"title\" value={update.title}\n                        isInvalid={isSumbitted && !update.title}\n                        onChange={e => dispatch({ type: 'update', fieldName: 'title', payload: e.target.value })}\n                    />\n                    <div className=\"invalid-feedback\">\n                        Title cannot be empty\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Description</label>\n                    <Input type=\"textarea\" name=\"description\" value={update.description}\n                        isInvalid={isSumbitted && !update.description}\n                        onChange={e => dispatch({ type: 'update', fieldName: 'description', payload: e.target.value })} />\n                    <div className=\"invalid-feedback\">\n                        Description cannot be empty\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\"\n                        disabled={!isInitialLoaded ||\n                            (isInitialLoaded && update.description === initial.description && update.title === initial.title)}\n                        type=\"submit\">Save</button>\n                    {\n                        isSending &&\n                        <div className=\"ml-2 spinner-grow\" />\n                    }\n                </div>\n            </form>\n            {\n                isError && <div className=\"alert alert-danger mt-2 mb-0\">\n                    {error ? error : 'Something went wrong'}\n                </div>\n            }\n\n            {\n                isSuccess && <div className=\"alert alert-success mt-2 mb-0\">\n                    Changes saved successfully!\n                </div>\n            }\n\n        </>\n    )\n}\n\nexport default UpdateFilm","import { useHistory } from 'react-router-dom'\nimport Modal from '../components/modal'\nimport UpdateFilmComponent from '../components/dialogs/update-film'\n\nimport { handleCloseModalWindow } from '../helpers'\n\nexport default function UpdateFilm() {\n\n    let history = useHistory()\n\n    const modalClose = () => {\n        handleCloseModalWindow(history, '/update-film')\n    }\n\n\n\n    return (\n        <Modal id=\"updatateFilmModal\" title=\"Update\" onClose={modalClose}>\n            <UpdateFilmComponent />\n        </Modal>\n    )\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export const displayCommentDate = (comment) => {\n    let date = new Date(Date.parse(comment.createdAt));\n    let time = (('0' + date.getDate()).slice(-2) + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-'\n        + ('0' + date.getFullYear()).slice(-2)\n        + ' o ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2))\n    return time;\n};\n\nexport const parseSearchDate = (film) => {\n\n    let date = new Date(Date.parse(film.createdAt));\n    let today = new Date();\n\n\n    let time = Math.abs(Math.floor((\n        Date.UTC(\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes()) -\n        Date.UTC(\n            today.getFullYear(),\n            today.getMonth(),\n            today.getDate(),\n            today.getHours(),\n            today.getMinutes()))\n        / (1000 * 60)));\n\n    if (time / 60 >= 1) {\n        time /= 60;\n\n        if (time / 24 >= 1) {\n\n            time /= 24;\n\n            if (time / 30 >= 1) {\n\n                time /= 30;\n\n                if (time / 12 >= 1) {\n\n                    time = time / 12;\n                    time = Math.floor(time) + ' years ';\n\n                } else {\n                    time = Math.floor(time) + ' months ';\n                }\n\n            } else {\n                time = Math.floor(time) + ' days ';\n            }\n\n        } else {\n            time = Math.floor(time) + ' hours ';\n        }\n    } else {\n        time = Math.floor(time) + ' minutes ';\n    }\n\n    time = time + 'ago';\n\n    return time;\n};\n\nexport const handleCloseModalWindow = (history, toSplit, replace = false) => {\n\n    let pathname = history.location.pathname.split(toSplit)[0]\n\n    const historyObject = {\n        pathname: pathname === '' ? process.env.REACT_APP_PATH_NAME : pathname,\n        search: history.location.search,\n        state: history.location.state\n    }\n\n    if (replace) {\n        history.replace(historyObject)\n    }\n    else {\n        history.push(historyObject)\n    }\n\n}","import { useEffect, useRef } from \"react\"\n\nconst Input = ({ isInvalid, onChange, type, name, value, placeholder = '' }) => {\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        let ref = inputRef.current\n        if (ref) {\n            if (isInvalid) inputRef.current.classList.add('is-invalid')\n            else inputRef.current.classList.remove('is-invalid')\n        }\n    }, [isInvalid])\n\n    return type === 'textarea' ?\n        <textarea ref={inputRef} className=\"form-control\"\n            placeholder={placeholder}\n            type={type} name={name}\n            value={value} onChange={onChange} rows={8}/> :\n        <input ref={inputRef} className=\"form-control\"\n            placeholder={placeholder}\n            type={type} name={name}\n            value={value} onChange={onChange} />\n\n\n}\n\nexport default Input","import axios from '../helpers/axios'\nimport authHeader from '../helpers/auth-header'\n\n\nexport const all = (params) => axios.get('films/', {params})\nexport const index = (id) => axios.get(`films/${id}`)\nexport const indexDetails = (id) => axios.get(`films/${id}/details`)\nexport const search = (params) => axios.get('films/search', {params})\n\nexport const view = (id) => axios.patch(`films/${id}/view`)\n\nexport const video = (id) => axios.get(`films/${id}/video`)\nexport const thumbnail = (id, params) => axios.get(`films/${id}/thumbnail`, {params})\n\nexport const create = (form) => axios.post(`films`, form, {headers: authHeader()})\n\nexport const update = (id, body) => axios.put(`films/${id}`, body, {headers: authHeader()})\nexport const partialUpdate = (id, body) => axios.patch(`films/${id}`, body, {headers: authHeader()})\n\nexport const like = (id, form) => axios.patch(`films/${id}/action`, form, {headers: authHeader()})\n\nexport const remove = (id) => axios.delete(`films/${id}`, { headers: authHeader() })\n\n\n\n","export const updateInitialState = {\n    update: {},\n    initial: {},\n    isInitialLoaded: false,\n    isSumbitted: false,\n    isSending: false,\n    isSuccess: false,\n    isError: false,\n    error: '',\n}\n\nexport const updateReducer = (state, action) => {\n    switch (action.type) {\n        case 'update': {\n            return {\n                ...state,\n                error: '',\n                isError: false,\n                update: { ...state.update, [action.fieldName]: action.payload }\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                isInitialLoaded: true,\n                update: action.payload,\n                initial: action.payload\n            }\n        }\n        case 'submit': {\n            return {\n                ...state,\n                isSumbitted: true,\n                isError: false,\n                error: ''\n            }\n        }\n        case 'send': {\n            return {\n                ...state,\n                isSending: true\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                isSuccess: true,\n                isSending: false,\n                isSumbitted: false,\n                isError: false,\n                error: ''\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isSuccess: false,\n                isSending: false,\n                isSumbitted: false,\n                isError: true,\n                error: action.payload ? action.payload : ''\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}"],"sourceRoot":""}