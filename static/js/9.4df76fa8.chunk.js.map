{"version":3,"sources":["helpers/contexts/film/filmContext.js","components/filmPage/reducers/previewReducer.js","components/filmPage/preview.js","components/filmPage/reducers/recommendationsReducer.js","components/filmPage/recommendations.js","services/commentService.js","components/filmPage/reducers/commentsReducer.js","components/filmPage/comments.js","components/filmPage/reducers/playlistReducer.js","components/filmPage/playlist.js","helpers/contexts/film/filmProvider.js","components/filmPage/index.js"],"names":["FilmContext","createContext","initialPreviewState","film","img","video","title","views","likes","dislikes","description","isLiked","isDisliked","isLikeButtonClicked","likeAction","isDescExpanded","previewReducer","state","action","type","fieldName","payload","FilmPreview","props","history","useHistory","location","useLocation","user","useContext","UserContext","filmDispatch","playerRef","useCallback","node","getBoundingClientRect","height","setPlayerNode","useReducer","dispatch","useState","playerNode","useEffect","measure","window","addEventListener","removeEventListener","a","requests","filmApi","match","params","id","auth","push","userApi","details","Promise","allSettled","filmResponse","filmViewResponse","userResponse","status","filmData","value","data","comments","commentsCount","comments_count","process","liked","indexOf","disliked","handleGetFilm","likeResult","likeData","userResult","console","error","response","pathname","handleLike","handleTruncate","e","preventDefault","TruncateButton","Button","variant","className","onClick","Col","sm","ref","playsInline","poster","src","Fragment","Row","xs","icon","faEye","style","cursor","faThumbsUp","faThumbsDown","whiteSpace","textAlign","line","truncateText","text","textTruncateChild","recommendationsInitialState","films","isLoading","isAllFetched","isInitialLoaded","recommendationsReducer","length","recommendationsMaxFetchCount","FilmsRecommendations","filmState","handleRecommendationsOnBottom","useBottomScrollListener","exclude","limit","then","res","forEach","catch","err","isPreviewLoaded","initialLoad","skip","fetchData","map","index","isRecommendations","handleRedirect","Spinner","animation","all","film_id","axios","get","remove","delete","headers","authHeader","sort","commentsInitialState","isAdding","isRemoving","toRemove","isSorting","sorts","dir","commentsReducer","commentsMaxFetchCount","filter","comment","sortToChange","Comments","RemoveModalContext","showModal","clear","removeModalData","handleOnCommentsBottom","commentApi","loadSortedComments","loadComments","form","post","addComment","substring","concat","removeComment","sortParams","sortComments","md","DropdownButton","onSelect","tmpSort","handleSortComments","sortTmp","Dropdown","Item","eventKey","active","TextField","onChange","target","label","multiline","fullWidth","maxrow","disabled","author_name","displayCommentDate","author_id","width","borderRadius","handleRemoveComment","filmPlaylistInitialState","playlist","currentFilm","currentFilmIndex","isRemovingPlaylist","isRemovingFilm","removingFilmId","headerHeight","playerHeight","filmPlaylistReducer","filtered","findIndex","is_public","Playlist","clearPlaylist","headerRef","playlistApi","filmIndex","filmId","Array","prototype","call","reloadPlaylist","handleReloadPlaylist","parsed","queryString","parse","search","list","handleGetPlaylist","removePlaylist","films_id","is_remove_films","removeFilm","handleRemoveFromPlaylist","handleRemove","isPublic","isProfile","dispatchPrivacyUpdate","onYReachEnd","onScrollY","isNonExisting","fontWeight","display","justifyContent","alignItems","alt","image_not_found","filmInitialState","filmReducer","FilmProvider","children","Provider","Film","onSmallScreen","useWindowWidth","historyObject","span","order"],"mappings":"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","file":"static/js/9.4df76fa8.chunk.js","sourcesContent":["import { createContext } from 'react'\nconst FilmContext = createContext();\nexport default FilmContext","const initialFilm = {\n    img: '',\n    video: '',\n    film: '',\n    title: '',\n    views: '',\n    likes: '',\n    dislikes: '',\n    description: `\\r\\n\\n\\n`,\n}\n\nexport const initialPreviewState = {\n    film: initialFilm,\n    isLiked: false,\n    isDisliked: false,\n    isLikeButtonClicked: false,\n    likeAction: null,\n    isDescExpanded: false\n}\n\nexport function previewReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'like': {\n            return {\n                ...state,\n                isLikeButtonClicked: true,\n                likeAction: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                film: action.film,\n                isLiked: action.isLiked,\n                isDisliked: action.isDisliked,\n                isLikeButtonClicked: false,\n                likeAction: null,\n                isDescExpanded: false\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLikeButtonClicked: false,\n                likeAction: null\n            }\n        }\n        default: return state\n    }\n}","import React, { useState, useEffect, useCallback, useContext, useReducer } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as filmApi from '../../services/filmService'\nimport * as userApi from '../../services/userService'\n\nimport { Player } from 'video-react';\nimport TextTruncate from 'react-text-truncate';\n\nimport FilmContext from '../../helpers/contexts/film/filmContext'\n\nimport \"../../../node_modules/video-react/dist/video-react.css\";\nimport { initialPreviewState, previewReducer } from './reducers/previewReducer';\nimport UserContext from '../../helpers/contexts/user/userContext';\nimport { faEye, faThumbsDown, faThumbsUp } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction FilmPreview(props) {\n\n    let history = useHistory()\n    let location = useLocation()\n\n    const { user } = useContext(UserContext)\n\n    // eslint-disable-next-line no-unused-vars\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const playerRef = useCallback(node => {\n        if (node !== null) {\n            filmDispatch({\n                type: 'field',\n                fieldName: 'playerHeight',\n                payload: node.getBoundingClientRect().height\n            })\n            setPlayerNode(node)\n        }\n    }, [filmDispatch])\n\n    const [state, dispatch] = useReducer(previewReducer, initialPreviewState)\n\n    const { film, isLiked, isDisliked, isLikeButtonClicked, likeAction, isDescExpanded } = state\n\n    const [playerNode, setPlayerNode] = useState(null);\n\n\n    useEffect(() => {\n        if (playerNode) {\n\n            const measure = () => {\n                filmDispatch({\n                    type: 'field',\n                    fieldName: 'playerHeight',\n                    payload: playerNode.getBoundingClientRect().height\n                })\n            }\n\n            window.addEventListener(\"resize\", measure);\n\n            return () => window.removeEventListener(\"resize\", measure);\n        }\n    }, [playerNode, filmDispatch]);\n\n    useEffect(() => {\n        async function handleGetFilm() {\n            let requests = [filmApi.index(props.match.params.id), filmApi.view(props.match.params.id)]\n            if (user.auth) requests.push(userApi.me({ details: true }))\n\n            const [filmResponse, filmViewResponse, userResponse] = await Promise.allSettled(requests);\n\n            if (filmResponse.status === \"rejected\" || filmViewResponse.status === \"rejected\") {\n                filmDispatch({\n                    type: 'field',\n                    fieldName: 'error',\n                    payload: true\n                })\n                return\n            }\n\n\n            const filmData = filmResponse.value.data\n\n            filmDispatch({\n                type: 'success',\n                comments: filmData.comments,\n                commentsCount: filmData.comments_count\n            })\n\n            const film = {\n                ...filmData,\n                img: `${process.env.REACT_APP_API_URL}films/${filmData.id}/thumbnail?width=poster`,\n                video: `${process.env.REACT_APP_API_URL}films/${filmData.id}/video`,\n                views: filmViewResponse.value.data.views\n            }\n            let isLiked = false\n            let isDisliked = false\n\n\n            if (userResponse && userResponse.status === \"fulfilled\") {\n                const details = userResponse.value.data.details\n                isLiked = details.liked.indexOf(props.match.params.id) > -1\n                isDisliked = details.disliked.indexOf(props.match.params.id) > -1\n            }\n\n            dispatch({\n                type: 'success',\n                film: film,\n                isLiked: isLiked,\n                isDisliked: isDisliked\n            })\n\n        }\n        handleGetFilm()\n    }, [props.match.params.id, filmDispatch, user.auth])\n\n    useEffect(() => {\n        async function handleLike() {\n            if (likeAction === null) return\n\n            try {\n                const likeResult = await filmApi.like(film.id, { action: likeAction })\n\n                let likeData = likeResult.data\n                likeData.img = `${process.env.REACT_APP_API_URL}films/${likeData.id}/thumbnail?width=poster`\n                likeData.video = `${process.env.REACT_APP_API_URL}films/${likeData.id}/video`\n\n                const userResult = await userApi.me({ details: true })\n                const details = userResult.data.details\n                const isLiked = details.liked.indexOf(likeData.id) > -1\n                const isDisliked = details.disliked.indexOf(likeData.id) > -1\n\n                dispatch({\n                    type: 'success',\n                    film: likeData,\n                    isLiked: isLiked,\n                    isDisliked: isDisliked\n                })\n\n            } catch (err) {\n                console.error(err)\n                dispatch({\n                    type: 'error'\n                })\n                if (err.response && err.response.status === 401) {\n                    history.push(`${location.pathname}/login`);\n                }\n            }\n        }\n\n        if (isLikeButtonClicked) handleLike()\n    }, [film.id, isLikeButtonClicked, likeAction, history, location])\n\n    const handleTruncate = (e) => {\n        e.preventDefault();\n        dispatch({\n            type: 'field',\n            fieldName: 'isDescExpanded',\n            payload: !isDescExpanded\n        })\n    }\n\n    const handleLike = (action) => {\n        if (isLikeButtonClicked) return\n        dispatch({\n            type: 'like',\n            payload: action\n        })\n\n    };\n\n    const TruncateButton = (title) => {\n        return (<span>\n            <Button variant=\"link\"\n                className=\"p-0 m-0 mb-1 title fw-bold\"\n                onClick={handleTruncate}>{title}</Button>\n        </span>)\n    }\n    return (\n\n        <Col>\n            <Col sm={12}>\n                <div ref={playerRef}>\n                    <Player\n                        playsInline\n                        poster={film.img}\n                        src={film.video} />\n                </div>\n            </Col>\n            {\n                film &&\n                <React.Fragment>\n                    <Col className=\"mt-4\" sm={12}>\n                        <Row className=\"p-0 m-0\">\n                            <Col sm={12} className=\"p-0\">\n                                {!film.title && <p className=\"fw-bold\"><br /></p>}\n                                <p className=\"fw-bold\">{film.title}</p>\n                            </Col>\n                            <Col xs={4} sm={4} className=\"p-0\">\n                                <p><FontAwesomeIcon icon={faEye} /> &ensp;{film.views}</p>\n                            </Col>\n                            <Col xs={4} sm={4} className=\"text-right d-flex justify-content-end\">\n                                <p style={{ cursor: \"pointer\" }}\n                                    className={isLiked ? 'film-picked-thumb-color' : ''}\n                                    onClick={() => handleLike('like')}>\n                                    <FontAwesomeIcon icon={faThumbsUp} />\n                                    &ensp;{film.likes}\n                                </p>\n                            </Col>\n                            <Col xs={4} sm={4}>\n                                <p style={{ cursor: \"pointer\" }} className={isDisliked ? 'film-picked-thumb-color' : ''}\n                                    onClick={() => handleLike('dislike')}>\n                                    <FontAwesomeIcon icon={faThumbsDown} />\n                                    &ensp;{film.dislikes}\n                                </p>\n                            </Col>\n                            <Col sm={12} className=\"mt-4 mb-4 divider\" />\n\n                            <Col sm={12} className=\"p-0\" style={{ whiteSpace: 'pre-line', textAlign: 'justify' }}>\n                                <TextTruncate line={!isDescExpanded && 2}\n                                    truncateText=\"…\"\n                                    text={film.description}\n                                    textTruncateChild={TruncateButton('Show more')} />\n\n                                {isDescExpanded && TruncateButton('Show less')}\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col sm={12} className=\"mt-4 mb-2 divider\" />\n                </React.Fragment>\n            }\n        </Col>\n\n\n    )\n}\n\n\nexport default FilmPreview\n","import { recommendationsMaxFetchCount } from \"../../../config\"\n\nexport const recommendationsInitialState = {\n    films: null,\n    id: null,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    error: null,\n}\n\nexport function recommendationsReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'clear': {\n            return recommendationsInitialState\n        }\n        case 'initial-success': {\n            return {\n                ...recommendationsInitialState,\n                films: action.films,\n                id: action.id,\n                isInitialLoaded: true\n            }\n        }\n        case 'load': {\n\n            return {\n                ...state,\n                isLoading: true,\n                isAllFetched: false\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                films: [...state.films, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < recommendationsMaxFetchCount\n            }\n        }\n        case 'error': {\n            return {\n                ...recommendationsInitialState,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}\n","import React, { useEffect, useReducer, useCallback, useContext } from 'react';\n\nimport { Col, Spinner } from \"react-bootstrap\";\n\nimport * as filmApi from '../../services/filmService'\n\nimport useBottomScrollListener from '../../helpers/hooks/useBottomScrollListener';\nimport Film from '../../helpers/components/film';\nimport { recommendationsReducer, recommendationsInitialState } from './reducers/recommendationsReducer'\nimport { recommendationsMaxFetchCount } from \"../../config\"\nimport FilmContext from '../../helpers/contexts/film/filmContext';\n\nfunction FilmsRecommendations(props) {\n\n    // eslint-disable-next-line no-unused-vars\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(recommendationsReducer, recommendationsInitialState)\n\n    const { films, isLoading, isAllFetched, isInitialLoaded, id, error } = state\n\n    const handleRecommendationsOnBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded && !error && id) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded, error, id])\n\n    useBottomScrollListener(handleRecommendationsOnBottom)\n\n    useEffect(() => {\n        async function initialLoad() {\n            await filmApi.all({ exclude: props.match.params.id, limit: recommendationsMaxFetchCount })\n                .then(res => {\n                    let films = res.data;\n\n                    films.forEach(film => {\n                        film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail?width=small_webp`\n\n                    });\n\n                    dispatch({\n                        type: 'initial-success',\n                        films: films,\n                        id: props.match.params.id\n                    })\n\n\n                })\n                .catch(err => console.error(err))\n        }\n\n        dispatch({\n            type: 'clear'\n        })\n\n        if (filmState.isPreviewLoaded) {\n            initialLoad()\n        }\n    }, [props.match.params.id, filmState.isPreviewLoaded])\n\n    useEffect(() => {\n        if (filmState.error) {\n            dispatch({\n                type: 'error',\n                payload: filmState.error\n            })\n        }\n    }, [filmState.error])\n\n    useEffect(() => {\n        async function fetchData() {\n            await filmApi.all({ exclude: id, skip: films.length, limit: recommendationsMaxFetchCount }).then(res => {\n                let films = res.data;\n\n                films.forEach(film => {\n                    film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail?width=small_webp`\n\n                });\n\n                dispatch({\n                    type: 'success',\n                    payload: films\n                })\n            })\n        }\n        if (isLoading && films && id) fetchData()\n    }, [isLoading, id, films])\n\n    return (\n\n        <Col>\n\n            {\n                films && films.map((film, index) => <Film key={film.id} film={film} index={index} isRecommendations={true} handleRedirect={() => props.handleRedirect(film.id)} />)\n            }\n\n\n            {\n                !isAllFetched && <div style={{ height: 32 + 'px' }} className=\"d-flex justify-content-center\">\n                    {(isLoading || !isInitialLoaded) && !error && <Spinner animation=\"border\" />}\n                </div>\n            }\n        </Col>\n    )\n}\n\nexport default FilmsRecommendations\n","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const all = (film_id, params) => axios.get(`films/${film_id}/comments`, { params })\n\nexport const create = (film_id, form) => axios.post(`films/${film_id}/comments`, form, { headers: authHeader() })\n\nexport const update = (id, update) => axios.put(`comments/${id}`, update, { headers: authHeader() })\n\nexport const remove = (id) => axios.delete(`comments/${id}`, { headers: authHeader() })\n\nexport const sort = (film_id, params) => axios.get(`films/${film_id}/comments/sort`, { params, headers: authHeader() })\n\n\n","import { commentsMaxFetchCount } from \"../../../config\"\n\nexport const commentsInitialState = {\n    comments: null,\n    commentsCount: null,\n    text: '',\n    id: null,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    isAdding: false,\n    isRemoving: false,\n    toRemove: null,\n    isSorting: false,\n    sort: null,\n    sorts: [\n        { id: 'created_at', title: 'By date', dir: 1 },\n        { id: 'author_name', title: 'By author name', dir: 1 }\n    ],\n    error: null\n}\n\nexport function commentsReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'clear': {\n            return {\n                ...commentsInitialState,\n                id: action.id\n            }\n        }\n        case 'load': {\n            return !state.isLoading && !state.isAllFetched && state.isInitialLoaded && !state.isAdding &&\n                !state.error && state.id && !state.isSorting ?\n                {\n                    ...state,\n                    isLoading: true\n                } : state\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                comments: action.comments,\n                commentsCount: action.commentsCount,\n                isAllFetched: action.comments.length < commentsMaxFetchCount,\n                isInitialLoaded: true,\n                error: null,\n            }\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                comments: [...state.comments, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < commentsMaxFetchCount\n            }\n        }\n        case 'add': {\n            return {\n                ...state,\n                isAdding: true,\n                error: null\n            }\n        }\n        case 'add-success': {\n            return {\n                ...state,\n                text: '',\n                commentsCount: state.commentsCount + 1,\n                comments: [action.payload, ...state.comments],\n                isAdding: false\n            }\n        }\n        case 'remove': {\n            return {\n                ...state,\n                isRemoving: true,\n                toRemove: action.payload\n            }\n        }\n        case 'remove-success': {\n            return {\n                ...state,\n                isRemoving: false,\n                toRemove: null,\n                commentsCount: state.commentsCount - 1,\n                comments: state.toRemove ? state.comments.filter(comment => comment.id !== state.toRemove.id) : state.data\n            }\n        }\n        case 'sort': {\n            return {\n                ...state,\n                comments: null,\n                isAllFetched: false,\n                sorts: state.sorts.map(sort => {\n                    if (sort.id === action.sortToChange.id) return action.sortToChange\n                    else return sort\n                }),\n                sort: action.sort,\n                isSorting: true,\n            }\n        }\n        case 'sort-success': {\n            return {\n                ...state,\n                isSorting: false,\n                comments: action.payload,\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isAdding: false,\n                isLoading: false,\n                isSorting: false,\n                error: action.payload,\n            }\n        }\n        default: return state\n    }\n}","import React, { useContext, useEffect, useReducer, useCallback } from 'react';\n\nimport { Button, Col, Dropdown, DropdownButton, Row, Spinner } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport TextField from '@material-ui/core/TextField';\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\n\nimport * as commentApi from '../../services/commentService'\n\nimport useBottomScrollListener from '../../helpers/hooks/useBottomScrollListener';\nimport { commentsReducer, commentsInitialState } from './reducers/commentsReducer';\nimport { commentsMaxFetchCount } from \"../../config\"\nimport UserContext from '../../helpers/contexts/user/userContext';\nimport FilmContext from '../../helpers/contexts/film/filmContext';\nimport { displayCommentDate } from '../../helpers';\nimport RemoveModalContext from '../../helpers/contexts/removeModal/removeModalContext';\n\nfunction Comments(props) {\n\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\n\n    const { user } = useContext(UserContext);\n\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(commentsReducer, commentsInitialState)\n    const {\n        comments,\n        commentsCount,\n        text,\n        isInitialLoaded,\n        isLoading,\n        isAllFetched,\n        isAdding,\n        id,\n        isRemoving,\n        toRemove,\n        isSorting,\n        sort,\n        sorts,\n        error\n    } = state\n\n    const handleOnCommentsBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded && !isAdding && !error && id && !isSorting) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded, isAdding, error, id, isSorting])\n\n    useBottomScrollListener(handleOnCommentsBottom)\n\n    useEffect(() => {\n        dispatch({\n            type: 'clear',\n            id: props.match.params.id\n        })\n    }, [props.match.params.id])\n\n    useEffect(() => {\n        if (filmState.error) {\n            dispatch({\n                type: 'error',\n                payload: filmState.error\n            })\n        }\n    }, [filmState.error])\n\n    useEffect(() => {\n        function getCommentsFromContext() {\n            dispatch({\n                type: 'initial-success',\n                comments: filmState.comments,\n                commentsCount: filmState.commentsCount,\n            })\n        }\n\n        if (filmState.comments && filmState.commentsCount !== null) getCommentsFromContext()\n    }, [filmState.comments, filmState.commentsCount, filmDispatch])\n\n    useEffect(() => {\n        async function loadComments() {\n            await commentApi.all(id, { skip: comments.length, limit: commentsMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                })\n        }\n        async function loadSortedComments() {\n            await commentApi.sort(id, { [sort.id]: sort.dir, skip: comments.length, limit: commentsMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                })\n        }\n        if (isLoading && isInitialLoaded && !isAdding &&\n            comments && id && !isSorting) {\n            if (!sort)\n                loadComments()\n            else\n                loadSortedComments()\n        }\n    }, [isLoading, isAdding, id, comments, isInitialLoaded, isSorting, sort])\n\n\n    useEffect(() => {\n        const addComment = async () => {\n            const comment = { text: text }\n\n            await commentApi.create(id, comment)\n                .then(res => {\n                    dispatch({\n                        type: 'add-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error',\n                        payload: err.response.status\n                    })\n                })\n        };\n        if (isAdding && !isLoading && id) addComment()\n    }, [isAdding, isLoading, id, text])\n\n    useEffect(() => {\n        async function removeComment() {\n            await commentApi.remove(toRemove.id)\n                .then(res => {\n                    dispatch({ type: 'remove-success' })\n                    clear()\n                })\n                .catch(err => {\n                    clear()\n                    console.error(err)\n                })\n        }\n\n        if (isRemoving && toRemove && removeModalData.isRemoving &&\n            removeModalData.id === toRemove.id && removeModalData.type === 'comment' &&\n            removeModalData.title === toRemove.text.substring(0, 10).concat('...')) removeComment()\n    }, [isRemoving, toRemove, clear, removeModalData])\n\n    useEffect(() => {\n        async function sortComments() {\n            const sortParams = sort ? { [sort.id]: sort.dir, limit: commentsMaxFetchCount } : {}\n\n            await commentApi.sort(id, sortParams)\n                .then(res => {\n                    dispatch({ type: 'sort-success', payload: res.data })\n                })\n                .catch(err => {\n                    dispatch({ type: 'error', payload: 'Sort error.' })\n                    console.error(err)\n                })\n        }\n        if (isSorting) sortComments()\n    }, [isSorting, sort, id])\n\n    const handleAddComment = () => {\n        dispatch({\n            type: 'add'\n        })\n    }\n\n    const handleRemoveComment = (comment) => {\n        if (removeModalData.isRemoving) return\n        dispatch({ type: 'remove', payload: comment })\n        showModal(comment.id, 'comment', comment.text.substring(0, 10).concat('...'))\n    }\n\n    const handleSortComments = (e) => {\n\n        let sortToChange = null\n\n        switch (e) {\n            case 'created_at':\n                sortToChange = sorts[0]\n\n                break;\n            case 'author_name':\n                sortToChange = sorts[1]\n                break;\n            default:\n                return;\n        }\n\n        let tmpSort = null\n\n        if (sort && sort.id === sortToChange.id) {\n            sortToChange.dir *= -1\n            tmpSort = sortToChange\n            if (sortToChange.dir === 1) {\n                tmpSort = null\n            }\n        } else {\n            tmpSort = sortToChange\n        }\n\n        dispatch({\n            type: 'sort',\n            sortToChange: sortToChange,\n            sort: tmpSort\n        })\n\n    };\n\n\n    return (\n\n        <Col>\n            <Row className=\"p-0 mt-4 mb-4\">\n                <Col xs={7} sm={5} md={4} className=\"d-flex align-items-center \">\n                    {commentsCount !== null && <span>{commentsCount}{commentsCount === 1 ? ' comment' : ' comments'} </span>}\n                </Col>\n                <Col xs={2} sm={2}>\n                    <DropdownButton\n                        variant=\"secondary\"\n                        title=\"Sort\"\n                        id=\"dropdown-button-drop-down\"\n                        onSelect={e => handleSortComments(e)}>\n                        {\n                            sorts.map(sortTmp => (\n                                <Dropdown.Item key={sortTmp.id} eventKey={sortTmp.id} active={sort && sortTmp.id === sort.id}>\n                                    {sortTmp.title}\n                                    {sort && sort.id === sortTmp.id && sortTmp.dir === 1 ?\n                                        <FontAwesomeIcon className=\"ms-2\" icon=\"sort-up\" /> :\n                                        sort && sort.id === sortTmp.id && sortTmp.dir === -1 ?\n                                            <FontAwesomeIcon className=\"ms-2\" icon=\"sort-down\" /> : \"\"}\n                                </Dropdown.Item>)\n                            )\n                        }\n                    </DropdownButton>\n                </Col>\n            </Row>\n            <TextField\n                value={text}\n                onChange={e => dispatch({ type: 'field', fieldName: 'text', payload: e.target.value })}\n                type=\"text\"\n                id=\"standard-multiline-flexible\"\n                label=\"Comment\"\n                multiline\n                fullWidth\n                maxrow=\"4\" />\n            <Col className=\"d-flex justify-content-end\" >\n                <Button disabled={isAdding || !text}\n                    className=\"mt-3\" variant=\"primary\"\n                    onClick={(text && !isAdding) ? handleAddComment : null}>\n                    Submit\n                </Button>\n            </Col>\n\n            {\n                isAdding && <div style={{ height: 32 + 'px' }} className=\"d-flex justify-content-center\">\n                    <Spinner animation=\"border\" />\n                </div>\n            }\n            {\n                comments && comments.map(comment => {\n                    return (\n                        <Col className=\"p-0 mt-4 remove-container\" sm={12} key={comment.id}>\n                            <div className=\"d-flex\">\n                                <p className=\"m-0 fw-bold\">\n                                    <small className=\"m-0 fw-bold\">{comment.author_name}&nbsp;</small>\n                                </p>\n                                <p >\n                                    <small className=\"m-0\">{displayCommentDate(comment)}</small>\n                                </p>\n                                {\n                                    user.id === comment.author_id &&\n                                    <Col\n                                        xs={2} sm={2}\n                                        className=\"d-flex justify-content-center align-items-center remove-holder p-0 m-0 ms-auto\"\n                                        style={{ height: 24 + 'px', width: 24 + \"px\" }}>\n                                        <ButtonBase\n                                            style={{ borderRadius: 20 + \"px\", width: 24 + \"px\", height: 24 + \"px\" }}\n                                            className=\"m-button cursor-pointer\"\n                                            onClick={() => handleRemoveComment(comment)}>\n                                            <FontAwesomeIcon icon=\"trash-alt\" />\n                                        </ButtonBase>\n                                    </Col>\n                                }\n                            </div>\n                            <p className=\"d-block d-sm-block\">\n                                <small>{comment.text}</small>\n                            </p>\n                        </Col>\n                    )\n                })\n            }\n\n            {\n                !isAllFetched && <div style={{ height: 32 + 'px' }} className=\"d-flex justify-content-center\">\n                    {(isLoading || !isInitialLoaded || isSorting) && !error && <Spinner animation=\"border\" />}\n                </div>\n            }\n\n        </Col>\n\n    )\n}\n\nexport default Comments","\nexport const filmPlaylistInitialState = {\n    playlist: null,\n    currentFilm: null,\n    currentFilmIndex: 0,\n    isLoading: false,\n    isRemovingPlaylist: false,\n    isRemovingFilm: false,\n    removingFilmId: null,\n    headerHeight: null,\n    playerHeight: null\n}\n\nexport const filmPlaylistReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                isLoading: false,\n                playlist: action.playlist,\n                currentFilm: action.currentFilm,\n                currentFilmIndex: action.currentFilmIndex\n            }\n        }\n        case 'clear': {\n            return filmPlaylistInitialState\n        }\n        case 'remove-film': {\n            return {\n                ...state,\n                removingFilmId: action.payload,\n                isRemovingFilm: true\n            }\n        }\n        case 'remove-film-success': {\n\n            if (!state.removingFilmId)\n                return {\n                    ...state,\n                    isRemovingFilm: false\n                }\n\n            const filtered = state.playlist.films.filter(film => film.id !== state.removingFilmId)\n            return {\n                ...state,\n                currentFilm: state.removingFilmId === state.currentFilm ? null : state.currentFilm,\n                currentFilmIndex: state.removingFilmId === state.currentFilm ? 0 : filtered.findIndex(film => film.id === state.currentFilm) + 1,\n                playlist: {\n                    ...state.playlist,\n                    films: filtered\n                },\n                isRemovingFilm: false,\n            }\n        }\n        case 'change-playlist-privacy-success': {\n            return {\n                ...state,\n                playlist: { ...state.playlist, is_public: action.payload.is_public }\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                error: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}","import React, { useContext, useEffect, useCallback, useReducer } from 'react';\nimport { useLocation } from 'react-router-dom'\nimport { Col, Row } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport queryString from \"query-string\";\n\nimport TextTruncate from \"react-text-truncate\";\nimport image_not_found from '../../images/image_not_found.png'; // Tell Webpack this JS file uses this image\n\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nimport * as playlistApi from '../../services/playlistService'\nimport FilmContext from '../../helpers/contexts/film/filmContext';\n\nimport { filmPlaylistInitialState, filmPlaylistReducer } from './reducers/playlistReducer';\n\nimport UserContext from '../../helpers/contexts/user/userContext';\nimport RemoveButton from '../../helpers/components/removeButton';\nimport ChangePrivacyButton from '../../helpers/components/changePrivacyButton';\nimport RemoveModalContext from '../../helpers/contexts/removeModal/removeModalContext';\n\nfunction Playlist(props) {\n\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\n\n    let location = useLocation()\n\n    const { user } = useContext(UserContext)\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(filmPlaylistReducer, filmPlaylistInitialState)\n\n    const {\n        playlist,\n        isRemovingPlaylist,\n        isRemovingFilm,\n        removingFilmId,\n        currentFilm,\n        currentFilmIndex,\n        headerHeight,\n        playerHeight,\n        error\n    } = state\n\n    const clearPlaylist = () => {\n        dispatch({ type: 'clear' })\n    }\n\n    const headerRef = useCallback(node => {\n        if (node !== null) {\n            dispatch({\n                type: 'field',\n                fieldName: 'headerHeight',\n                payload: node.getBoundingClientRect().height\n            });\n        }\n    }, [])\n\n    useEffect(() => {\n        dispatch({\n            type: 'field',\n            fieldName: 'playerHeight',\n            payload: filmState.playerHeight\n        });\n    }, [filmState.playerHeight])\n\n    useEffect(() => {\n        dispatch({\n            type: 'error',\n            payload: filmState.error\n        });\n    }, [filmState.error])\n\n\n    useEffect(() => {\n        async function handleReloadPlaylist() {\n            await playlistApi.index(playlist.id)\n                .then(res => {\n\n                    let filmIndex = 0\n                    let filmId = null\n\n                    Array.prototype.forEach.call(res.data.films, (film, index) => {\n                        if (film && film.id === props.match.params.id) {\n                            filmIndex = index + 1\n                            filmId = film.id\n                        }\n                    })\n\n                    dispatch({\n                        type: 'success',\n                        playlist: res.data,\n                        currentFilm: filmId,\n                        currentFilmIndex: filmIndex\n                    })\n\n                    filmDispatch({\n                        type: 'field',\n                        fieldName: 'reloadPlaylist',\n                        payload: false\n                    })\n\n                    return res.data\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (filmState.reloadPlaylist && playlist) handleReloadPlaylist()\n\n    }, [filmState.reloadPlaylist, playlist, filmDispatch, props.match.params.id])\n\n\n\n    useEffect(() => {\n        const parsed = queryString.parse(location.search);\n        if (!parsed.list) {\n            clearPlaylist()\n            return\n        }\n\n        async function handleGetPlaylist() {\n            await playlistApi.index(parsed.list).then(res => {\n\n                let filmIndex = 0\n                let filmId = null\n\n                Array.prototype.forEach.call(res.data.films, (film, index) => {\n                    if (film && film.id === props.match.params.id) {\n                        filmIndex = index + 1\n                        filmId = film.id\n                    }\n                })\n\n                dispatch({\n                    type: 'success',\n                    playlist: res.data,\n                    currentFilm: filmId,\n                    currentFilmIndex: filmIndex\n                })\n                return res.data\n            }).catch(err => {\n                console.error(err)\n                clearPlaylist()\n            })\n        }\n        if (!error && filmState.isPreviewLoaded) handleGetPlaylist()\n    }, [props.match.params.id, location.search, error, filmState.isPreviewLoaded])\n\n\n    useEffect(() => {\n        async function removePlaylist() {\n            await playlistApi.remove(playlist.id)\n                .then(res => {\n                    clearPlaylist()\n                    clear()\n                })\n                .catch(err => {\n                    console.error(err)\n                    clear()\n                })\n        }\n        if (isRemovingPlaylist && removeModalData.isRemoving &&\n            removeModalData.id === playlist.id && removeModalData.type === 'playlist' &&\n            removeModalData.title === playlist.title) removePlaylist()\n    }, [clear, isRemovingPlaylist, playlist, removeModalData])\n\n\n    useEffect(() => {\n        async function removeFilm() {\n            await playlistApi.partialUpdate(playlist.id, { films_id: [removingFilmId], is_remove_films: true })\n                .then(res => {\n                    dispatch({\n                        type: 'remove-film-success'\n                    })\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (isRemovingFilm) removeFilm()\n    }, [isRemovingFilm, playlist, removingFilmId])\n\n    const handleRemovePlaylist = () => {\n\n        if (removeModalData.isRemoving) return\n\n        dispatch({\n            type: 'field',\n            fieldName: 'isRemovingPlaylist',\n            payload: true\n        })\n\n        showModal(playlist.id, 'playlist', playlist.title)\n    }\n\n    const handleRemoveFromPlaylist = (id) => {\n        if (isRemovingFilm) return\n\n        dispatch({\n            type: 'remove-film',\n            payload: id\n        })\n    }\n\n\n    return (\n\n        playlist && playerHeight && !error &&\n        <Col className='mb-4'>\n            <Col className='p-0 border'>\n                <Col ref={headerRef}\n                    style={{ height: headerHeight + 'px' }}\n                    className=\"remove-container pt-2 pb-2 film-preview-playlist-header\" sm={12}>\n                    <Row className=\"m-0 px-2\">\n                        <Col className=\"film-preview-playlist-title-width\">\n                            <p className=\"mb-1 fw-bold film-preview-playlist-text-truncate\">{playlist.title}</p>\n                        </Col>\n                        <Col className=\"justify-content-end d-flex\">\n                            {\n                                user.id === playlist.author_id &&\n                                <RemoveButton handleRemove={() => handleRemovePlaylist()} />\n                            }\n                        </Col>\n                        <Col xs={12} sm={12}>\n                            {\n                                user.id === playlist.author_id &&\n                                <ChangePrivacyButton\n                                    id={playlist.id}\n                                    isPublic={playlist.is_public}\n                                    isProfile={false}\n                                    dispatchPrivacyUpdate={dispatch} />\n                            }\n                            {\n                                user.id === playlist.author_id && <small>&nbsp;</small>\n\n                            }\n                            <small>{playlist.author_name}&nbsp;</small>\n                            <small\n                                className=\"film-preview-playlist-index\">\n                                - {currentFilmIndex}/{playlist.films.length}\n                            </small>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col style={{ height: playerHeight - headerHeight + 'px' }}\n                    className=\"p-0 film-preview-playlist-container\" xs={12} sm={12}>\n                    <PerfectScrollbar\n                        onYReachEnd={() => { }}\n                        onScrollY={() => { }}>\n                        {\n                            playlist.films.map((film, index) => {\n                                return film && !film.isNonExisting ? (\n                                    <Row xs={12} sm={12} className=\"m-0 p-0 remove-container\" key={film.id}>\n                                        <Col xs={9} sm={9}\n                                            className={index === playlist.films.length - 1 ?\n                                                \"mt-3 mb-3 \" :\n                                                \"mt-3\"}\n                                            onClick={() => props.handleRedirect(film.id)} >\n                                            <Row className=\"m-0 p-0 play-outer-container\">\n                                                <Col xs={1} sm={1}\n                                                    className=\"text-center justify-content-center d-flex align-items-center p-0 ps-1\" >\n                                                    {\n                                                        (currentFilm === film.id) ?\n                                                            <small>\n                                                                <FontAwesomeIcon style={{ fontWeight: 300 }}\n                                                                    icon=\"play\" />\n                                                            </small>\n                                                            :\n                                                            <small>{index + 1}</small>\n\n                                                    }\n                                                </Col>\n                                                <Col xs={6} sm={6} className=\"pe-2 ps-2\"\n                                                    style={{\n                                                        display: 'flex',\n                                                        justifyContent: 'center',\n                                                        alignItems: 'center'\n                                                    }}>\n                                                    <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                                                        <img alt=\"\" className=\"embed-responsive-item play-image\"\n                                                            src={`${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail?width=small_webp`} />\n                                                    </div>\n                                                </Col>\n                                                <Col xs={5} sm={5} className=\"p-0\">\n                                                    <TextTruncate line={1} text={film.title}\n                                                        className=\"mb-0 title fw-bold\" />\n                                                    <p className=\"mb-1 author-nick-color\">\n                                                        <small>{film.author_name}</small>\n                                                    </p>\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        {\n                                            user.id === playlist.author_id &&\n                                            <RemoveButton handleRemove={() => handleRemoveFromPlaylist(film.id)} />\n                                        }\n\n                                    </Row>\n                                ) : (\n                                    <Row xs={12} sm={12} className=\"m-0 p-0 remove-container\" key={film.id}>\n                                        <Col xs={9} sm={9}\n                                            className={index === playlist.films.length - 1 ?\n                                                \"mt-3 mb-3 \" :\n                                                \"mt-3\"} >\n                                            <Row className=\"m-0 p-0\">\n                                                <Col xs={1} sm={1}\n                                                    className=\"text-center justify-content-center d-flex align-items-center p-0 ps-1\" >\n                                                    <small>{index + 1}</small>\n                                                </Col>\n                                                <Col xs={6} sm={6} className=\"pe-2 ps-2\"\n                                                    style={{\n                                                        display: 'flex',\n                                                        justifyContent: 'center',\n                                                        alignItems: 'center'\n                                                    }}>\n                                                    <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                                                        <img alt=\"\" className=\"embed-responsive-item play-image\"\n                                                            src={image_not_found} />\n                                                    </div>\n                                                </Col>\n                                                <Col xs={5} sm={5} className=\"p-0\">\n                                                    <TextTruncate line={2} text=\"Not found\"\n                                                        className=\"mb-0 title fw-bold\" />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        {\n                                            user.id === playlist.author_id &&\n                                            <RemoveButton handleRemove={() => handleRemoveFromPlaylist(film.id)} />\n                                        }\n\n                                    </Row>\n                                )\n                            })\n                        }\n                    </PerfectScrollbar>\n\n                </Col>\n            </Col>\n        </Col >\n\n\n    )\n}\n\n\nexport default Playlist\n","import { useReducer } from \"react\"\nimport FilmContext from \"./filmContext\"\n\nconst filmInitialState = {\n    isPreviewLoaded: false,\n    comments: null,\n    commentsCount: null,\n    playerHeight: null,\n    reloadPlaylist: false,\n    error: null\n}\n\nconst filmReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                isPreviewLoaded: true,\n                comments: action.comments,\n                commentsCount: action.commentsCount,\n                error: null\n            }\n        }\n        case 'reset-comments': {\n            return {\n                ...state,\n                comments: null,\n                commentsCount: null\n            }\n        }\n        default:\n            return state\n    }\n}\n\nconst FilmProvider = ({ children }) => {\n    const [filmState, filmDispatch] = useReducer(filmReducer, filmInitialState)\n\n\n    return (\n        <FilmContext.Provider value={[filmState, filmDispatch]}>\n            {children}\n        </FilmContext.Provider>\n    );\n}\n\nexport default FilmProvider","import React from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport queryString from \"query-string\";\n\nimport FilmPreview from './preview'\nimport { Row, Col } from \"react-bootstrap\";\nimport FilmsRecommendations from './recommendations';\nimport Comments from './comments';\nimport Playlist from './playlist';\nimport useWindowWidth from '../../helpers/hooks/useWindowsWidth'\n\nimport FilmProvider from '../../helpers/contexts/film/filmProvider'\nimport './film.css'\n\n\nfunction Film(props) {\n\n    let history = useHistory()\n    let location = useLocation()\n\n    const onSmallScreen = useWindowWidth();\n\n    const handleRedirect = (id) => {\n        const parsed = queryString.parse(location.search);\n        let historyObject = { pathname: `${process.env.REACT_APP_PATH_NAME}film/` + id }\n        if (parsed.list) historyObject = { ...historyObject, search: `?list=${parsed.list}` }\n        history.push(historyObject);\n    };\n\n    return (\n        <FilmProvider>\n            <Row className=\"p-0 m-0 mt-4 mx-2\">\n                <Col xs={{ span: 12, order: 'first' }} sm={8}>\n                    <FilmPreview {...props} />\n                    {!onSmallScreen && <Comments {...props} />}\n                </Col>\n                <Col xs={{ span: 12, order: 2 }} sm={4}>\n                    <Playlist handleRedirect={handleRedirect} {...props} />\n                    <FilmsRecommendations handleRedirect={handleRedirect} {...props} />\n                </Col>\n                {onSmallScreen &&\n                    <Col xs={{ span: 12, order: 'last' }} sm={8}>\n                        <Comments {...props} />\n                    </Col>\n                }\n            </Row>\n\n        </FilmProvider>\n    )\n}\n\nexport default Film"],"sourceRoot":""}