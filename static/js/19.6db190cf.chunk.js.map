{"version":3,"sources":["components/helpers/film/skeleton.js","components/helpers/playlist/index.js","images/image_not_found.png","components/pages/profile/reducer.js","components/pages/profile/index.js"],"names":["FilmSkeleton","className","style","lineHeight","Playlist","playlist","handleRedirect","handleRemove","isProfile","dispatchPrivacyUpdate","colWidth","useState","setStyle","useEffect","film_id","onClick","id","image","img","width","margin","display","justifyContent","alignItems","icon","line","text","title","isPublic","is_public","author_name","initialProfileState","data","isLoading","isAllFetched","isRemoving","toRemove","error","filmsCount","playlistsCount","profileReducer","state","action","type","fieldName","payload","isInitialLoaded","pageMaxFetchCount","Set","filter","resource","map","isPlaylist","Profile","useContext","UserContext","user","clearUser","RemoveModalContext","showModal","clear","removeModalData","history","useHistory","useReducer","dispatch","handleProfileOnBottom","useCallback","useBottomScrollListener","triggerOnNoScroll","auth","replace","process","push","a","Promise","allSettled","userApi","skipFilms","skipPlaylists","limit","pageInitialMaxFetchCount","response","films","playlists","status","value","film","image_not_found","length","fetchInitialData","fetchData","playlistApi","filmApi","console","remove","e","stopPropagation","record","index","pathname","search","handleRedirectPlaylist","jsxLoop","i"],"mappings":"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","file":"static/js/19.6db190cf.chunk.js","sourcesContent":["import Skeleton from 'react-loading-skeleton';\n\nimport '../../pages/film/film.css'\n\nconst FilmSkeleton = () => {\n\n    const normalClass = \"col mb-5 col-12 col-sm-6 col-md-3 col-lg-2\"\n\n    return (\n        <div className={normalClass}>\n            <div className=\"col-12 col-sm-12\">\n                <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                    <div className=\"ratio ratio-16x9\">\n                        <Skeleton className=\"w-100 h-100\" style={{ lineHeight: '1.5' }} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-12 col-sm-12 mt-2\">\n                <div className=\"col p-0\">\n                    <Skeleton className=\"col w-100\" />\n                </div>\n\n                <div className=\"col p-0\">\n                    <Skeleton className=\"w-100\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FilmSkeleton","import React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TextTruncate from \"react-text-truncate\";\nimport BlurredImageComponent from \"../blurredImage\";\nimport RemoveButton from '../../helpers/removeButton';\nimport ChangePrivacyButton from '../changePrivacyButton';\n\nconst Playlist = ({ playlist, handleRedirect, handleRemove, isProfile, dispatchPrivacyUpdate }) => {\n\n    const colWidth = isProfile ? 8 : 10\n\n    const [style, setStyle] = useState(\"mb-5 play-outer-container remove-container\")\n\n    useEffect(() => {\n        if (!playlist.film_id) setStyle(\"mb-5 play-cursor-default remove-container\")\n    }, [playlist.film_id])\n\n\n    return (\n        <div className=\"col-12 col-sm-6 col-md-3 col-lg-2\"\n            key={playlist.id}>\n            <div className={`col ${style}`} onClick={() => handleRedirect(playlist.id, playlist.film_id)}>\n                <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                    <BlurredImageComponent\n                        image={playlist.img} />\n\n                    <div style={{ width: '100%', margin: 0 }} className=\"row play-middle\">\n                        <div className=\"col-5 col-sm-5\" style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                            <FontAwesomeIcon icon=\"play\" />\n                        </div>\n                        <div className=\"col-7 col-sm-7\" style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }}>\n                            <small className=\"fw-bold\" >Play all</small>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row m-0 mt-1\">\n                    <div className={`p-0 col-${colWidth} col-sm-${colWidth}`}>\n                        <TextTruncate line={1} text={playlist.title}\n                            className=\"mb-1 mt-1 title \" />\n                    </div>\n\n\n                    {\n                        isProfile && <div className=\"col-4 col-sm-4 p-0 d-flex justify-content-end\">\n                            <ChangePrivacyButton\n                                id={playlist.id}\n                                isPublic={playlist.is_public}\n                                isProfile={true}\n                                dispatchPrivacyUpdate={dispatchPrivacyUpdate} />\n                            <RemoveButton handleRemove={handleRemove} />\n                        </div>\n                    }\n                </div>\n                <p className=\"mb-0 author-nick\">\n                    <span>{playlist.author_name}</span>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Playlist","export default __webpack_public_path__ + \"static/media/image_not_found.c4ba1e76.png\";","import { pageMaxFetchCount } from \"../../../config\"\n\nexport const initialProfileState = {\n    data: null,\n    isLoading: false,\n    isAllFetched: false,\n    isRemoving: false,\n    toRemove: null,\n    error: null,\n    filmsCount: 0,\n    playlistsCount: 0,\n}\n\nexport function profileReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                isLoading: false,\n                isInitialLoaded: true,\n                isAllFetched: action.filmsCount < pageMaxFetchCount && action.playlistsCount < pageMaxFetchCount,\n                filmsCount: state.filmsCount + action.filmsCount,\n                playlistsCount: state.playlistsCount + action.playlistsCount,\n                data: [...new Set(action.data)]\n            }\n        }\n        case 'load': {\n            return !state.isLoading && !state.isAllFetched && state.isInitialLoaded && !state.error ?\n                { ...state, isLoading: true, isAllFetched: false } :\n                state\n        }\n        case 'success': {\n            return {\n                ...state,\n                isLoading: false,\n                isAllFetched: action.filmsCount < pageMaxFetchCount && action.playlistsCount < pageMaxFetchCount,\n                filmsCount: state.filmsCount + action.filmsCount,\n                playlistsCount: state.playlistsCount + action.playlistsCount,\n                data: [...new Set([...state.data, ...action.data])]\n            }\n        }\n        case 'remove': {\n            return {\n                ...state,\n                toRemove: action.payload,\n                isRemoving: true\n            }\n        }\n        case 'remove-success': {\n            return {\n                ...state,\n                isRemoving: false,\n                toRemove: null,\n                data: state.toRemove ? state.data.filter(resource => resource.id !== state.toRemove.id) : state.data\n            }\n        }\n        case 'change-playlist-privacy-success': {\n            return {\n                ...state,\n                data: state.data.map(data => {\n                    if (data.isPlaylist && data.id === action.payload.id) return { ...data, is_public: action.payload.is_public }\n                    return data\n                })\n            }\n        }\n        case 'clear': {\n            return initialProfileState\n        }\n        default: return state\n    }\n}","import React, { useEffect, useReducer, useCallback, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { initialProfileState, profileReducer } from './reducer';\n\nimport Film from '../../helpers/film';\nimport Playlist from '../../helpers/playlist';\n\nimport * as userApi from '../../../services/userService'\nimport * as playlistApi from '../../../services/playlistService'\nimport * as filmApi from '../../../services/filmService'\n\nimport { pageInitialMaxFetchCount, pageMaxFetchCount } from '../../../config';\n\nimport UserContext from '../../../helpers/contexts/user/userContext';\nimport RemoveModalContext from '../../../helpers/contexts/removeModal/removeModalContext';\nimport useBottomScrollListener from '../../../helpers/hooks/useBottomScrollListener';\n\nimport image_not_found from '../../../images/image_not_found.png'; // Tell Webpack this JS file uses this image\nimport { jsxLoop } from '../../../helpers';\nimport Skeleton from '../../helpers/film/skeleton'\n\nconst Profile = () => {\n\n    const { user, clearUser } = useContext(UserContext)\n\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\n\n    let history = useHistory()\n\n    const [state, dispatch] = useReducer(profileReducer, initialProfileState)\n    const { data, isLoading, isAllFetched, isInitialLoaded, error, isRemoving, toRemove, filmsCount, playlistsCount } = state\n\n    const handleProfileOnBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded && !error) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded, error])\n\n    useBottomScrollListener(handleProfileOnBottom, { triggerOnNoScroll: true })\n\n    useEffect(() => {\n        if (!user.auth && user.isInitialLoaded) {\n            history.replace(`${process.env.REACT_APP_PATH_NAME}`)\n            history.push(`${process.env.REACT_APP_PATH_NAME}login`)\n            clearUser()\n        }\n    }, [user, history, clearUser])\n\n    useEffect(() => {\n        async function fetchInitialData() {\n\n            const [response] = await Promise.allSettled([\n                userApi.me({ skipFilms: 0, skipPlaylists: 0, limit: pageInitialMaxFetchCount })\n            ])\n\n            let data = []\n\n            let films = []\n            let playlists = []\n\n            if (response.status === \"fulfilled\") {\n                films = response.value.data.films.map(film => {\n                    return {\n                        ...film,\n                        img: `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`,\n\n                    }\n                })\n\n                playlists = response.value.data.playlists.map(playlist => {\n                    const image = playlist.film_id ?\n                        `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail` :\n                        image_not_found\n                    return {\n                        ...playlist,\n                        img: image,\n                        isPlaylist: true\n\n                    }\n                })\n\n                data = [...data, ...films, ...playlists]\n            }\n\n            dispatch({\n                type: 'initial-success',\n                data: data,\n                filmsCount: films.length,\n                playlistsCount: playlists.length,\n            })\n        }\n\n        dispatch({ type: 'clear' })\n        fetchInitialData()\n\n    }, [])\n\n    useEffect(() => {\n        async function fetchData() {\n            const [response] = await Promise.allSettled([\n                userApi.me({ skipFilms: filmsCount, skipPlaylists: playlistsCount, limit: pageMaxFetchCount })\n            ])\n\n            let data = []\n\n            let films = []\n            let playlists = []\n\n            if (response.status === \"fulfilled\") {\n                films = response.value.data.films.map(film => {\n                    return {\n                        ...film,\n                        img: `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`,\n\n                    }\n                })\n\n                playlists = response.value.data.playlists.map(playlist => {\n                    const image = playlist.film_id ?\n                        `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail` :\n                        image_not_found\n                    return {\n                        ...playlist,\n                        img: image,\n                        isPlaylist: true\n\n                    }\n                })\n\n                data = [...data, ...films, ...playlists]\n            }\n\n            dispatch({\n                type: 'success',\n                data: data,\n                filmsCount: films.length,\n                playlistsCount: playlists.length,\n            })\n        }\n\n        if (isLoading && isInitialLoaded) fetchData()\n    }, [filmsCount, isLoading, playlistsCount, isInitialLoaded])\n\n    useEffect(() => {\n        async function remove() {\n\n            try {\n                if (toRemove.isPlaylist) {\n                    const resPlaylist = await playlistApi.remove(toRemove.id)\n                    if (resPlaylist.status === 204) {\n                        dispatch({\n                            type: 'remove-success'\n                        })\n                        clear()\n                    }\n                } else {\n                    const resFilm = await filmApi.remove(toRemove.id)\n                    if (resFilm.status === 204) {\n                        dispatch({\n                            type: 'remove-success'\n                        })\n                        clear()\n                    }\n                }\n            } catch (err) {\n                console.error(err)\n            }\n        }\n        if (isRemoving && removeModalData.isRemoving && toRemove &&\n            removeModalData.id === toRemove.id && removeModalData.title === toRemove.title &&\n            removeModalData.type === (toRemove.isPlaylist ? 'playlist' : 'film')) remove()\n    }, [isRemoving, removeModalData, toRemove, clear])\n\n    const handleRemove = (e, resource) => {\n        e.stopPropagation()\n        if (removeModalData.isRemoving) return\n        dispatch({\n            type: 'remove',\n            payload: resource\n        })\n        showModal(resource.id, resource.isPlaylist ? 'playlist' : 'film', resource.title)\n    };\n\n    const handleRedirectFilm = (id) => {\n        history.push({ pathname: `${process.env.REACT_APP_PATH_NAME}film/` + id });\n    }\n\n    const handleRedirectPlaylist = (record) => {\n        if (!record.film_id) return\n        history.push({\n            pathname: `${process.env.REACT_APP_PATH_NAME}film/` + record.film_id,\n            search: `?list=${record.id}`\n        });\n    }\n\n    return (\n        <div className=\"row mt-5 mx-2\">\n            {\n                data ? data.map((record, index) => {\n                    if (record.isPlaylist) {\n                        return <Playlist key={record.id}\n                            playlist={record} index={index}\n                            isProfile={true}\n                            dispatchPrivacyUpdate={dispatch}\n                            handleRedirect={() => handleRedirectPlaylist(record)}\n                            handleRemove={(e) => handleRemove(e, record)} />\n                    } else {\n                        return <Film key={record.id} isProfile={true}\n                            film={record} index={index}\n                            handleRedirect={() => handleRedirectFilm(record.id)}\n                            handleRemove={(e) => handleRemove(e, record)} />\n                    }\n                })  : [...jsxLoop(20, i =>\n                        <Skeleton key={i} />\n                    )]\n            }\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {\n                        (isLoading) &&\n                        <div className=\"spinner-border\" />\n                    }\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default Profile\n"],"sourceRoot":""}