{"version":3,"sources":["components/settings/reducer.js","components/settings/index.js"],"names":["userInitialState","name","email","settingsInitialState","password","initialUser","isInitialLoaded","isSubmitted","isSending","error","success","settingsReducer","state","action","type","fieldName","payload","Settings","props","useContext","UserContext","user","clearUser","updateUser","history","useHistory","location","useLocation","useReducer","dispatch","useState","show","setShow","useEffect","auth","replace","process","push","a","userApi","then","res","data","catch","err","console","getUser","toUpdate","setTimeout","pathname","slice","search","accessToken","response","updateUserData","Modal","onHide","goBack","size","centered","Header","closeButton","Title","Body","Form","onSubmit","e","preventDefault","Group","Label","htmlFor","Control","value","placeholder","onChange","target","className","Button","disabled","Spinner","animation","Alert","variant"],"mappings":"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","file":"static/js/13.7c718847.chunk.js","sourcesContent":["const userInitialState = {\n    name: '',\n    email: ''\n}\n\nexport const settingsInitialState = {\n    ...userInitialState,\n    password: '',\n    initialUser: userInitialState,\n    isInitialLoaded: false,\n    isSubmitted: false,\n    isSending: false,\n    error: '',\n    success: ''\n}\n\nexport const settingsReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                error: '',\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                initialUser: {\n                    email: action.email,\n                    name: action.name\n                },\n                isInitialLoaded: true\n            }\n        }\n        case 'submit': {\n            return {\n                ...state,\n                isSubmitted: true,\n                error: null,\n            }\n        }\n        case 'send': {\n            return {\n                ...state,\n                isSending: true\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                isSubmitted: false,\n                isSending: false,\n                success: 'Changes saved successfully!',\n                error: null\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isSending: false,\n                isSubmitted: false,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}","import { Modal, Form, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { useEffect, useState, useReducer, useContext } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport UserContext from \"../../helpers/contexts/user/userContext\";\nimport { settingsInitialState, settingsReducer } from \"./reducer\";\nimport * as userApi from '../../services/userService'\n\nconst Settings = (props) => {\n\n    const { user, clearUser, updateUser } = useContext(UserContext)\n\n    let history = useHistory()\n    let location = useLocation()\n\n    const [state, dispatch] = useReducer(settingsReducer, settingsInitialState)\n    // eslint-disable-next-line no-unused-vars\n    const { email, name, password, initialUser, isSubmitted, isSending, isInitialLoaded, success, error } = state\n\n    const [show, setShow] = useState(true)\n\n    useEffect(() => {\n        if (!user.auth && user.isInitialLoaded) {\n            setShow(false)\n            history.replace(`${process.env.REACT_APP_PATH_NAME}`)\n            history.push(`${process.env.REACT_APP_PATH_NAME}login`)\n            clearUser()\n        }\n    }, [user, history, clearUser])\n\n    useEffect(() => {\n        async function getUser() {\n            await userApi.me()\n                .then(res => {\n                    dispatch({\n                        type: 'initial-success',\n                        name: res.data.name,\n                        email: res.data.email\n                    })\n                })\n                .catch(err => {\n                    console.error(err)\n                    dispatch({\n                        type: 'error',\n                        payload: true\n                    })\n                })\n        }\n        getUser()\n    }, [])\n\n    useEffect(() => {\n        async function updateUserData() {\n            let toUpdate = {}\n            if (password) toUpdate = { password: password }\n            if (email && email !== '' && email !== initialUser.email) toUpdate = { ...toUpdate, email: email }\n            if (name && name !== '' && name !== initialUser.name) toUpdate = { ...toUpdate, name: name }\n\n            await userApi.partialUpdate(toUpdate)\n                .then(res => {\n                    dispatch({\n                        type: 'success'\n                    })\n\n                    setTimeout(() => {\n                        let pathname = location.pathname.slice(0, -9)\n                        if (pathname === '') pathname = process.env.REACT_APP_PATH_NAME\n                        history.replace({\n                            pathname: pathname,\n                            search: location.search,\n                            state: location.state\n                        })\n                        updateUser(res.data.accessToken)\n                    }, 500)\n                })\n                .catch(err => {\n                    console.error(err)\n                    dispatch({\n                        type: 'error',\n                        payload: err.response && err.response.data && err.response.data.error ? err.response.data.error : 'Something went wrong!'\n                    })\n                })\n        }\n        if (isSending) updateUserData()\n    }, [email, initialUser.email, initialUser.name, isSending, name, password, history, location, updateUser])\n\n    const modalClose = () => {\n        setShow(false)\n        history.goBack();\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        dispatch({\n            type: 'submit'\n        })\n\n        if (password ||\n            (email && email !== '' && email !== initialUser.email) ||\n            (name && name !== '' && name !== initialUser.name)) {\n            dispatch({\n                type: 'send'\n            })\n        }\n    }\n\n    return (\n        <Modal onHide={modalClose}\n            show={show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    Settings\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={isSending ? null : handleSubmit}>\n                    <Form.Group>\n                        <Form.Label htmlFor=\"name\">Name</Form.Label>\n                        <Form.Control type=\"text\" name=\"email\"\n                            value={name} placeholder={initialUser.name}\n                            onChange={e => dispatch({ type: 'field', fieldName: 'name', payload: e.target.value })}>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mt-2\">\n                        <Form.Label htmlFor=\"email\">Email</Form.Label>\n                        <Form.Control type=\"email\" name=\"email\"\n                            value={email} placeholder={initialUser.email}\n                            onChange={e => dispatch({ type: 'field', fieldName: 'email', payload: e.target.value })}>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mt-2\">\n                        <Form.Label htmlFor=\"password\">Password</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\"\n                            value={password} onChange={e => dispatch({ type: 'field', fieldName: 'password', payload: e.target.value })}>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"d-flex align-items-center mt-2\">\n                        <Button disabled={isSending || !isInitialLoaded} type=\"submit\" className=\"btn-primary\">\n                            Change\n                        </Button>\n\n                        {\n                            isSending &&\n                            <Spinner className=\"ms-2\" animation=\"grow\" />\n                        }\n                    </Form.Group>\n                </Form>\n                {\n                    error &&\n                    <Alert variant=\"danger\" className=\"mt-2 mb-0\">\n                        {error ? error : 'Error while logging in.'}\n                    </Alert>\n                }\n                {\n                    success &&\n                    <Alert variant=\"success\" className=\"mt-2 mb-0\">\n                        {success}\n                    </Alert>\n                }\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default Settings"],"sourceRoot":""}