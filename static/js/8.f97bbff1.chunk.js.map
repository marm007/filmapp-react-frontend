{"version":3,"sources":["components/playlists/reducer.js","components/playlists/index.js","pages/playlists.js","config/index.js","services/playlistService.js","hooks/use-bottom-scroll-listener.js","components/buttons/ripple.js","services/userService.js","hooks/use-intersection-observer.js","components/blurred-image/index.js","components/buttons/remove.js","skeletons/film.js","components/buttons/change-privacy.js","components/buttons/edit.js","components/playlist.js"],"names":["initialState","playlists","playlistsCount","isLoading","isAllLoaded","isInitialLoaded","error","playlistsPageReducer","state","action","type","fieldName","payload","Set","responseCount","pageInitialMaxFetchCount","pageMaxFetchCount","filter","playlist","is_public","PlaylistsPage","user","useContext","UserContext","history","useHistory","useReducer","dispatch","handleOnPlaylistsBottom","useCallback","useBottomScrollListener","triggerOnNoScroll","useEffect","a","me","then","res","catch","err","console","show","limit","playlistPage","result","data","filtered","film_id","forEach","img","process","log","length","auth","fetchInitialPlaylists","skip","fetchPlaylists","setRedirect","playlistID","filmID","push","pathname","search","className","map","index","handleRedirect","id","Array","_","Playlists","document","title","commentsMaxFetchCount","recommendationsMaxFetchCount","playlistButtonMaxFetchCount","searchPageMaxFetchCount","create","body","axios","post","headers","authHeader","get","params","partialUpdate","patch","remove","delete","createCallback","debounce","handleOnScroll","options","lodashDebounce","onBottom","useMemo","offset","debounceOptions","leading","debouncedOnBottom","containerRef","useRef","current","scrollNode","scrollContainerBottomPosition","Math","round","scrollTop","clientHeight","scrollHeight","getElementById","scrollingElement","documentElement","window","innerHeight","ref","node","addEventListener","removeEventListener","RippleButton","onClick","children","props","useRipple","background","addRipple","ripples","e","onMouseDown","require","useIntersectionObserver","target","onIntersect","threshold","rootMargin","React","observer","IntersectionObserver","observe","unobserve","BlurredImage","src","srcWebp","thumb","thumbWebp","isCached","useState","isLoaded","setIsLoaded","srcSet","alt","style","visibility","onLoad","opacity","BlurredImageComponent","image","isVisible","setIsVisible","setIsCached","observerElement","isIntersecting","tmp","Image","concat","complete","RemoveButton","handleRemove","icon","FilmSkeleton","isRecommendations","ChangePrivacyButton","isPublic","isPlaylist","dispatchPrivacyUpdate","filmDispatch","isChanging","setIsChanging","playlistApi","undefined","changePrivacy","preventDefault","stopPropagation","EditButton","description","Playlist","isProfile","setStyle","line","text","author_name"],"mappings":"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","file":"static/js/8.f97bbff1.chunk.js","sourcesContent":["import { pageInitialMaxFetchCount, pageMaxFetchCount } from '../../config'\n\n\nexport const initialState = {\n    playlists: null,\n    playlistsCount: 0,\n    isLoading: false,\n    isAllLoaded: false,\n    isInitialLoaded: false,\n    error: null,\n}\n\nexport const playlistsPageReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                playlists: [...new Set([...action.playlists])],\n                isLoading: false,\n                isInitialLoaded: true,\n                isAllLoaded: action.responseCount < pageInitialMaxFetchCount,\n                playlistsCount: state.playlistsCount + action.responseCount,\n            }\n        }\n        case 'load': {\n            return {\n                ...state,\n                isLoading: true,\n                isAllLoaded: false,\n                error: null\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                playlists: [...new Set([...state.playlists, ...action.playlists])],\n                isLoading: false,\n                isAllLoaded: action.responseCount < pageMaxFetchCount,\n                playlistsCount: state.playlistsCount + action.responseCount,\n                error: null\n            }\n        }\n        case 'user-logout': {\n            return state.playlists ? {\n                ...state,\n                playlists: state.playlists.filter(playlist => playlist.is_public)\n            } : state\n        }\n        case 'clear': {\n            return initialState\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                isAllLoaded: false,\n                error: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n","import React, { useEffect, useReducer, useCallback, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { playlistsPageReducer, initialState } from './reducer'\n\nimport Skeleton from '../../skeletons/film';\nimport Playlist from '../playlist';\n\nimport { show } from '../../services/playlistService'\nimport { me } from '../../services/userService'\n\nimport { pageInitialMaxFetchCount, pageMaxFetchCount } from '../../config';\n\nimport useBottomScrollListener from '../../hooks/use-bottom-scroll-listener';\nimport UserContext from '../../contexts/user/userContext';\n\nconst pathName = process.env.REACT_APP_PATH_NAME;\n\nfunction PlaylistsPage() {\n\n    const { user } = useContext(UserContext);\n\n    let history = useHistory()\n\n    const [state, dispatch] = useReducer(playlistsPageReducer, initialState)\n    const { playlists, isLoading, isAllLoaded, isInitialLoaded, playlistsCount } = state\n\n    const handleOnPlaylistsBottom = useCallback(() => {\n        if (!isLoading && !isAllLoaded && isInitialLoaded) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isAllLoaded, isLoading, isInitialLoaded])\n\n    useBottomScrollListener(handleOnPlaylistsBottom, { triggerOnNoScroll: true })\n\n    useEffect(() => {\n        async function fetchInitialPlaylists() {\n            await me().then(res => { }).catch(err => console.error(err))\n            await show({ limit: pageInitialMaxFetchCount, playlistPage: true })\n                .then(res => {\n                    const result = res.data;\n\n                    let filtered = result.filter(playlist => playlist.film_id)\n\n                    filtered.forEach(playlist => {\n                        playlist.img = `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail`\n                    });\n                    console.log(res.data)\n                    dispatch({\n                        type: 'initial-success',\n                        playlists: filtered,\n                        responseCount: result.length\n                    })\n\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n        console.log('auth', user.auth)\n        dispatch({ type: 'clear' })\n        fetchInitialPlaylists()\n\n    }, [user.auth])\n\n    useEffect(() => {\n        async function fetchPlaylists() {\n\n            await show({ skip: playlistsCount, limit: pageMaxFetchCount, playlistPage: true })\n                .then(res => {\n                    const result = res.data;\n\n                    let filtered = result.filter(playlist => playlist.film_id)\n\n                    filtered.forEach(playlist => {\n                        playlist.img = `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail`\n                    });\n\n                    dispatch({\n                        type: 'success',\n                        playlists: filtered,\n                        responseCount: result.length\n                    })\n\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (isLoading && isInitialLoaded) fetchPlaylists()\n\n    }, [isLoading, isInitialLoaded, playlists, playlistsCount])\n\n\n    const setRedirect = (playlistID, filmID) => {\n        history.push({\n            pathname: `${pathName}film/` + filmID,\n            search: `?list=${playlistID}`\n        });\n    };\n\n\n    return (\n        <div className=\"row mt-5 mx-2\">\n            {\n                playlists ? playlists.map((playlist, index) => <Playlist key={playlist.id} playlist={playlist} index={index} handleRedirect={setRedirect} />)\n                    : ([...Array(24)].map((_, index) => (\n                        <Skeleton key={index} />\n                    )))\n            }\n            {\n                !isAllLoaded && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {\n                        isLoading &&\n                        <div className=\"spinner spinner-border\" />\n                    }\n                </div>\n            }\n\n        </div>\n\n    )\n}\n\nexport default PlaylistsPage\n","import { useEffect } from 'react'\nimport PlaylistsComponent from '../components/playlists'\n\nexport default function Playlists() {\n\n    useEffect(() => {\n        document.title = \"Playlists\"\n    }, [])\n\n    return <PlaylistsComponent />\n}","export const commentsMaxFetchCount = 10\nexport const recommendationsMaxFetchCount = 12\n\nexport const playlistButtonMaxFetchCount = 10\n\nexport const pageInitialMaxFetchCount = 40\nexport const pageMaxFetchCount = 20\n\nexport const searchPageMaxFetchCount = 10\n","import axios from '../helpers/axios'\nimport authHeader from '../helpers/auth-header'\n\n\nexport const create = (body) => axios.post('playlists', body, { headers: authHeader() })\nexport const index = (id) => axios.get(`playlists/${id}`, { headers: authHeader() })\nexport const show = (params) => axios.get(`playlists`, { params, headers: authHeader() })\nexport const partialUpdate = (id, body) => axios.patch(`playlists/${id}`, body, { headers: authHeader() })\n\n\nexport const remove = (id) => axios.delete(`playlists/${id}`, { headers: authHeader() })\n\n","import { useCallback, useEffect, useRef, useMemo } from 'react';\nimport lodashDebounce from 'lodash.debounce';\n\nconst createCallback = (debounce, handleOnScroll, options) => {\n  if (debounce) {\n    return lodashDebounce(handleOnScroll, debounce, options);\n  } else {\n    return handleOnScroll;\n  }\n};\n\nfunction useBottomScrollListener(\n  onBottom = () => { },\n  options = {},\n) {\n  const { offset, triggerOnNoScroll, debounce, debounceOptions, id } = useMemo(\n    () => ({\n      offset: options?.offset ?? 20,\n      debounce: options?.debounce ?? 200,\n      debounceOptions: options?.debounceOptions ?? { leading: true },\n      triggerOnNoScroll: options?.triggerOnNoScroll ?? false,\n      id: options?.id ?? null\n    }),\n    [options?.offset, options?.debounce, options?.debounceOptions, options?.triggerOnNoScroll, options?.id],\n  );\n\n  const debouncedOnBottom = useMemo(() => createCallback(debounce, onBottom, debounceOptions), [onBottom, debounce, debounceOptions]);\n  const containerRef = useRef(null);\n  const handleOnScroll = useCallback(() => {\n\n    if (containerRef.current != null) {\n      const scrollNode = containerRef.current;\n      const scrollContainerBottomPosition = Math.round(scrollNode.scrollTop + scrollNode.clientHeight);\n      const scrollPosition = Math.round(scrollNode.scrollHeight - offset);\n\n      if (scrollPosition <= scrollContainerBottomPosition) {\n        debouncedOnBottom();\n      }\n    } else if (id !== null) {\n      const scrollNode = document.getElementById(id);\n      if (scrollNode) {\n        const scrollContainerBottomPosition = Math.round(scrollNode.scrollTop + scrollNode.clientHeight);\n        const scrollPosition = Math.round(scrollNode.scrollHeight - offset);\n        if (scrollPosition <= scrollContainerBottomPosition) {\n          debouncedOnBottom();\n        }\n      }\n    } else {\n      const scrollNode = document.scrollingElement || document.documentElement;\n      const scrollContainerBottomPosition = Math.round(scrollNode.scrollTop + window.innerHeight);\n      const scrollPosition = Math.round(scrollNode.scrollHeight - offset);\n\n      if (scrollPosition <= scrollContainerBottomPosition) {\n        debouncedOnBottom();\n      }\n    }\n  }, [debouncedOnBottom, offset, id]);\n\n  useEffect(() => {\n    const ref = containerRef.current;\n    const node = document.getElementById(id)\n\n    if (ref != null) {\n      ref.addEventListener('scroll', handleOnScroll);\n    } else if (node !== null) {\n      node.addEventListener('scroll', handleOnScroll);\n    } else {\n      window.addEventListener('scroll', handleOnScroll);\n    }\n\n    if (triggerOnNoScroll) {\n      handleOnScroll();\n    }\n\n    return () => {\n      if (ref != null) {\n        ref.removeEventListener('scroll', handleOnScroll);\n      } else if (node !== null) {\n        node.addEventListener('scroll', handleOnScroll);\n      } else {\n        window.removeEventListener('scroll', handleOnScroll);\n      }\n    };\n  }, [handleOnScroll, triggerOnNoScroll, id]);\n\n  return containerRef;\n}\n\nexport default useBottomScrollListener;\n","import useRipple from 'useripple'\n\nconst RippleButton = ({ onClick = () => {}, children, className, id, ...props }) => {\n\n    const [addRipple, ripples] = useRipple({ background: 'black' })\n\n    return (\n        <button id={id ? id : ''} onClick={(e) => {\n            onClick(e)\n        }}\n            onMouseDown={addRipple}\n            className={`btn btn-link button-ripple text-dark ${className}`} {...props}>\n            {children}\n            {ripples}\n        </button>\n    )\n}\n\nexport default RippleButton","import axios from '../helpers/axios'\nimport authHeader from '../helpers/auth-header'\n\n\nexport const me = (params) => axios.get('users/me', { params, headers: authHeader() })\nexport const partialUpdate = (body) => axios.patch('users', body, { headers: authHeader() })\n\nexport const userService = {\n    login,\n    logout,\n    register\n};\n\nfunction login(username, password) {\n\n    let loginHeaderMy = null\n\n    const requestOptions = {\n        method: 'POST',\n        headers: loginHeaderMy\n\n    };\n\n    return fetch(`${process.env.REACT_APP_API_URL}/users/auth`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        })\n}\n\nfunction logout() {\n    localStorage.removeItem('user');\n}\n\nfunction register(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n    return fetch(`${process.env.REACT_APP_API_URL}/users/`, requestOptions)\n        .then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                logout();\n            }\n            const error = (data && data.errors) || response.statusText;\n            return Promise.reject(error);\n        }\n        return data;\n    })\n}\n\n","import React from \"react\";\nrequire('intersection-observer');\n\nconst useIntersectionObserver = ({\n  target,\n  onIntersect,\n  threshold = 0.1,\n  rootMargin = \"0px\"\n}) => {\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, {\n      rootMargin,\n      threshold\n    });\n    const current = target.current;\n    observer.observe(current);\n    return () => {\n      observer.unobserve(current);\n    };\n  });\n};\nexport default useIntersectionObserver;","import React, { useState, useRef } from 'react';\nimport useIntersectionObserver from '../../hooks/use-intersection-observer';\nimport \"./style.css\";\n\nconst BlurredImage = ({ src, srcWebp, thumb, thumbWebp, isCached }) => {\n    const [isLoaded, setIsLoaded] = useState(isCached);\n\n    return (\n        <div>\n\n            <picture >\n                <source type=\"image/webp\" srcSet={thumbWebp} />\n                <source type=\"image/jpeg\" srcSet={thumb} />\n                <img className=\"image thumb\" alt=\"\"\n                    style={{ visibility: isLoaded ? \"hidden\" : \"visible\" }}\n                    src={thumb}\n                    onLoad={() => {\n                        setIsLoaded(true);\n                    }} />\n            </picture>\n\n            <picture >\n                <source type=\"image/webp\" srcSet={srcWebp} />\n                <source type=\"image/jpeg\" srcSet={src} />\n                <img className=\"image full\" alt=\"\"\n                    style={{ opacity: isLoaded ? 1 : 0 }}\n                    src={src}\n                    onLoad={() => {\n                        setIsLoaded(true);\n                    }} />\n            </picture>\n        </div>\n    );\n}\n\nfunction BlurredImageComponent({ image }) {\n    const ref = useRef();\n    const [isVisible, setIsVisible] = useState(false);\n    const [isCached, setIsCached] = useState(false);\n\n    useIntersectionObserver({\n        target: ref,\n        onIntersect: ([{ isIntersecting }], observerElement) => {\n            if (isIntersecting) {\n                let tmp = new Image();\n                tmp.src = image.concat('?width=poster_webp');\n                setIsCached(tmp.complete)\n                setIsVisible(true);\n                if (ref.current)\n                    observerElement.unobserve(ref.current);\n            }\n        }\n    });\n\n    return (\n        <div\n            ref={ref}\n            className=\"image-container embed-responsive embed-responsive-16by9  play-image\"\n        >\n            {isVisible && (\n                <BlurredImage isCached={isCached}\n                    src={image.concat('?width=poster')}\n                    srcWebp={image.concat('?width=poster_webp')}\n                    thumb={image.concat('?width=preview')}\n                    thumbWebp={image.concat('?width=preview_webp')} />\n            )}\n        </div>\n    );\n}\n\nexport default BlurredImageComponent;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport RippleButton from './ripple'\n\nconst RemoveButton = ({ handleRemove }) => {\n    return (\n        <RippleButton\n            className=\"button-ripple-24 remove-holder p-0\"\n            onClick={handleRemove}>\n            <FontAwesomeIcon icon=\"trash-alt\" />\n        </RippleButton>\n    )\n}\n\nexport default RemoveButton","import Skeleton from 'react-loading-skeleton';\n\nconst FilmSkeleton = ({ isRecommendations }) => {\n\n    return (\n        <div className={`${isRecommendations ? 'col-sm-12' : 'col-sm-6'} mb-4 col col-12 col-md-3 col-lg-2 container-px`}>\n            <div className=\"col-12 col-sm-12 p-0\">\n                <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                    <div className=\"embed-responsive-item\">\n                        <Skeleton className=\"w-100 h-100 line-height-unset\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-12 col-sm-12 mt-2 p-0\">\n                <div className=\"col p-0\">\n                    <Skeleton className=\"w-100 h-100 line-height-unset\" />\n                </div>\n\n                <div className=\"col p-0\">\n                    <Skeleton className={`${isRecommendations ? 'line-height-unset' : ''} col w-100`} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FilmSkeleton","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useState } from \"react\"\nimport * as playlistApi from '../../services/playlistService'\nimport RippleButton from \"./ripple\"\n\nconst ChangePrivacyButton = ({ isPublic, id, isPlaylist, dispatchPrivacyUpdate, filmDispatch }) => {\n\n    const [isChanging, setIsChanging] = useState(false)\n\n\n    useEffect(() => {\n        async function changePrivacy() {\n            await playlistApi.partialUpdate(id, { is_public: !isPublic })\n                .then(res => {\n                    setIsChanging(false)\n\n                    dispatchPrivacyUpdate({\n                        type: 'change-playlist-privacy-success',\n                        payload: res.data\n                    })\n\n                    if (filmDispatch !== undefined) {\n                        filmDispatch({\n                            type: 'field',\n                            fieldName: 'reloadPlaylist',\n                            payload: true\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.error(err)\n                    setIsChanging(false)\n                })\n        }\n        if (isChanging) changePrivacy()\n    }, [dispatchPrivacyUpdate, isChanging, isPublic, id, filmDispatch])\n\n    const handleChangePrivacy = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        if (!isChanging) setIsChanging(true)\n    }\n\n\n    return <RippleButton\n        className={`button-ripple-24 p-0 ${isPlaylist ? '' : 'remove-holder'}`}\n        onClick={handleChangePrivacy}>\n        <FontAwesomeIcon icon={isPublic ? \"globe-europe\" : \"lock\"} />\n    </RippleButton>\n}\n\nexport default ChangePrivacyButton","import React from 'react'\nimport { useHistory } from \"react-router-dom\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport RippleButton from \"./ripple\"\n\nconst EditButton = ({ isPlaylist, id, title, description }) => {\n    let history = useHistory()\n\n    const handleEditClick = (e) => {\n        e.stopPropagation()\n        if (isPlaylist) {\n            history.push({ pathname: `profile/update-playlist/${id}`, state: { title } })\n        } else {\n            history.push({ pathname: `profile/update-film/${id}`, state: { title, description } })\n        }\n    }\n\n    return (\n        <RippleButton className=\"button-ripple-24 remove-holder p-0\"\n            onClick={handleEditClick}>\n            <FontAwesomeIcon icon=\"edit\" />\n        </RippleButton>\n    )\n}\n\nexport default EditButton","import React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TextTruncate from \"react-text-truncate\";\nimport BlurredImageComponent from \"./blurred-image\";\nimport RemoveButton from './buttons/remove';\nimport ChangePrivacyButton from './buttons/change-privacy';\nimport EditButton from './buttons/edit';\n\nconst Playlist = ({ playlist, handleRedirect, handleRemove, isProfile, dispatchPrivacyUpdate }) => {\n\n    const [style, setStyle] = useState(\"mb-4 play-outer-container remove-container\")\n\n    useEffect(() => {\n        if (!playlist.film_id) setStyle(\"mb-4 play-cursor-default remove-container\")\n    }, [playlist.film_id])\n\n\n    return (\n        <div className=\"col-12 col-sm-6 col-md-3 col-lg-2 container-px\"\n            key={playlist.id}>\n            <div className={`col ${style} p-0`} onClick={() => handleRedirect(playlist.id, playlist.film_id)}>\n                <div className=\"play-container p-0\">\n                    <BlurredImageComponent\n                        image={playlist.img} />\n\n                    <div className=\"row play-middle w-100 m-0\">\n                        <div className=\"col-5 col-sm-5 pr-1 d-flex justify-content-end align-items-center\">\n                            <FontAwesomeIcon icon=\"play\" />\n                        </div>\n                        <div className=\"col-7 col-sm-7 pl-1 d-flex justify-content-start align-items-center\">\n                            <small className=\"font-weight-bold\" >Play all</small>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row m-0 mt-1\">\n                    <div className={`p-0 col ${isProfile ? 'button-ripple-div-next-width-3x' : 'col-12'}`}>\n                        <TextTruncate line={1} text={playlist.title}\n                            className=\"mb-1 mt-1 title \" />\n                    </div>\n\n\n                    {\n                        isProfile && <>\n                            <ChangePrivacyButton\n                                id={playlist.id}\n                                isPublic={playlist.is_public}\n                                isProfile={true}\n                                dispatchPrivacyUpdate={dispatchPrivacyUpdate} />\n                            <RemoveButton handleRemove={handleRemove} />\n                            <EditButton isPlaylist={true} id={playlist.id} title={playlist.title} />\n                        </>\n                    }\n                </div>\n                <p className=\"mb-0 author-nick\">\n                    <span>{playlist.author_name}</span>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Playlist"],"sourceRoot":""}