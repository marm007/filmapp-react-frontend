{"version":3,"sources":["components/modals/register.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/helpers/input.js","components/modals/reducer.js"],"names":["Register","history","useHistory","login","useContext","UserContext","useReducer","authReducer","authInitialState","state","dispatch","email","nick","password","isSubmitted","isSuccess","isSending","isError","error","useEffect","a","authApi","name","then","res","type","setTimeout","data","user","id","token","refreshToken","goBack","catch","err","errorMessage","response","errors","payload","console","submitData","title","onClose","onSubmit","e","preventDefault","length","className","htmlFor","isInvalid","value","onChange","fieldName","target","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","Input","placeholder","InputTag","inputRef","useRef","current","classList","add","remove","ref","action"],"mappings":"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","file":"static/js/13.1ecec4c8.chunk.js","sourcesContent":["import React, { useReducer, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Modal from '../helpers/modal';\nimport Input from '../helpers/input';\n\nimport { authInitialState, authReducer } from './reducer';\n\nimport * as authApi from '../../services/authService'\nimport UserContext from '../../helpers/contexts/user/userContext'\n\nconst Register = () => {\n\n    let history = useHistory()\n\n    const { login } = useContext(UserContext)\n    const [state, dispatch] = useReducer(authReducer, authInitialState)\n    const { email, nick, password, isSubmitted, isSuccess, isSending, isError, error } = state\n\n    useEffect(() => {\n        async function submitData() {\n\n            await authApi.register({ email: email, password: password, name: nick })\n                .then(res => {\n                    dispatch({\n                        type: 'success'\n                    })\n                    setTimeout(() => {\n                        login(res.data.user.name, res.data.user.id, res.data.token, res.data.refreshToken)\n                        history.goBack()\n                    }, 1500)\n                })\n                .catch(err => {\n                    let errorMessage = null;\n\n                    if (err.response && err.response.data && err.response.data.errors)\n                        errorMessage = err.response.data.errors;\n                    else if (err.response && err.response.data && err.response.data.error)\n                        errorMessage = err.response.data.error\n\n                    dispatch({\n                        type: 'error',\n                        payload: errorMessage\n                    })\n                    console.error(err)\n                })\n        }\n\n        if (isSending) submitData()\n\n    }, [isSending, email, nick, password, history, login])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n\n        dispatch({\n            type: 'submit'\n        })\n\n        if (email && nick && password && password.length >= 6) {\n            dispatch({\n                type: 'send'\n            })\n        }\n    }\n\n    const modalClose = () => {\n        history.goBack();\n    };\n\n\n    return (\n\n        <Modal id=\"registerModal\" title=\"Register\" onClose={modalClose}>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label className=\"form-label\" htmlFor=\"nick\">Nick</label>\n                    <Input isInvalid={isSubmitted && !nick} type=\"text\" name=\"nick\" value={nick}\n                        onChange={e => dispatch({ type: 'field', fieldName: 'nick', payload: e.target.value })} />\n                   \n                    <div className=\"invalid-feedback\">\n                        Nick is required\n                    </div>\n                </div>\n\n                <div className=\"mt-2\">\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\n                    <Input\n                        isInvalid={(isSubmitted && !email)}\n                        type=\"email\" name=\"email\" value={email} onChange={e => dispatch({ type: 'field', fieldName: 'email', payload: e.target.value })} />\n                   \n                    <div className=\"invalid-feedback\">\n                        Email is required\n                    </div>\n                </div>\n\n                <div className=\"mt-2\">\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\n                    <Input isInvalid={isSubmitted && (password.length < 6)} type=\"password\"\n                        name=\"password\" value={password}\n                        onChange={e => dispatch({ type: 'field', fieldName: 'password', payload: e.target.value })} />\n                   \n                    <div className=\"invalid-feedback\">\n                        {\n                            password.length === 0 ? \"Password is required\" : \"Password too short (min 6 chars)\"\n                        }\n\n                    </div>\n                </div>\n\n                {\n                    isSuccess &&\n                    <div className=\"alert alert-success mt-2\">\n                        You have successfully registered and logged in.\n                    </div>\n                }\n\n                {\n                    isError &&\n                    <div  className=\"alert alert-danger mt-2\">\n                        {error ? error : 'Error while registtering.'}\n                    </div>\n                }\n\n                <div className=\"d-flex align-items-center mt-2\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Register\n                    </button>\n\n                    {\n                        isSending &&\n                        <div className=\"spinner-grow ml-2\" />\n                    }\n                </div>\n\n            </form>\n        </Modal>\n    );\n}\n\nexport default Register","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useEffect, useRef } from \"react\"\n\nconst Input = ({ isInvalid, onChange, type, name, value, placeholder = '' }) => {\n\n    const InputTag = type === 'textarea' ? 'textarea' : 'input'\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        let ref = inputRef.current\n        if (ref) {\n            if (isInvalid) inputRef.current.classList.add('is-invalid')\n            else inputRef.current.classList.remove('is-invalid')\n        }\n    }, [isInvalid])\n\n    return (\n        <InputTag ref={inputRef} className=\"form-control\"\n            placeholder={placeholder}\n            type={type} name={name}\n            value={value} onChange={onChange} />\n    )\n}\n\nexport default Input","\nexport const authInitialState = {\n    email: '',\n    nick: '',\n    password: '',\n    isSubmitted: false,\n    isSending: false,\n    isSuccess: false,\n    isError: false,\n    error: null\n}\n\nexport const authReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                isSubmitted: false,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'submit': {\n            return {\n                ...state,\n                isError: false,\n                error: null,\n                isSubmitted: true\n            }\n        }\n        case 'send': {\n            return {\n                ...state,\n                isSending: true\n            }\n        }\n        case 'success': {\n            return {\n\n                ...state,\n                isError: false,\n                error: null,\n                isSending: false,\n                isSuccess: true\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isSending: false,\n                isError: true,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}"],"sourceRoot":""}