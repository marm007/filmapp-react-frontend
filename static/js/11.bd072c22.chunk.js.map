{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/helpers/input.js","components/modals/reducer.js","components/modals/forgotPassword.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","Input","isInvalid","onChange","type","name","placeholder","InputTag","inputRef","useRef","useEffect","current","classList","add","remove","ref","className","authInitialState","email","nick","password","isSubmitted","isSending","isSuccess","isError","authReducer","state","action","fieldName","payload","ForgotPassword","history","useHistory","useReducer","dispatch","a","authApi","res","catch","errorMessage","response","data","errors","console","submitData","id","title","onClose","goBack","onSubmit","e","preventDefault","htmlFor","target"],"mappings":"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","file":"static/js/11.bd072c22.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useEffect, useRef } from \"react\"\n\nconst Input = ({ isInvalid, onChange, type, name, value, placeholder = '' }) => {\n\n    const InputTag = type === 'textarea' ? 'textarea' : 'input'\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        let ref = inputRef.current\n        if (ref) {\n            if (isInvalid) inputRef.current.classList.add('is-invalid')\n            else inputRef.current.classList.remove('is-invalid')\n        }\n    }, [isInvalid])\n\n    return (\n        <InputTag ref={inputRef} className=\"form-control\"\n            placeholder={placeholder}\n            type={type} name={name}\n            value={value} onChange={onChange} />\n    )\n}\n\nexport default Input","\nexport const authInitialState = {\n    email: '',\n    nick: '',\n    password: '',\n    isSubmitted: false,\n    isSending: false,\n    isSuccess: false,\n    isError: false,\n    error: null\n}\n\nexport const authReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                isSubmitted: false,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'submit': {\n            return {\n                ...state,\n                isError: false,\n                error: null,\n                isSubmitted: true\n            }\n        }\n        case 'send': {\n            return {\n                ...state,\n                isSending: true\n            }\n        }\n        case 'success': {\n            return {\n\n                ...state,\n                isError: false,\n                error: null,\n                isSending: false,\n                isSuccess: true\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isSending: false,\n                isError: true,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}","import React, { useReducer, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Modal from '../helpers/modal';\nimport Input from '../helpers/input';\n\nimport { authInitialState, authReducer } from './reducer';\n\nimport * as authApi from '../../services/authService'\n\nconst ForgotPassword = () => {\n    let history = useHistory()\n\n    const [state, dispatch] = useReducer(authReducer, authInitialState)\n\n    const { email, isSuccess, isSubmitted, isSending, isError, error } = state\n\n    useEffect(() => {\n        async function submitData() {\n\n            await authApi.forget({ email: email })\n                .then(res => {\n                    dispatch({\n                        type: 'success'\n                    })\n                })\n                .catch(err => {\n                    let errorMessage = null;\n\n                    if (err.response && err.response.data && err.response.data.errors)\n                        errorMessage = err.response.data.errors;\n\n                    dispatch({\n                        type: 'error',\n                        payload: errorMessage\n                    })\n\n                    console.error(err)\n                })\n        }\n        if (isSending) submitData()\n    }, [isSending, email])\n\n    const handleSubmitForgotRequest = (e) => {\n        e.preventDefault();\n\n        dispatch({\n            type: 'submit'\n        })\n\n        if (email) {\n            dispatch({\n                type: 'send'\n            })\n        }\n    };\n\n    const modalClose = () => {\n        history.goBack();\n    };\n\n\n    return (\n\n        <Modal id=\"forgotPasswordModal\" title=\"Forgot\" onClose={modalClose}>\n            <form onSubmit={handleSubmitForgotRequest}>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <Input\n                        isInvalid={(isSubmitted && !email)}\n                        type=\"email\" name=\"email\" value={email} onChange={e => dispatch({ type: 'field', fieldName: 'email', payload: e.target.value })} />\n                    <div className=\"invalid-feedback\">\n                        Email is required\n                    </div>\n                </div>\n\n                {\n                    isSuccess &&\n                    <div className=\"alert alert-danger mt-2\">\n                        Email with link to reset password has been sent.\n                    </div>\n                }\n\n                {\n                    isError &&\n                    <div className=\"alert alert-danger mt-2\">\n                        {error ? error : \"Error while sending email.\"}\n                    </div>\n                }\n\n                <div className=\"d-flex align-items-center mt-2\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Reset password\n                    </button>\n\n                    {\n                        isSending &&\n                        <div className=\"spinner-grow ml-2\" />\n                    }\n                </div>\n\n            </form>\n\n        </Modal>\n\n\n    );\n}\n\nexport default ForgotPassword"],"sourceRoot":""}