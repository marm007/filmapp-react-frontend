{"version":3,"sources":["components/helpers/privateRoute.js","components/modals/removeObject.js","components/helpers/withAxios.js","helpers/contexts/user/userProvider.js","images/error_500.svg","components/helpers/errorBoundary/index.js","App.js","serviceWorker.js","helpers/contexts/toast/toastProvider.js","helpers/contexts/removeModal/removeModalProvider.js","index.js","helpers/axios.js","helpers/contexts/user/userContext.js","helpers/contexts/removeModal/removeModalContext.js","helpers/contexts/toast/toastContext.js","helpers/authHeader.js","components/helpers/modal.js","services/authService.js"],"names":["PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","pathname","process","state","from","location","RemoveModal","useContext","RemoveModalContext","removeModalData","remove","clear","id","title","type","onClose","hide","footer","className","onClick","WithAxios","children","logout","UserContext","useMemo","axios","interceptors","response","use","error","isAuth","originalRequest","config","status","_retry","url","Promise","reject","refresh","JSON","parse","then","res","accessToken","data","token","setItem","stringify","headers","UserProvider","useLocation","useState","name","auth","isInitialLoaded","user","setUser","useEffect","window","scrollTo","decoded","jwt_decode","getMe","Provider","value","login","refreshToken","removeItem","clearUser","updateUser","reload","ErrorBoundary","hasError","errorInfo","console","this","style","src","error_500","alt","React","library","add","faPlay","faSortDown","faSortUp","faTrashAlt","faTimes","faGlobeEurope","faLock","pathName","NavbarComponent","lazy","ProfileComponent","HomeComponent","FilmComponent","SearchComponent","PlaylistsPage","AddFilmComponent","NotFoundComponent","LoginComponent","ResetPasswordComponent","ForgotPasswordComponent","RegisterComponent","SettingsComponent","MobileStyle","DesktopStyle","App","toast","ToastContext","role","header","message","fallback","isMobile","exact","path","Boolean","hostname","match","ToastProvider","hideAnimTimeout","isPrevoius","setToast","toastAutoHide","useRef","toastShow","createToast","toastElement","Toast","getOrCreateInstance","current","log","clearTimeout","setTimeout","show","RemoveModalProvider","isRemoving","setRemoveModalData","modal","showModal","Modal","prevState","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","instance","create","baseURL","createContext","authHeader","ModalBoostrap","handleClose","tabIndex","post","username","email","password","register","form","forget","reset"],"mappings":"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","file":"static/js/main.29e5c0b0.chunk.js","sourcesContent":["import {Redirect, Route} from \"react-router\";\nimport React from \"react\";\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return <Route\n        {...rest}\n        render={props =>\n            localStorage.getItem('accessToken') ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to={{\n                    pathname: `${process.env.REACT_APP_PATH_NAME}login`,\n                    state: {from: props.location}\n                }}/>\n            )\n        }/>\n};\n\nexport default PrivateRoute","import { useContext } from \"react\";\nimport RemoveModalContext from \"../../helpers/contexts/removeModal/removeModalContext\";\nimport Modal from \"../helpers/modal\";\n\nconst RemoveModal = () => {\n    const { removeModalData, remove, clear } = useContext(RemoveModalContext)\n\n    const handleRemove = () => remove()\n\n    const handleClose = () => clear();\n\n    return (\n        <Modal id=\"removeModal\" title={`Delete ${removeModalData.type}`}\n            onClose={handleClose} hide={true}\n            footer={<button type=\"button\" className=\"btn btn-primary\"\n                onClick={handleRemove}>\n                Delete\n            </button>}>\n            Do you really want to delete {removeModalData.type} <b>{removeModalData.title}</b>?\n            <br />\n            Action cannot be undone!\n        </Modal>\n    );\n}\n\nexport default RemoveModal","import { useContext, useMemo } from 'react'\nimport { refresh } from '../../services/authService';\nimport axios from '../../helpers/axios'\nimport UserContext from '../../helpers/contexts/user/userContext';\n\nconst WithAxios = ({ children }) => {\n\n    const { logout } = useContext(UserContext);\n\n    useMemo(() => {\n        axios.interceptors.response.use((response) => {\n            return response\n        }, (error) => {\n            const isAuth = localStorage.getItem('accessToken')\n            const originalRequest = error.config\n\n            if (error.response && error.response.status === 401 && isAuth && !originalRequest._retry) {\n                if (error.config.url === 'auth/refresh') {\n                    logout()\n                    return Promise.reject(error)\n                }\n                originalRequest._retry = true\n                return refresh({ \"refreshToken\": JSON.parse(localStorage.getItem(\"refreshToken\")) })\n                    .then(res => {\n                        if (res.status === 201) {\n                            const accessToken = res.data.token\n                            localStorage.setItem('accessToken', JSON.stringify(accessToken))\n                            originalRequest.headers['Authorization'] = 'Bearer ' + accessToken\n                            return axios(originalRequest)\n                        }\n                    })\n            }\n            return Promise.reject(error);\n        })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return children\n}\n\nexport default WithAxios","import { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport UserContext from './userContext';\nimport jwt_decode from \"jwt-decode\";\n\nconst UserProvider = ({ children }) => {\n    let { pathname } = useLocation()\n\n    const [user, setUser] = useState({ name: '', id: null, auth: false, isInitialLoaded: false });\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [pathname])\n\n    useEffect(() => {\n        function getMe() {\n            const token = localStorage.getItem('accessToken')\n            if (!token) {\n                setUser(user => ({ ...user, isInitialLoaded: true }))\n                return\n            }\n            const decoded = jwt_decode(token);\n            setUser(() => ({\n                name: decoded.name,\n                auth: true,\n                id: decoded.id,\n                isInitialLoaded: true\n            }));\n        }\n        getMe()\n    }, [])\n\n    const login = (name, id, token, refreshToken) => {\n        localStorage.setItem('accessToken', JSON.stringify(token));\n        localStorage.setItem('refreshToken', JSON.stringify(refreshToken));\n\n        setUser(() => ({\n            name: name,\n            auth: true,\n            id: id,\n            isInitialLoaded: true\n        }));\n    };\n\n    const logout = () => {\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n\n\n        setUser((user) => ({\n            ...user,\n            name: '',\n            auth: false,\n            id: null\n        }));\n    };\n\n    const updateUser = (accessToken) => {\n        localStorage.setItem('accessToken', JSON.stringify(accessToken));\n\n        const decoded = jwt_decode(accessToken);\n        setUser((user) => ({\n            ...user,\n            name: decoded.name\n        }));\n\n        window.location.reload();\n    }\n\n    const clearUser = () => {\n        setUser((user) => ({\n            ...user,\n            isInitialLoaded: false\n        }));\n    }\n\n    return (\n        <UserContext.Provider value={{ user, login, logout, clearUser, updateUser }}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport default UserProvider","export default __webpack_public_path__ + \"static/media/error_500.b91562a5.svg\";","import React from 'react'\nimport error_500 from '../../../images/error_500.svg'; // Tell Webpack this JS file uses this image\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false }\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true }\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.error('BoundaryError', error)\n        console.error('BoundaryError', errorInfo)\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <>\n                <div className=\"text-center\">\n                    <div className=\"col-12 col-sm-12 my-4 px-4\">\n\n                        <div className=\"ratio\" style={{ '--bs-aspect-ratio': '35%' }}>\n                            <img src={error_500} alt=\"\" />\n                        </div>\n                    </div>\n                    <h1>Something went wrong!</h1>\n                    <h5>Try reloading this page</h5>\n                    <button className=\"btn btn-success\" onClick={() => window.location.reload()}>Reload page</button>\n                </div>\n            </>\n        }\n\n        return this.props.children\n\n    }\n}\n\nexport default ErrorBoundary","import React, { useContext, lazy, Suspense } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport PrivateRoute from './components/helpers/privateRoute'\n\n//import SettingsComponent from './components/settings'\n\nimport RemoveModal from './components/modals/removeObject'\n\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\n//  --------- icons ------------\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n    faPlay,\n    faSortUp,\n    faSortDown,\n    faTrashAlt,\n    faTimes,\n    faGlobeEurope,\n    faLock\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { Switch } from \"react-router\";\n\nimport ToastContext from './helpers/contexts/toast/toastContext'\n\nimport WithAxios from \"./components/helpers/withAxios\";\nimport UserProvider from './helpers/contexts/user/userProvider';\nimport ErrorBoundary from './components/helpers/errorBoundary';\n\nimport { isMobile } from 'react-device-detect'\n\nlibrary.add(faPlay, faSortDown, faSortUp, faTrashAlt, faTimes, faGlobeEurope, faLock);\n\nconst pathName = process.env.REACT_APP_PATH_NAME\n\nconst NavbarComponent = lazy(() => import('./components/helpers/navbar'))\n\nconst ProfileComponent = lazy(() => import('./components/pages/profile'))\nconst HomeComponent = lazy(() => import('./components/pages/home'))\nconst FilmComponent = lazy(() => import('./components/pages/film'))\nconst SearchComponent = lazy(() => import('./components/pages/search'))\nconst PlaylistsPage = lazy(() => import('./components/pages/playlists'))\nconst AddFilmComponent = lazy(() => import('./components/pages/filmAdd'))\nconst NotFoundComponent = lazy(() => import('./components/pages/notFound'))\n\n\nconst LoginComponent = lazy(() => import('./components/modals/login'))\nconst ResetPasswordComponent = lazy(() => import('./components/modals/resetPassword'))\nconst ForgotPasswordComponent = lazy(() => import('./components/modals/forgotPassword'))\nconst RegisterComponent = lazy(() => import('./components/modals/register'))\nconst SettingsComponent = lazy(() => import('./components/modals/settings'))\n\nconst MobileStyle = lazy(() => import('./helpers/css/mobileStyle'))\nconst DesktopStyle = lazy(() => import('./helpers/css/desktopStyle'))\n\nfunction App() {\n\n    const { toast } = useContext(ToastContext)\n\n    return (\n        <div>\n            {\n                <div className=\"toast-root\">\n                    <div className=\"toast bg-secondary\"\n                        id=\"mainToast\" data-bs-autohide=\"false\"\n                        role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n                        <div className=\"toast-header\">\n                            <strong className=\"me-auto\">{toast.header}</strong>\n                        </div>\n                        <div className=\"toast-body\">\n                            {toast.message}\n                        </div>\n                    </div>\n                </div>\n            }\n\n            <Router>\n                <UserProvider>\n                    <WithAxios>\n                        <ErrorBoundary>\n\n                            <Suspense fallback={<></>}>\n                                {isMobile ? <MobileStyle /> : <DesktopStyle />}\n                                <PrivateRoute exact path={[`${pathName}settings`, `${pathName}profile/settings`, `${pathName}film/:id/settings`, `${pathName}search/settings`, `${pathName}add/settings`, `${pathName}playlists/settings`]}\n                                    component={SettingsComponent} />\n\n                                <Route exact path={[`${pathName}login`, `${pathName}film/:id/login`, `${pathName}search/login`, `${pathName}add/login`, `${pathName}playlists/login`]}\n                                    render={(props) => <LoginComponent {...props} />} />\n\n                                <Route exact path={[`${pathName}register`, `${pathName}film/:id/register`, `${pathName}search/register`, `${pathName}add/register`, `${pathName}playlists/register`]}\n                                    render={(props) => <RegisterComponent {...props} />} />\n\n                                <Route exact path={[`${pathName}reset/:token`, `${pathName}film/:id/reset/:token`, `${pathName}search/reset/:token`, `${pathName}add/reset/:token`, `${pathName}playlists/reset/:token`]}\n                                    render={(props) => <ResetPasswordComponent {...props} />} />\n\n                                <Route exact path={[`${pathName}forgot`, `${pathName}film/:id/forgot`, `${pathName}search/forgot`, `${pathName}add/forgot`, `${pathName}playlists/forgot`]}\n                                    render={(props) => <ForgotPasswordComponent {...props} />} />\n\n                            </Suspense>\n\n                            <Suspense fallback={<div className=\"suspense-loader\"> <div className=\"spinner-border\" /></div>}>\n\n                                <Route render={() => <NavbarComponent />} />\n\n                                <Switch>\n                                    <Route exact path={[`${pathName}film/:id`, `${pathName}film/:id/login`, `${pathName}film/:id/register`, `${pathName}film/:id/reset/:token`,\n                                    `${pathName}film/:id/forgot`, `${pathName}film/:id/settings`]}\n                                        render={(props) => <FilmComponent {...props} />} />\n\n                                    <Route exact path={[`${pathName}`, `${pathName}login`, `${pathName}register`, `${pathName}settings`,\n                                    `${pathName}reset/:token`, `${pathName}forgot`]}\n                                        render={(props) => <HomeComponent {...props} />} />\n\n                                    <Route exact path={[`${pathName}search`, `${pathName}search/login`, `${pathName}search/settings`, `${pathName}search/register`, `${pathName}search/reset/:token`, `${pathName}search/forgot`]}\n                                        render={(props) => <SearchComponent {...props} />} />\n\n                                    <Route exact path={[`${pathName}playlists`, `${pathName}playlists/login`, `${pathName}playlists/settings`, `${pathName}playlists/register`, `${pathName}playlists/reset/:token`,\n                                    `${pathName}playlists/forgot`]} render={(props) => <PlaylistsPage {...props} />} />\n\n                                    <PrivateRoute exact path={[`${pathName}add`, `${pathName}add/settings`]}\n                                        component={AddFilmComponent} />\n\n                                    <PrivateRoute exact path={[`${pathName}profile`, `${pathName}profile/settings`]}\n                                        component={ProfileComponent} />\n\n                                    <Route exact path=\"*\" render={(props) => <NotFoundComponent {...props} />} />\n\n                                </Switch>\n\n                            </Suspense>\n                        </ErrorBoundary>\n                    </WithAxios>\n                </UserProvider>\n\n            </Router>\n            <RemoveModal />\n        </div >\n    );\n}\n\nexport default App\n\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { useState, useRef } from 'react'\nimport ToastContext from './toastContext'\nimport { Toast } from 'bootstrap'\n\nconst ToastProvider = ({ children }) => {\n    const showAnimTimeout = 850\n    const hideAnimTimeout = 1500 + showAnimTimeout\n\n    const [toast, setToast] = useState({ header: '', message: '', isPrevoius: false })\n\n    const toastAutoHide = useRef(null)\n    const toastShow = useRef(null)\n\n    const createToast = (message, header = 'Playlist') => {\n        let toastElement = Toast.getOrCreateInstance(\"#mainToast\")\n\n        if (toastAutoHide.current) {\n            console.log('hide', toastAutoHide.current)\n            clearTimeout(toastAutoHide.current)\n            toastAutoHide.current = null\n        }\n\n        if (toast.isPrevoius) {\n            toastElement.hide()\n\n            if (toastShow.current) {\n                console.log('toastShow', toastAutoHide.current)\n\n                clearTimeout(toastShow.current)\n            }\n\n            toastShow.current = setTimeout(() => {\n                console.log('ladladll')\n                toastElement.show()\n                setToast({ header: header, message: message, isPrevoius: true })\n                toastAutoHide.current = setTimeout(() => {\n                    console.log('ccsda')\n                    toastElement.hide()\n                }, hideAnimTimeout)\n            }, showAnimTimeout)\n\n        } else {\n            toastElement.show()\n            setToast({ header: header, message: message, isPrevoius: true })\n            toastShow.current = setTimeout(() => {\n                toastElement.hide()\n            }, hideAnimTimeout)\n        }\n    }\n\n    return (\n        <ToastContext.Provider value={{ toast, createToast }}>\n            {children}\n        </ToastContext.Provider>\n    )\n}\n\nexport default ToastProvider","import { Modal } from 'bootstrap'\nimport { useState, useRef } from 'react'\nimport RemoveModalContext from './removeModalContext'\n\nconst RemoveModalProvider = ({ children }) => {\n\n    const [removeModalData, setRemoveModalData] = useState({ show: false, isRemoving: false, id: null, type: null, title: '' })\n    const modal = useRef()\n    const showModal = (id, type, title) => {\n        modal.current = Modal.getOrCreateInstance('#removeModal')\n        modal.current.show()\n        setRemoveModalData({ show: true, isRemoving: false, id: id, type: type, title: title })\n    }\n\n    const remove = () => {\n        modal.current.hide()\n        setRemoveModalData(prevState => {\n            return { ...prevState, show: false, isRemoving: true }\n        })\n    }\n\n    const clear = () => {\n        modal.current.hide()\n        setRemoveModalData({ show: false, isRemoving: false, id: null, type: null, title: '' })\n    }\n\n    return (\n        <RemoveModalContext.Provider value={{ showModal, removeModalData, remove, clear }} >\n            {children}\n        </RemoveModalContext.Provider>\n    )\n}\n\nexport default RemoveModalProvider","import \"es6-promise\";\nimport \"isomorphic-fetch\";\n\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport ToastProvider from \"./helpers/contexts/toast/toastProvider\";\nimport RemoveModalProvider from \"./helpers/contexts/removeModal/removeModalProvider\";\n\nReactDOM.render(\n    <ToastProvider>\n        <RemoveModalProvider>\n            <App />\n        </RemoveModalProvider>\n    </ToastProvider>\n    ,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from 'axios'\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n})\nexport default instance","import { createContext } from 'react';\nconst UserContext = createContext({ name: '', id: null, auth: false, isInitialLoaded: false });\nexport default UserContext","import { createContext } from 'react'\nconst RemoveModalContext = createContext({ show: false, isRemoving: false, id: null, type: null, title: '' })\nexport default RemoveModalContext","import { createContext } from \"react\";\nconst ToastContext = createContext('')\nexport default ToastContext","const authHeader = () => {\n\n    let token = JSON.parse(localStorage.getItem('accessToken'));\n\n    if(token){\n        return { 'Authorization' : 'Bearer ' + token};\n    } else{\n        return {};\n    }\n}\n\nexport default authHeader","import { useEffect, useRef } from \"react\"\nimport { Modal as ModalBoostrap } from 'bootstrap'\n\nconst Modal = ({ id, title, children, onClose, footer, hide }) => {\n\n    const modal = useRef(null)\n\n    useEffect(() => {\n        modal.current = ModalBoostrap.getOrCreateInstance(`#${id}`)\n        if (hide) modal.current.hide()\n        else modal.current.show()\n        return () => {\n            modal.current.hide()\n        }\n    }, [id, hide])\n\n    const handleClose = () => {\n        onClose()\n        modal.current.hide()\n    }\n\n    return (\n        <div className=\"modal fade\" id={id} tabIndex=\"-1\">\n            <div className=\"modal-dialog modal-dialog-centered modal-lg\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">{title}</h5>\n                        <button type=\"button\" className=\"btn-close\" onClick={handleClose}></button>\n                    </div>\n                    <div className=\"modal-body\">\n                        {children}\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={handleClose}>Close</button>\n                        {footer}\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal","import authHeader from '../helpers/authHeader'\nimport axios from '../helpers/axios'\n\nexport const login = (data) => axios.post('auth', {}, {\n    auth: {\n        username: data.email,\n        password: data.password\n    }\n})\nexport const register = (form) => axios.post('users', form)\n\nexport const refresh = (data) => axios.post('auth/refresh', data, {headers: authHeader()})\nexport const forget = (form) => axios.post('auth/password/forgot', form)\nexport const reset = (token, form) => axios.post(`auth/password/reset/${token}`, form)"],"sourceRoot":""}