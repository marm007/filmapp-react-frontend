{"version":3,"sources":["components/pages/playlists/reducer.js","components/pages/playlists/index.js","config/index.js","helpers/hooks/useBottomScrollListener.js","components/buttons/ripple/index.js","services/playlistService.js","components/models/film/skeleton.js","components/buttons/changePrivacy/index.js","components/buttons/remove/index.js","helpers/hooks/useIntersectionObserver.js","components/models/blurredImage/index.js","components/buttons/edit/index.js","components/models/playlist/index.js"],"names":["initialState","playlists","playlistsCount","isLoading","isAllFetched","isInitialLoaded","error","playlistsPageReducer","state","action","type","fieldName","payload","Set","responseCount","pageInitialMaxFetchCount","pageMaxFetchCount","PlaylistsPage","history","useHistory","useReducer","dispatch","handleOnPlaylistsBottom","useCallback","useBottomScrollListener","triggerOnNoScroll","useEffect","a","playlistApi","limit","playlistPage","then","res","result","data","filtered","filter","playlist","film_id","forEach","img","process","length","catch","err","console","fetchInitialPlaylists","skip","fetchPlaylists","setRedirect","playlistID","filmID","push","pathname","search","className","map","index","handleRedirect","id","Array","_","commentsMaxFetchCount","recommendationsMaxFetchCount","playlistButtonMaxFetchCount","searchPageMaxFetchCount","createCallback","debounce","handleOnScroll","options","lodashDebounce","onBottom","useMemo","offset","debounceOptions","leading","debouncedOnBottom","containerRef","useRef","current","scrollNode","scrollContainerBottomPosition","Math","round","scrollTop","clientHeight","scrollHeight","document","getElementById","scrollingElement","documentElement","window","innerHeight","ref","node","addEventListener","removeEventListener","RippleButton","onClick","children","props","useRipple","background","addRipple","ripples","e","onMouseDown","create","body","axios","post","headers","authHeader","get","show","params","partialUpdate","patch","remove","delete","FilmSkeleton","isRecommendations","ChangePrivacyButton","isPublic","isPlaylist","dispatchPrivacyUpdate","filmDispatch","useState","isChanging","setIsChanging","is_public","undefined","changePrivacy","preventDefault","stopPropagation","icon","RemoveButton","handleRemove","require","useIntersectionObserver","target","onIntersect","threshold","rootMargin","React","observer","IntersectionObserver","observe","unobserve","BlurredImage","src","srcWebp","thumb","thumbWebp","isCached","isLoaded","setIsLoaded","srcSet","alt","style","visibility","onLoad","opacity","BlurredImageComponent","image","isVisible","setIsVisible","setIsCached","observerElement","isIntersecting","tmp","Image","concat","complete","EditButton","title","description","Playlist","isProfile","setStyle","line","text","author_name"],"mappings":"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","file":"static/js/8.d30eee05.chunk.js","sourcesContent":["import { pageInitialMaxFetchCount, pageMaxFetchCount  } from '../../../config'\n\n\nexport const initialState = {\n    playlists: null,\n    playlistsCount: 0,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    error: null,\n}\n\nexport const playlistsPageReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                playlists: [...new Set([...action.playlists])],\n                isLoading: false,\n                isInitialLoaded: true,\n                isAllFetched: action.responseCount < pageInitialMaxFetchCount,\n                playlistsCount: state.playlistsCount + action.responseCount,\n            }\n        }\n        case 'load': {\n            return {\n                ...state,\n                isLoading: true,\n                isAllFetched: false,\n                error: null\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                playlists: [...new Set([...state.playlists, ...action.playlists])],\n                isLoading: false,\n                isAllFetched: action.responseCount < pageMaxFetchCount,\n                playlistsCount: state.playlistsCount + action.responseCount,\n                error: null\n            }\n        }\n        case 'clear': {\n            return initialState\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                isAllFetched: false,\n                error: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n","import React, { useEffect, useReducer, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { playlistsPageReducer, initialState } from './reducer'\n\nimport Skeleton from '../../models/film/skeleton';\nimport Playlist from '../../models/playlist';\n\nimport * as playlistApi from '../../../services/playlistService'\n\nimport { pageInitialMaxFetchCount, pageMaxFetchCount } from '../../../config';\n\nimport useBottomScrollListener from '../../../helpers/hooks/useBottomScrollListener';\n\nconst pathName = process.env.REACT_APP_PATH_NAME;\n\nfunction PlaylistsPage() {\n\n    let history = useHistory()\n\n    const [state, dispatch] = useReducer(playlistsPageReducer, initialState)\n    const { playlists, isLoading, isAllFetched, isInitialLoaded, playlistsCount } = state\n\n    const handleOnPlaylistsBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isAllFetched, isLoading, isInitialLoaded])\n\n    useBottomScrollListener(handleOnPlaylistsBottom, { triggerOnNoScroll: true })\n\n    useEffect(() => {\n        async function fetchInitialPlaylists() {\n            await playlistApi.show({ limit: pageInitialMaxFetchCount, playlistPage: true })\n                .then(res => {\n                    const result = res.data;\n\n                    let filtered = result.filter(playlist => playlist.film_id)\n\n                    filtered.forEach(playlist => {\n                        playlist.img = `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail`\n                    });\n\n                    dispatch({\n                        type: 'initial-success',\n                        playlists: filtered,\n                        responseCount: result.length\n                    })\n\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        dispatch({ type: 'clear' })\n        fetchInitialPlaylists()\n\n    }, [])\n\n    useEffect(() => {\n        async function fetchPlaylists() {\n            await playlistApi.show({ skip: playlistsCount, limit: pageMaxFetchCount, playlistPage: true })\n                .then(res => {\n                    const result = res.data;\n\n                    let filtered = result.filter(playlist => playlist.film_id)\n\n                    filtered.forEach(playlist => {\n                        playlist.img = `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail`\n                    });\n\n                    dispatch({\n                        type: 'success',\n                        playlists: filtered,\n                        responseCount: result.length\n                    })\n\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (isLoading && isInitialLoaded) fetchPlaylists()\n\n    }, [isLoading, isInitialLoaded, playlists, playlistsCount])\n\n\n    const setRedirect = (playlistID, filmID) => {\n        history.push({\n            pathname: `${pathName}film/` + filmID,\n            search: `?list=${playlistID}`\n        });\n    };\n\n\n    return (\n        <div className=\"row mt-5 mx-2\">\n            {\n                playlists ? playlists.map((playlist, index) => <Playlist key={playlist.id} playlist={playlist} index={index} handleRedirect={setRedirect} />)\n                    : ([...Array(20)].map((_, index) => (\n                        <Skeleton key={index} />\n                    )))\n            }\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {\n                        isLoading &&\n                        <div className=\"spinner spinner-border\" />\n                    }\n                </div>\n            }\n\n        </div>\n\n    )\n}\n\nexport default PlaylistsPage\n","export const commentsMaxFetchCount = 10\nexport const recommendationsMaxFetchCount = 12\n\nexport const playlistButtonMaxFetchCount = 10\n\nexport const pageInitialMaxFetchCount = 40\nexport const pageMaxFetchCount = 20\n\nexport const searchPageMaxFetchCount = 10\n","import { useCallback, useEffect, useRef, useMemo } from 'react';\nimport lodashDebounce from 'lodash.debounce';\n\nconst createCallback = (debounce, handleOnScroll, options) => {\n  if (debounce) {\n    return lodashDebounce(handleOnScroll, debounce, options);\n  } else {\n    return handleOnScroll;\n  }\n};\n\nfunction useBottomScrollListener(\n  onBottom = () => { },\n  options = {},\n) {\n  const { offset, triggerOnNoScroll, debounce, debounceOptions, id } = useMemo(\n    () => ({\n      offset: options?.offset ?? 20,\n      debounce: options?.debounce ?? 200,\n      debounceOptions: options?.debounceOptions ?? { leading: true },\n      triggerOnNoScroll: options?.triggerOnNoScroll ?? false,\n      id: options?.id ?? null\n    }),\n    [options?.offset, options?.debounce, options?.debounceOptions, options?.triggerOnNoScroll, options?.id],\n  );\n\n  const debouncedOnBottom = useMemo(() => createCallback(debounce, onBottom, debounceOptions), [onBottom, debounce, debounceOptions]);\n  const containerRef = useRef(null);\n  const handleOnScroll = useCallback(() => {\n\n    if (containerRef.current != null) {\n      const scrollNode = containerRef.current;\n      const scrollContainerBottomPosition = Math.round(scrollNode.scrollTop + scrollNode.clientHeight);\n      const scrollPosition = Math.round(scrollNode.scrollHeight - offset);\n\n      if (scrollPosition <= scrollContainerBottomPosition) {\n        debouncedOnBottom();\n      }\n    } else if (id !== null) {\n      const scrollNode = document.getElementById(id);\n      if (scrollNode) {\n        const scrollContainerBottomPosition = Math.round(scrollNode.scrollTop + scrollNode.clientHeight);\n        const scrollPosition = Math.round(scrollNode.scrollHeight - offset);\n        if (scrollPosition <= scrollContainerBottomPosition) {\n          debouncedOnBottom();\n        }\n      }\n    } else {\n      const scrollNode = document.scrollingElement || document.documentElement;\n      const scrollContainerBottomPosition = Math.round(scrollNode.scrollTop + window.innerHeight);\n      const scrollPosition = Math.round(scrollNode.scrollHeight - offset);\n\n      if (scrollPosition <= scrollContainerBottomPosition) {\n        debouncedOnBottom();\n      }\n    }\n  }, [debouncedOnBottom, offset, id]);\n\n  useEffect(() => {\n    const ref = containerRef.current;\n    const node = document.getElementById(id)\n\n    if (ref != null) {\n      ref.addEventListener('scroll', handleOnScroll);\n    } else if (node !== null) {\n      node.addEventListener('scroll', handleOnScroll);\n    } else {\n      window.addEventListener('scroll', handleOnScroll);\n    }\n\n    if (triggerOnNoScroll) {\n      handleOnScroll();\n    }\n\n    return () => {\n      if (ref != null) {\n        ref.removeEventListener('scroll', handleOnScroll);\n      } else if (node !== null) {\n        node.addEventListener('scroll', handleOnScroll);\n      } else {\n        window.removeEventListener('scroll', handleOnScroll);\n      }\n    };\n  }, [handleOnScroll, triggerOnNoScroll, id]);\n\n  return containerRef;\n}\n\nexport default useBottomScrollListener;\n","import useRipple from 'useripple'\n\nconst RippleButton = ({ onClick = () => {}, children, className, id, ...props }) => {\n\n    const [addRipple, ripples] = useRipple({ background: 'black' })\n\n    return (\n        <button id={id ? id : ''} onClick={(e) => {\n            onClick(e)\n        }}\n            onMouseDown={addRipple}\n            className={`btn btn-link button-ripple text-dark ${className}`} {...props}>\n            {children}\n            {ripples}\n        </button>\n    )\n}\n\nexport default RippleButton","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const create = (body) => axios.post('playlists', body, { headers: authHeader() })\nexport const index = (id) => axios.get(`playlists/${id}`, { headers: authHeader() })\nexport const show = (params) => axios.get(`playlists`, { params, headers: authHeader() })\nexport const partialUpdate = (id, body) => axios.patch(`playlists/${id}`, body, { headers: authHeader() })\n\n\nexport const remove = (id) => axios.delete(`playlists/${id}`, { headers: authHeader() })\n\n","import Skeleton from 'react-loading-skeleton';\n\nimport '../../pages/film/film.css'\n\nconst FilmSkeleton = ({ isRecommendations }) => {\n\n    return (\n        <div className={`${isRecommendations ? 'col-sm-12' : 'col-sm-6'} mb-4 col col-12 col-md-3 col-lg-2 container-px`}>\n            <div className=\"col-12 col-sm-12 p-0\">\n                <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                    <div className=\"embed-responsive-item\">\n                        <Skeleton className=\"w-100 h-100 line-height-unset\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-12 col-sm-12 mt-2 p-0\">\n                <div className=\"col p-0\">\n                    <Skeleton className=\"w-100 h-100 line-height-unset\" />\n                </div>\n\n                <div className=\"col p-0\">\n                    <Skeleton className={`${isRecommendations ? 'line-height-unset' : ''} col w-100`} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FilmSkeleton","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useState } from \"react\"\nimport * as playlistApi from '../../../services/playlistService'\nimport RippleButton from \"../ripple\"\n\nconst ChangePrivacyButton = ({ isPublic, id, isPlaylist, dispatchPrivacyUpdate, filmDispatch }) => {\n\n    const [isChanging, setIsChanging] = useState(false)\n\n\n    useEffect(() => {\n        async function changePrivacy() {\n            await playlistApi.partialUpdate(id, { is_public: !isPublic })\n                .then(res => {\n                    setIsChanging(false)\n\n                    dispatchPrivacyUpdate({\n                        type: 'change-playlist-privacy-success',\n                        payload: res.data\n                    })\n\n                    if (filmDispatch !== undefined) {\n                        filmDispatch({\n                            type: 'field',\n                            fieldName: 'reloadPlaylist',\n                            payload: true\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.error(err)\n                    setIsChanging(false)\n                })\n        }\n        if (isChanging) changePrivacy()\n    }, [dispatchPrivacyUpdate, isChanging, isPublic, id, filmDispatch])\n\n    const handleChangePrivacy = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        if (!isChanging) setIsChanging(true)\n    }\n\n\n    return <RippleButton\n        className={`button-ripple-24 p-0 ${isPlaylist ? '' : 'remove-holder'}`}\n        onClick={handleChangePrivacy}>\n        <FontAwesomeIcon icon={isPublic ? \"globe-europe\" : \"lock\"} />\n    </RippleButton>\n}\n\nexport default ChangePrivacyButton","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport RippleButton from '../ripple'\n\nconst RemoveButton = ({ handleRemove }) => {\n    return (\n        <RippleButton\n            className=\"button-ripple-24 remove-holder p-0\"\n            onClick={handleRemove}>\n            <FontAwesomeIcon icon=\"trash-alt\" />\n        </RippleButton>\n    )\n}\n\nexport default RemoveButton","import React from \"react\";\nrequire('intersection-observer');\n\nconst useIntersectionObserver = ({\n  target,\n  onIntersect,\n  threshold = 0.1,\n  rootMargin = \"0px\"\n}) => {\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, {\n      rootMargin,\n      threshold\n    });\n    const current = target.current;\n    observer.observe(current);\n    return () => {\n      observer.unobserve(current);\n    };\n  });\n};\nexport default useIntersectionObserver;","import React, { useState, useRef } from 'react';\nimport useIntersectionObserver from '../../../helpers/hooks/useIntersectionObserver';\nimport \"./blurred.css\";\n\nconst BlurredImage = ({ src, srcWebp, thumb, thumbWebp, isCached }) => {\n    const [isLoaded, setIsLoaded] = useState(isCached);\n\n    return (\n        <div>\n\n            <picture >\n                <source type=\"image/webp\" srcSet={thumbWebp} />\n                <source type=\"image/jpeg\" srcSet={thumb} />\n                <img className=\"image thumb\" alt=\"\"\n                    style={{ visibility: isLoaded ? \"hidden\" : \"visible\" }}\n                    src={thumb}\n                    onLoad={() => {\n                        setIsLoaded(true);\n                    }} />\n            </picture>\n\n            <picture >\n                <source type=\"image/webp\" srcSet={srcWebp} />\n                <source type=\"image/jpeg\" srcSet={src} />\n                <img className=\"image full\" alt=\"\"\n                    style={{ opacity: isLoaded ? 1 : 0 }}\n                    src={src}\n                    onLoad={() => {\n                        setIsLoaded(true);\n                    }} />\n            </picture>\n        </div>\n    );\n}\n\nfunction BlurredImageComponent({ image }) {\n    const ref = useRef();\n    const [isVisible, setIsVisible] = useState(false);\n    const [isCached, setIsCached] = useState(false);\n\n    useIntersectionObserver({\n        target: ref,\n        onIntersect: ([{ isIntersecting }], observerElement) => {\n            if (isIntersecting) {\n                let tmp = new Image();\n                tmp.src = image.concat('?width=poster_webp');\n                setIsCached(tmp.complete)\n                setIsVisible(true);\n                if (ref.current)\n                    observerElement.unobserve(ref.current);\n            }\n        }\n    });\n\n    return (\n        <div\n            ref={ref}\n            className=\"image-container embed-responsive embed-responsive-16by9  play-image\"\n        >\n            {isVisible && (\n                <BlurredImage isCached={isCached}\n                    src={image.concat('?width=poster')}\n                    srcWebp={image.concat('?width=poster_webp')}\n                    thumb={image.concat('?width=preview')}\n                    thumbWebp={image.concat('?width=preview_webp')} />\n            )}\n        </div>\n    );\n}\n\nexport default BlurredImageComponent;","import React from 'react'\nimport { useHistory } from \"react-router-dom\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport RippleButton from \"../ripple\"\n\nconst EditButton = ({ isPlaylist, id, title, description }) => {\n    let history = useHistory()\n\n    const handleEditClick = (e) => {\n        e.stopPropagation()\n        if (isPlaylist) {\n            history.push({ pathname: `profile/update-playlist/${id}`, state: { title } })\n        } else {\n            history.push({ pathname: `profile/update-film/${id}`, state: { title, description } })\n        }\n    }\n\n    return (\n        <RippleButton className=\"button-ripple-24 remove-holder p-0\"\n            onClick={handleEditClick}>\n            <FontAwesomeIcon icon=\"edit\" />\n        </RippleButton>\n    )\n}\n\nexport default EditButton","import React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TextTruncate from \"react-text-truncate\";\nimport BlurredImageComponent from \"../blurredImage\";\nimport RemoveButton from '../../buttons/remove';\nimport ChangePrivacyButton from '../../buttons/changePrivacy';\nimport EditButton from '../../buttons/edit';\n\nconst Playlist = ({ playlist, handleRedirect, handleRemove, isProfile, dispatchPrivacyUpdate }) => {\n\n    const [style, setStyle] = useState(\"mb-4 play-outer-container remove-container\")\n\n    useEffect(() => {\n        if (!playlist.film_id) setStyle(\"mb-4 play-cursor-default remove-container\")\n    }, [playlist.film_id])\n\n\n    return (\n        <div className=\"col-12 col-sm-6 col-md-3 col-lg-2 container-px\"\n            key={playlist.id}>\n            <div className={`col ${style} p-0`} onClick={() => handleRedirect(playlist.id, playlist.film_id)}>\n                <div className=\"play-container p-0\">\n                    <BlurredImageComponent\n                        image={playlist.img} />\n\n                    <div className=\"row play-middle w-100 m-0\">\n                        <div className=\"col-5 col-sm-5 pr-1 d-flex justify-content-end align-items-center\">\n                            <FontAwesomeIcon icon=\"play\" />\n                        </div>\n                        <div className=\"col-7 col-sm-7 pl-1 d-flex justify-content-start align-items-center\">\n                            <small className=\"font-weight-bold\" >Play all</small>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row m-0 mt-1\">\n                    <div className={`p-0 col ${isProfile ? 'button-ripple-div-next-width-3x' : 'col-12'}`}>\n                        <TextTruncate line={1} text={playlist.title}\n                            className=\"mb-1 mt-1 title \" />\n                    </div>\n\n\n                    {\n                        isProfile && <>\n                            <ChangePrivacyButton\n                                id={playlist.id}\n                                isPublic={playlist.is_public}\n                                isProfile={true}\n                                dispatchPrivacyUpdate={dispatchPrivacyUpdate} />\n                            <RemoveButton handleRemove={handleRemove} />\n                            <EditButton isPlaylist={true} id={playlist.id} title={playlist.title} />\n                        </>\n                    }\n                </div>\n                <p className=\"mb-0 author-nick\">\n                    <span>{playlist.author_name}</span>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Playlist"],"sourceRoot":""}