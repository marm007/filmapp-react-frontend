{"version":3,"sources":["components/auth/login.js"],"names":["Login","props","login","useContext","UserContext","history","useHistory","location","useLocation","useReducer","authReducer","authInitialState","state","dispatch","email","password","isSubmitted","isSending","isError","error","useState","show","setShow","useEffect","a","authApi","then","res","data","user","name","id","token","refreshToken","pathname","slice","process","replace","search","catch","err","errorMessage","response","errors","type","payload","console","sendData","modalClose","push","goBack","onHide","size","centered","Header","closeButton","Title","Body","onSubmit","e","preventDefault","Group","Label","htmlFor","Control","isInvalid","value","onChange","fieldName","target","Feedback","className","disabled","animation","variant","onClick","setTimeout","xs","sm","Footer"],"mappings":"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","file":"static/js/7.d371c598.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, useReducer } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport { Alert, Button, Col, Form, Modal, Spinner } from 'react-bootstrap';\n\nimport * as authApi from '../../services/authService'\n\nimport UserContext from '../../helpers/contexts/user/userContext'\nimport { authInitialState, authReducer } from './reducer';\n\nfunction Login(props) {\n\n    const { login } = useContext(UserContext);\n\n    let history = useHistory()\n    let location = useLocation()\n\n    const [state, dispatch] = useReducer(authReducer, authInitialState)\n    const { email, password, isSubmitted, isSending, isError, error } = state\n    const [show, setShow] = useState(true)\n\n    useEffect(() => {\n        async function sendData() {\n            await authApi.login({ email, password })\n                .then(res => {\n                    login(res.data.user.name, res.data.user.id, res.data.token, res.data.refreshToken)\n                    //history.replace(location.pathname.slice(0, -6))\n\n                    let pathname = location.pathname.slice(0, -6)\n                    if (pathname === '') pathname = process.env.REACT_APP_PATH_NAME\n\n                    history.replace({\n                        pathname: pathname,\n                        search: location.search,\n                        state: location.state\n                    })\n\n                    //if (!location.state) {\n                    // history.goBack();\n                    //} else {\n                    //   history.replace(location.state.from)\n                    //}\n                })\n                .catch(err => {\n                    let errorMessage = null;\n\n                    if (err.response && err.response.data && err.response.data.errors)\n                        errorMessage = err.response.data.errors;\n\n                    dispatch({\n                        type: 'error',\n                        payload: errorMessage\n                    })\n\n                    console.error(err)\n                })\n        }\n        if (isSending) sendData()\n    }, [isSending, email, password, history, location, login])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        dispatch({ type: 'submit' })\n\n        if (email && password) {\n            dispatch({ type: 'send' })\n        }\n    }\n\n    const handleForgotPassword = () => {\n        history.goBack();\n\n        setTimeout(function () {\n            history.push(`${location.pathname.slice(0, -5)}forgot${location.search}`);\n        }, 500);\n    };\n\n    const modalClose = () => {\n        setShow(false)\n        if (!location.state) {\n            history.goBack();\n        } else {\n            history.push(process.env.REACT_APP_PATH_NAME)\n        }\n    };\n\n    const handleRegister = () => {\n        history.goBack();\n\n        setTimeout(function () {\n            history.push(`${location.pathname.slice(0, -5)}register${location.search}`);\n        }, 500);\n    };\n\n\n\n    return (\n\n        <Modal\n            onHide={modalClose}\n            show={show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered>\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Login\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={isSending ? null : handleSubmit}>\n\n                    <Form.Group>\n                        <Form.Label htmlFor=\"email\">Email</Form.Label>\n                        <Form.Control isInvalid={isSubmitted && !email} type=\"email\" name=\"email\" value={email}\n                            onChange={e => dispatch({ type: 'field', fieldName: 'email', payload: e.target.value })}>\n                        </Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Email is required\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mt-2\">\n                        <Form.Label htmlFor=\"password\">Password</Form.Label>\n                        <Form.Control isInvalid={isSubmitted && !password} type=\"password\" name=\"password\"\n                            value={password} onChange={e => dispatch({ type: 'field', fieldName: 'password', payload: e.target.value })}>\n                        </Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Password is required\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"d-flex align-items-center mt-2\">\n                        <Button  disabled={isSending} type=\"submit\" className=\"btn-primary\">\n                            Login\n                        </Button>\n\n                        {\n                            isSending &&\n                            <Spinner className=\"ms-2\" animation=\"grow\" />\n                        }\n                    </Form.Group>\n\n                </Form>\n\n                {\n                    isError &&\n                    <Alert variant=\"danger\" className=\"mt-2 mb-0\">\n                        {error ? error : 'Error while logging in.'}\n                    </Alert>\n                }\n\n                <Button variant=\"link\" onClick={handleRegister} className=\"p-0 mt-2 btn btn-link\">Register</Button>\n\n                <Col className=\"p-0 m-0 \" xs={12} sm={12}>\n                    <Button variant=\"link\" onClick={handleForgotPassword} className=\"p-0 mt-2 btn btn-link\">Forgot password?</Button>\n                </Col>\n\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button onClick={modalClose}>Close</Button>\n            </Modal.Footer>\n\n\n        </Modal>\n\n\n    );\n}\n\nexport default Login"],"sourceRoot":""}