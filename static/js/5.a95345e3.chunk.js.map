{"version":3,"sources":["config/index.js","helpers/components/rippleButton.js","services/playlistService.js","helpers/components/changePrivacyButton.js","helpers/hooks/useIntersectionObserver.js","components/blurredImage/index.js","helpers/components/removeButton.js","helpers/index.js","components/add/reducers/playlistDropdownMenuReducer.js","components/add/playlistDropdownMenu.js","components/add/playlistAddButton.js","helpers/components/film.js","helpers/components/playlist.js","images/image_not_found.png","components/profilePage/reducer.js","components/profilePage/index.js"],"names":["commentsMaxFetchCount","recommendationsMaxFetchCount","playlistButtonMaxFetchCount","pageInitialMaxFetchCount","pageMaxFetchCount","RippleButton","onClick","children","className","useRipple","background","addRipple","ripples","variant","e","onMouseDown","create","body","axios","post","headers","authHeader","index","id","get","show","params","partialUpdate","patch","remove","delete","ChangePrivacyButton","isPublic","isProfile","dispatchPrivacyUpdate","filmDispatch","useState","isChanging","setIsChanging","useEffect","a","playlistApi","is_public","then","res","type","payload","data","undefined","fieldName","catch","err","console","error","changePrivacy","privacyButton","stopPropagation","icon","style","height","width","useIntersectionObserver","target","onIntersect","threshold","rootMargin","React","observer","IntersectionObserver","current","observe","unobserve","Image","src","thumb","isLoaded","setIsLoaded","alt","visibility","onLoad","opacity","BlurredImageComponent","image","ref","useRef","isVisible","setIsVisible","observerElement","isIntersecting","concat","RemoveButton","handleRemove","checkIfPlaylistButtonClick","tagName","parentNode","animVal","includes","displayCommentDate","comment","date","Date","parse","createdAt","getDate","slice","getMonth","getFullYear","getHours","getMinutes","parseSearchDate","film","today","time","Math","abs","floor","UTC","playlistDropdownMenuInitialState","playlists","isLoading","isAllFetched","isCreating","isAdding","playlistToUpgrade","title","playlistDropdownMenuReducer","state","action","length","map","playlist","contains","PlaylistDropdownMenu","filmID","handlePlaylistClose","isRecommendations","createToast","useContext","ToastContext","useReducer","dispatch","handleOnPlaylistDropdownMenuBottom","useCallback","scrollRef","useBottomScrollListener","userApi","skip","limit","result","forEach","films","indexOf","getMyPlaylists","films_id","errorMessage","response","errors","creatPlaylist","is_remove_films","message","addToPlaylist","Dropdown","Menu","left","Row","Col","setTimeout","Divider","maxHeight","overflowY","minHeight","xs","sm","Form","Check","FormCheck","Input","onChange","handleAddToPlaylist","checked","Label","Spinner","animation","ItemText","FormControl","isInvalid","value","placeholder","Feedback","Select","Group","Button","disabled","PlaylistAddButton","props","user","UserContext","isOpen","setIsOpen","auth","onToggle","event","metadata","Toggle","bsPrefix","color","display","faEllipsisV","Film","handleRedirect","img","line","text","author_name","views","Playlist","colWidth","setStyle","film_id","md","lg","margin","justifyContent","alignItems","initialProfileState","isRemoving","toRemove","filmsCount","playlistsCount","profileReducer","isInitialLoaded","Set","filter","resource","isPlaylist","Profile","clearUser","RemoveModalContext","showModal","clear","removeModalData","history","useHistory","handleProfileOnBottom","triggerOnNoScroll","replace","process","push","Promise","allSettled","skipFilms","skipPlaylists","status","image_not_found","fetchInitialData","fetchData","filmApi","record","pathname","search","handleRedirectPlaylist"],"mappings":"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","file":"static/js/5.a95345e3.chunk.js","sourcesContent":["export const commentsMaxFetchCount = 10\nexport const recommendationsMaxFetchCount = 12\n\nexport const playlistButtonMaxFetchCount = 10\n\nexport const pageInitialMaxFetchCount = 40\nexport const pageMaxFetchCount = 20\n","import Button from 'react-bootstrap/Button'\nimport useRipple from 'useripple'\n\nconst RippleButton = ({ onClick, children, className }) => {\n\n    const [addRipple, ripples] = useRipple({ background: 'black' })\n\n    return (\n        <Button variant=\"link\" onClick={(e) => {\n            onClick(e)\n        }}\n            onMouseDown={addRipple}\n            className={`button-ripple ${className}`}>\n            {children}\n            {ripples}\n        </Button>\n    )\n}\n\nexport default RippleButton","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const create = (body) => axios.post('playlists', body, { headers: authHeader() })\nexport const index = (id) => axios.get(`playlists/${id}`, { headers: authHeader() })\nexport const show = (params) => axios.get(`playlists`, { params, headers: authHeader() })\nexport const partialUpdate = (id, body) => axios.patch(`playlists/${id}`, body, { headers: authHeader() })\n\n\nexport const remove = (id) => axios.delete(`playlists/${id}`, { headers: authHeader() })\n\n","import Col  from \"react-bootstrap/Col\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useState } from \"react\"\nimport * as playlistApi from '../../services/playlistService'\nimport RippleButton from \"./rippleButton\"\n\nconst ChangePrivacyButton = ({ isPublic, id, isProfile, dispatchPrivacyUpdate, filmDispatch }) => {\n\n    const [isChanging, setIsChanging] = useState(false)\n\n\n    useEffect(() => {\n        async function changePrivacy() {\n            await playlistApi.partialUpdate(id, { is_public: !isPublic })\n                .then(res => {\n                    setIsChanging(false)\n\n                    dispatchPrivacyUpdate({\n                        type: 'change-playlist-privacy-success',\n                        payload: res.data\n                    })\n\n                    if (filmDispatch !== undefined) {\n                        filmDispatch({\n                            type: 'field',\n                            fieldName: 'reloadPlaylist',\n                            payload: true\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.error(err)\n                    setIsChanging(false)\n                })\n        }\n        if (isChanging) changePrivacy()\n    }, [dispatchPrivacyUpdate, isChanging, isPublic, id, filmDispatch])\n\n    const handleChangePrivacy = (e) => {\n        e.stopPropagation()\n        if (!isChanging) setIsChanging(true)\n    }\n\n    const privacyButton = (\n        <RippleButton\n            className=\"button-ripple-24 p-0\"\n            onClick={handleChangePrivacy}>\n            <FontAwesomeIcon icon={isPublic ? \"globe-europe\" : \"lock\"} />\n        </RippleButton>\n    )\n\n    return isProfile ?\n        (\n            <Col className=\"text-center justify-content-center d-flex align-items-center p-0 flex-grow-0\"\n            >\n                <Col\n                    className=\"remove-holder p-0 m-0 flex-grow-0\"\n                    style={{ height: '24px', width: '24' }}>\n                    {privacyButton}\n                </Col>\n            </Col>\n        ) :\n        privacyButton\n}\n\nexport default ChangePrivacyButton","import React from \"react\";\nconst useIntersectionObserver = ({\n  target,\n  onIntersect,\n  threshold = 0.1,\n  rootMargin = \"0px\"\n}) => {\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, {\n      rootMargin,\n      threshold\n    });\nconst current = target.current;\nobserver.observe(current);\nreturn () => {\n      observer.unobserve(current);\n    };\n  });\n};\nexport default useIntersectionObserver;","import { useState, useRef } from 'react';\nimport useIntersectionObserver from '../../helpers/hooks/useIntersectionObserver';\nimport \"./blurred.css\";\n\nconst Image = ({ src, thumb }) => {\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    return (\n        <div className=\"ratio ratio-16x9\">\n            <img\n                className=\"image thumb\"\n                alt=\"\"\n                src={thumb}\n                style={{ visibility: isLoaded ? \"hidden\" : \"visible\" }}\n            />\n            <img\n                onLoad={() => {\n                    setIsLoaded(true);\n                }}\n                className=\"image full\"\n                style={{ opacity: isLoaded ? 1 : 0 }}\n                alt=\"\"\n                src={src}\n            />\n        </div>\n    );\n}\nfunction BlurredImageComponent({ image }) {\n    const ref = useRef();\n    const [isVisible, setIsVisible] = useState(false);\n    \n    useIntersectionObserver({\n        target: ref,\n        onIntersect: ([{ isIntersecting }], observerElement) => {\n            if (isIntersecting) {\n                setIsVisible(true);\n                observerElement.unobserve(ref.current);\n            }\n        }\n    });\n\n    return (\n        <div\n            ref={ref}\n            className=\"image-container ratio ratio-16x9 play-image\"\n        >\n            {isVisible && (\n                <Image  src={image.concat('?width=small_webp')} thumb={image.concat('?width=preview_webp')} />\n            )}\n        </div>\n    );\n}\n\nexport default BlurredImageComponent;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport RippleButton from '../../helpers/components/rippleButton'\n\nconst RemoveButton = ({ handleRemove }) => {\n    return (\n        <RippleButton\n            className=\"button-ripple-24 remove-holder p-0\"\n            onClick={handleRemove}>\n            <FontAwesomeIcon icon=\"trash-alt\" />\n        </RippleButton>\n    )\n}\n\nexport default RemoveButton","export const checkIfPlaylistButtonClick = (target) => {\n    if ((target.tagName === 'path' && target.parentNode.className.animVal && target.parentNode.className.animVal.includes('playlist-add-icon')) ||\n        (target.tagName === 'svg' && target.className.animVal && target.className.animVal.includes('playlist-add-icon')) ||\n        (target.className && typeof target.className === 'string' && target.className.includes('playlist-add-icon-holder')))\n        return true\n    return false\n}\n\nexport const displayCommentDate = (comment) => {\n    let date = new Date(Date.parse(comment.createdAt));\n    let time = (('0' + date.getDate()).slice(-2) + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-'\n        + ('0' + date.getFullYear()).slice(-2)\n        + ' o ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2))\n    return time;\n};\n\nexport const parseSearchDate = (film) => {\n\n    let date = new Date(Date.parse(film.createdAt));\n    let today = new Date();\n\n\n    let time = Math.abs(Math.floor((\n        Date.UTC(\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes()) -\n        Date.UTC(\n            today.getFullYear(),\n            today.getMonth(),\n            today.getDate(),\n            today.getHours(),\n            today.getMinutes()))\n        / (1000 * 60)));\n\n    if (time / 60 >= 1) {\n        time /= 60;\n\n        if (time / 24 >= 1) {\n\n            time /= 24;\n\n            if (time / 30 >= 1) {\n\n                time /= 30;\n\n                if (time / 12 >= 1) {\n\n                    time = time / 12;\n                    time = Math.floor(time) + ' years ';\n\n                } else {\n                    time = Math.floor(time) + ' months ';\n                }\n\n            } else {\n                time = Math.floor(time) + ' days ';\n            }\n\n        } else {\n            time = Math.floor(time) + ' hours ';\n        }\n    } else {\n        time = Math.floor(time) + ' minutes ';\n    }\n\n    time = time + 'ago';\n\n    return time;\n};\n","import { playlistButtonMaxFetchCount } from \"../../../config\"\n\nexport const playlistDropdownMenuInitialState = {\n    playlists: [],\n    isLoading: true,\n    isAllFetched: false,\n    isCreating: false,\n    isAdding: false,\n    playlistToUpgrade: null,\n    title: '',\n    isPublic: false,\n    error: '',\n}\n\nexport function playlistDropdownMenuReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                error: '',\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'load': {\n            return {\n                ...state,\n                isLoading: true,\n                isAllFetched: false,\n            }\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                playlists: [...state.playlists, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < playlistButtonMaxFetchCount,\n                error: '',\n            }\n        }\n        case 'create': {\n            return {\n                ...state,\n                isLoading: false,\n                isCreating: true\n            }\n        }\n        case 'create-success': {\n            return {\n                ...state,\n                isLoading: false,\n                isCreating: false\n            }\n        }\n        case 'add': {\n            return {\n                ...state,\n                isLoading: false,\n                isAdding: true,\n                playlistToUpgrade: action.payload\n            }\n        }\n        case 'add-update-playlist': {\n            return {\n                ...state,\n                playlists: state.playlists.map(playlist => {\n                    if (playlist.id === state.playlistToUpgrade.id) return { ...playlist, contains: !playlist.contains }\n                    else return playlist\n                }),\n                playlistToUpgrade: null\n            }\n        }\n        case 'add-success': {\n            return {\n                ...state,\n                isAdding: false\n            }\n        }\n        case 'change-playlist-privacy-success': {\n            return {\n                ...state,\n                playlists: state.playlists.map(playlist => {\n                    if (playlist.id === action.payload.id) return { ...playlist, is_public: action.payload.is_public }\n                    return playlist\n                })\n            }\n        }\n        case 'error':\n            return {\n                ...state,\n                isLoading: false,\n                isAllFetched: false,\n                isCreating: false,\n                error: action.payload,\n                title: ''\n            }\n        default:\n            return state\n\n    }\n}\n","import React, { useCallback, useEffect, useContext, useReducer } from 'react';\nimport { Button, Col, Dropdown, Form, FormCheck, FormControl, Row, Spinner } from \"react-bootstrap\";\n\nimport * as userApi from '../../services/userService'\nimport * as playlistApi from '../../services/playlistService'\n\nimport ToastContext from '../../helpers/contexts/toast/toastContext';\nimport useBottomScrollListener from '../../helpers/hooks/useBottomScrollListener';\nimport { playlistDropdownMenuReducer, playlistDropdownMenuInitialState } from './reducers/playlistDropdownMenuReducer'\nimport ChangePrivacyButton from '../../helpers/components/changePrivacyButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { playlistButtonMaxFetchCount } from '../../config';\nimport RippleButton from '../../helpers/components/rippleButton';\n\nfunction PlaylistDropdownMenu({ filmID, handlePlaylistClose, isRecommendations, filmDispatch }) {\n\n\n    const { createToast } = useContext(ToastContext);\n    const [state, dispatch] = useReducer(playlistDropdownMenuReducer, playlistDropdownMenuInitialState);\n\n    const { playlists, title, isPublic, isLoading, isAllFetched, isCreating, isAdding, playlistToUpgrade, error } = state\n\n    const handleOnPlaylistDropdownMenuBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && !isCreating && !isAdding) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isCreating, isAdding])\n\n    const scrollRef = useBottomScrollListener(handleOnPlaylistDropdownMenuBottom);\n\n    useEffect(() => {\n        async function getMyPlaylists() {\n            await userApi.me({ playlists: true, skip: playlists.length, limit: playlistButtonMaxFetchCount })\n                .then(res => {\n\n                    let result = res.data.playlists\n\n                    result.forEach(playlist => {\n                        playlist.contains = playlist.films.indexOf(filmID) > -1\n                    });\n\n                    dispatch({\n                        type: 'load-success',\n                        payload: result\n                    })\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (isLoading) getMyPlaylists()\n\n    }, [filmID, playlists, isLoading])\n\n    useEffect(() => {\n\n        async function creatPlaylist() {\n            const body = { title: title, is_public: isPublic, films_id: [filmID] };\n\n            await playlistApi.create(body)\n                .then(res => {\n                    dispatch({\n                        type: 'create-success'\n                    })\n                    createToast(`Created playlist ${title}`)\n                    handlePlaylistClose()\n\n                })\n                .catch(err => {\n                    console.error(err)\n                    let errorMessage = null\n\n                    if (err.response && err.response.data && err.response.data.error) {\n                        errorMessage = err.response.data.error\n                    } else if (err.response && err.response.data && err.response.data.errors) {\n                        errorMessage = err.response.data.errors[0]\n                    }\n\n                    dispatch({\n                        type: 'error',\n                        payload: errorMessage === \"Path `title` is required.\" ? 'Playlist title is required' : errorMessage\n                    })\n                })\n        }\n\n        if (isCreating) creatPlaylist()\n\n    }, [isCreating, title, isPublic, createToast, handlePlaylistClose, filmID,])\n\n    useEffect(() => {\n        async function addToPlaylist() {\n\n            let body = { films_id: [filmID] };\n\n            body = playlistToUpgrade.contains ? { ...body, is_remove_films: true } : { ...body, is_remove_films: false }\n\n            const message = playlistToUpgrade.contains ? `Deleted from playlist ${playlistToUpgrade.title}` : `Added to playlist ${playlistToUpgrade.title}`\n\n            dispatch({\n                type: 'add-update-playlist',\n                playlist: playlistToUpgrade\n            })\n\n            await playlistApi.partialUpdate(playlistToUpgrade.id, body)\n                .then(res => {\n                    dispatch({\n                        type: 'add-success'\n                    })\n\n                    if (isRecommendations) {\n                        filmDispatch({\n                            type: 'field',\n                            fieldName: 'reloadPlaylist',\n                            payload: true\n                        })\n                    }\n                    createToast(message)\n                })\n                .catch(err => console.error(err))\n        }\n        if (isAdding && playlistToUpgrade) addToPlaylist()\n    }, [isAdding, playlistToUpgrade, createToast, filmDispatch, filmID, isRecommendations])\n\n    const handleAddToPlaylist = (playlist) => {\n        dispatch({\n            type: 'add',\n            payload: playlist\n        })\n    };\n\n    const handleCreatePlaylist = (e) => {\n        e.stopPropagation()\n        dispatch({\n            type: 'create'\n        })\n    };\n\n    return (\n\n        <Dropdown.Menu\n            onClick={e => e.stopPropagation()}\n            style={{ width: 240 + \"px\", left: '50px !important' }}>\n            <Row className=\"m-0 m-button button-ripple\" >\n                <Col className=\"playlist-add-exit-text-width\">Save to...</Col>\n                <RippleButton className=\"button-ripple-24 playlist-add-icon-holder p-0 d-flex align-items-center text-center justify-content-center\"\n                    onClick={() => setTimeout(handlePlaylistClose, 150)}>\n                    <FontAwesomeIcon icon=\"times\" />\n                </RippleButton>\n            </Row>\n            <Dropdown.Divider />\n            <div\n                ref={scrollRef}\n                style={{\n                    maxHeight: 100 + 'px', overflowY: 'scroll', minHeight: 3 + 'rem'\n                }}>\n\n                {\n                    playlists.map((playlist, index) => {\n                        return (<Row className=\"m-0 playlist-form-group\" key={playlist.id} >\n                            <Col xs={10} sm={10} className=\"p-0\">\n                                <Form.Check id={playlist.id} className=\"form-check\">\n                                    <FormCheck.Input type=\"checkbox\"\n                                        onChange={() => handleAddToPlaylist(playlist)}\n                                        checked={playlist.contains} />\n                                    <FormCheck.Label>\n                                        <p className=\"playlist-check-label\">\n                                            {playlist.title}\n                                        </p>\n                                    </FormCheck.Label>\n                                </Form.Check>\n\n                            </Col>\n                            <ChangePrivacyButton\n                                id={playlist.id}\n                                isPublic={playlist.is_public}\n                                isProfile={false}\n                                filmDispatch={filmDispatch}\n                                dispatchPrivacyUpdate={dispatch} />\n\n                        </Row>)\n                    })\n                }\n\n                {\n                    !isAllFetched && <div style={{\n                        height: 3 + 'rem'\n                    }}\n                        className=\"fetch-spinner d-flex justify-content-center align-items-center\">\n                        {isLoading && <Spinner animation=\"border\" />}\n                    </div>\n                }\n            </div>\n            <Dropdown.Divider />\n            <Dropdown.ItemText>Create a new playlist</Dropdown.ItemText>\n            <Row className=\"m-0 p-0\">\n                <Form>\n                    <FormControl\n                        isInvalid={error !== ''}\n                        onChange={(e) => dispatch({ type: 'field', fieldName: 'title', payload: e.target.value })}\n                        className=\"mb-2 mt-2\"\n                        placeholder=\"Enter playlist title...\" />\n\n                    <FormControl.Feedback type=\"invalid\"\n                        className=\"mb-2 mt-2\">\n                        {error}\n                    </FormControl.Feedback>\n                    <Form.Select aria-label=\"Privacy\" className=\"mb-2 mt-2\"\n                        onChange={(e) => dispatch({ type: 'field', fieldName: 'isPublic', payload: e.target.value === 'public' })}>\n                        <option value=\"private\">Private</option>\n                        <option value=\"public\">Public</option>\n                    </Form.Select>\n\n                    <Form.Group className=\"d-flex align-items-center mt-2\">\n                        <Button disabled={isCreating}\n                            onClick={isCreating ? null : handleCreatePlaylist}>Create</Button>\n\n                        {\n                            isCreating &&\n                            <Spinner className=\"ms-2\" animation=\"grow\" />\n                        }\n                    </Form.Group>\n\n                </Form>\n\n            </Row>\n\n        </Dropdown.Menu >\n\n\n    )\n}\n\nexport default PlaylistDropdownMenu\n","import React, { useState, useContext } from 'react';\nimport { Col, Dropdown } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport PlaylistDropdownMenu from './playlistDropdownMenu'\nimport UserContext from '../../helpers/contexts/user/userContext';\nimport useRipple from \"useripple\"\n\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\n\nimport './playlistAdd.css'\n\nfunction PlaylistAddButton(props) {\n\n    const { user } = useContext(UserContext);\n\n    const [addRipple, ripples] = useRipple({ background: \"black\" })\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const handlePlaylistClose = () => {\n        setIsOpen(false)\n    }\n\n    const allClass = \"\"\n    const previewClass = \"col-sm-2 col-2 p-0\"\n\n    return (\n\n        user.auth ?\n            <Dropdown show={isOpen}\n                onToggle={(isOpen, event, metadata) => {\n                    setIsOpen(isOpen)\n                }} className={props.isRecommendations ? previewClass : allClass} >\n                <Dropdown.Toggle variant=\"link\" bsPrefix=\"p-0\"\n                    className=\"m-button button-ripple\"\n                    style={{ color: \"black\" }}>\n                    <div style={{ display: 'inline-block', width: '100%', height: '100%' }}>\n                        <Col\n                            onClick={addRipple}\n                            className=\"playlist-add-icon-holder p-0 button-ripple button-ripple-24\">\n                            <FontAwesomeIcon style={{ opacity: (isOpen ? 1 : \"\") }}\n                                className=\"playlist-add-icon\" icon={faEllipsisV} />\n                            {ripples}\n                        </Col>\n                    </div>\n                </Dropdown.Toggle>\n                {isOpen && <PlaylistDropdownMenu\n                    isRecommendations={props.isRecommendations}\n                    filmDispatch={props.filmDispatch}\n                    isOpen={isOpen}\n                    filmID={props.filmID}\n                    handlePlaylistClose={handlePlaylistClose} />}\n            </Dropdown>\n            :\n            null\n\n    )\n}\n\nexport default PlaylistAddButton\n","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TextTruncate from \"react-text-truncate\";\n\nimport BlurredImageComponent from \"../../components/blurredImage\";\nimport PlaylistAddButtonComponent from \"../../components/add/playlistAddButton\";\n\nimport { checkIfPlaylistButtonClick } from '../index'\nimport RemoveButton from './removeButton';\nimport '../../components/filmPage/film.css'\n\nconst Film = ({ film, index, handleRedirect, handleRemove, isProfile, isRecommendations, filmDispatch }) => {\n\n    const recommendationsClass = \"row mx-0 mb-4\"\n    const normalClass = \"col mb-5 col-12 col-sm-6 col-md-3 col-lg-2\"\n\n    return (\n        <div className={isRecommendations ? recommendationsClass : normalClass}>\n            <div className={(isRecommendations ? \"row p-0 m-0\" : \"col\").concat(\" play-outer-container remove-container\")}\n                onClick={(e) => {\n                    const isPlaylistButton = checkIfPlaylistButtonClick(e.target)\n                    if (!isPlaylistButton) handleRedirect(film.id)\n                }}>\n                <Col xs={isRecommendations ? 6 : 12} sm={isRecommendations ? 6 : 12}\n                    className=\"m-0 p-0\">\n                    <div\n                        className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                        <BlurredImageComponent\n                            image={film.img} />\n                        <FontAwesomeIcon className=\"play-middle\" icon=\"play\" />\n                    </div>\n                </Col>\n                <Col xs={isRecommendations ? 6 : 12} sm={isRecommendations ? 6 : 12}\n                    className={isRecommendations ? \"m-0\" : \"m-0 p-0\"}>\n                    <Row className=\"m-0 mt-1\">\n                        <Col className=\"film-preview-playlist-title-width p-0\">\n                            <TextTruncate line={1} text={film.title}\n                                className=\"mb-1 mt-1 title \" />\n                        </Col>\n\n                        <Col className=\"p-0 d-flex justify-content-end\">\n                            {\n                                isProfile ?\n                                    <RemoveButton handleRemove={handleRemove} /> :\n                                    <PlaylistAddButtonComponent\n                                        isRecommendations={isRecommendations}\n                                        filmDispatch={filmDispatch}\n                                        index={index}\n                                        filmID={film.id} />\n                            }\n                        </Col>\n                    </Row>\n                    <p className=\"mb-0 author-nick-color\">\n                        <small>{film.author_name}</small>\n                    </p>\n                    <p className=\"mb-0 film-views\">\n                        <small>{film.views} views</small>\n                    </p>\n                </Col>\n            </div>\n        </div>\n    )\n}\n\nexport default Film","import React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TextTruncate from \"react-text-truncate\";\nimport BlurredImageComponent from \"../../components/blurredImage\";\nimport RemoveButton from './removeButton';\nimport ChangePrivacyButton from './changePrivacyButton';\n\nconst Playlist = ({ playlist, handleRedirect, handleRemove, isProfile, dispatchPrivacyUpdate }) => {\n\n    const colWidth = isProfile ? 8 : 10\n\n    const [style, setStyle] = useState(\"mb-5 play-outer-container remove-container\")\n\n    useEffect(() => {\n        if (!playlist.film_id) setStyle(\"mb-5 play-cursor-default remove-container\")\n    }, [playlist.film_id])\n\n\n    return (\n        <Col xs={12} sm={6} md={3} lg={2}\n            key={playlist.id}>\n            <Col className={style} onClick={() => handleRedirect(playlist.id, playlist.film_id)}>\n                <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                    <BlurredImageComponent\n                        image={playlist.img} />\n\n                    <Row style={{ width: '100%', margin: 0 }} className=\"play-middle\">\n                        <Col xs={5} sm={5} style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                            <FontAwesomeIcon icon=\"play\" />\n                        </Col>\n                        <Col xs={7} sm={7} style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }}>\n                            <small className=\"fw-bold\" >Play all</small>\n                        </Col>\n                    </Row>\n                </div>\n\n                <Row className=\"m-0 mt-1\">\n                    <Col xs={colWidth} sm={colWidth} className=\"p-0\">\n                        <TextTruncate line={1} text={playlist.title}\n                            className=\"mb-1 mt-1 title \" />\n                    </Col>\n\n\n                    {\n                        isProfile && <Col xs={4} sm={4} className=\"p-0 d-flex justify-content-end\">\n                            <ChangePrivacyButton\n                                id={playlist.id}\n                                isPublic={playlist.is_public}\n                                isProfile={true}\n                                dispatchPrivacyUpdate={dispatchPrivacyUpdate} />\n                            <RemoveButton handleRemove={handleRemove} />\n                        </Col>\n                    }\n                </Row>\n                <p className=\"mb-0 author-nick-color\">\n                    <small>{playlist.author_name}</small>\n                </p>\n            </Col>\n        </Col>\n\n    )\n}\n\nexport default Playlist","export default __webpack_public_path__ + \"static/media/image_not_found.c4ba1e76.png\";","import { pageMaxFetchCount } from \"../../config\"\n\nexport const initialProfileState = {\n    data: [],\n    isLoading: false,\n    isAllFetched: false,\n    isRemoving: false,\n    toRemove: null,\n    error: null,\n    filmsCount: 0,\n    playlistsCount: 0,\n}\n\nexport function profileReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                isLoading: false,\n                isInitialLoaded: true,\n                isAllFetched: action.filmsCount < pageMaxFetchCount && action.playlistsCount < pageMaxFetchCount,\n                filmsCount: state.filmsCount + action.filmsCount,\n                playlistsCount: state.playlistsCount + action.playlistsCount,\n                data: [...new Set(action.data)]\n            }\n        }\n        case 'load': {\n            return !state.isLoading && !state.isAllFetched && state.isInitialLoaded && !state.error ?\n                { ...state, isLoading: true, isAllFetched: false } :\n                state\n        }\n        case 'success': {\n            return {\n                ...state,\n                isLoading: false,\n                isAllFetched: action.filmsCount < pageMaxFetchCount && action.playlistsCount < pageMaxFetchCount,\n                filmsCount: state.filmsCount + action.filmsCount,\n                playlistsCount: state.playlistsCount + action.playlistsCount,\n                data: [...new Set([...state.data, ...action.data])]\n            }\n        }\n        case 'remove': {\n            return {\n                ...state,\n                toRemove: action.payload,\n                isRemoving: true\n            }\n        }\n        case 'remove-success': {\n            return {\n                ...state,\n                isRemoving: false,\n                toRemove: null,\n                data: state.toRemove ? state.data.filter(resource => resource.id !== state.toRemove.id) : state.data\n            }\n        }\n        case 'change-playlist-privacy-success': {\n            return {\n                ...state,\n                data: state.data.map(data => {\n                    if (data.isPlaylist && data.id === action.payload.id) return { ...data, is_public: action.payload.is_public }\n                    return data\n                })\n            }\n        }\n        case 'clear': {\n            return initialProfileState\n        }\n        default: return state\n    }\n}","import React, { useEffect, useReducer, useCallback, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Spinner } from 'react-bootstrap';\n\nimport { initialProfileState, profileReducer } from './reducer';\nimport useBottomScrollListener from '../../helpers/hooks/useBottomScrollListener';\n\nimport Film from '../../helpers/components/film';\nimport Playlist from '../../helpers/components/playlist';\n\nimport * as userApi from '../../services/userService'\nimport * as playlistApi from '../../services/playlistService'\nimport * as filmApi from '../../services/filmService'\n\nimport image_not_found from '../../images/image_not_found.png'; // Tell Webpack this JS file uses this image\nimport RemoveModalContext from '../../helpers/contexts/removeModal/removeModalContext';\nimport UserContext from '../../helpers/contexts/user/userContext';\nimport { pageInitialMaxFetchCount, pageMaxFetchCount } from '../../config';\n\nconst Profile = (props) => {\n\n    const { user, clearUser } = useContext(UserContext)\n\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\n\n    let history = useHistory()\n\n    const [state, dispatch] = useReducer(profileReducer, initialProfileState)\n    const { data, isLoading, isAllFetched, isInitialLoaded, error, isRemoving, toRemove, filmsCount, playlistsCount } = state\n\n    const handleProfileOnBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded && !error) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded, error])\n\n    useBottomScrollListener(handleProfileOnBottom, { triggerOnNoScroll: true })\n\n    useEffect(() => {\n        if (!user.auth && user.isInitialLoaded) {\n            history.replace(`${process.env.REACT_APP_PATH_NAME}`)\n            history.push(`${process.env.REACT_APP_PATH_NAME}login`)\n            clearUser()\n        }\n    }, [user, history, clearUser])\n\n    useEffect(() => {\n        async function fetchInitialData() {\n\n            const [response] = await Promise.allSettled([\n                userApi.me({ skipFilms: 0, skipPlaylists: 0, limit: pageInitialMaxFetchCount })\n            ])\n\n            let data = []\n\n            let films = []\n            let playlists = []\n\n            if (response.status === \"fulfilled\") {\n                films = response.value.data.films.map(film => {\n                    return {\n                        ...film,\n                        img: `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`,\n\n                    }\n                })\n\n                playlists = response.value.data.playlists.map(playlist => {\n                    const image = playlist.film_id ?\n                        `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail` :\n                        image_not_found\n                    return {\n                        ...playlist,\n                        img: image,\n                        isPlaylist: true\n\n                    }\n                })\n\n                data = [...data, ...films, ...playlists]\n            }\n\n            dispatch({\n                type: 'initial-success',\n                data: data,\n                filmsCount: films.length,\n                playlistsCount: playlists.length,\n            })\n        }\n\n        dispatch({ type: 'clear' })\n        fetchInitialData()\n\n    }, [])\n\n    useEffect(() => {\n        async function fetchData() {\n            const [response] = await Promise.allSettled([\n                userApi.me({ skipFilms: filmsCount, skipPlaylists: playlistsCount, limit: pageMaxFetchCount })\n            ])\n\n            let data = []\n\n            let films = []\n            let playlists = []\n\n            if (response.status === \"fulfilled\") {\n                films = response.value.data.films.map(film => {\n                    return {\n                        ...film,\n                        img: `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`,\n\n                    }\n                })\n\n                playlists = response.value.data.playlists.map(playlist => {\n                    const image = playlist.film_id ?\n                        `${process.env.REACT_APP_API_URL}films/${playlist.film_id}/thumbnail` :\n                        image_not_found\n                    return {\n                        ...playlist,\n                        img: image,\n                        isPlaylist: true\n\n                    }\n                })\n\n                data = [...data, ...films, ...playlists]\n            }\n\n            dispatch({\n                type: 'success',\n                data: data,\n                filmsCount: films.length,\n                playlistsCount: playlists.length,\n            })\n        }\n\n        if (isLoading && isInitialLoaded) fetchData()\n    }, [filmsCount, isLoading, playlistsCount, isInitialLoaded])\n\n    useEffect(() => {\n        async function remove() {\n\n            try {\n                if (toRemove.isPlaylist) {\n                    const resPlaylist = await playlistApi.remove(toRemove.id)\n                    if (resPlaylist.status === 204) {\n                        dispatch({\n                            type: 'remove-success'\n                        })\n                        clear()\n                    }\n                } else {\n                    const resFilm = await filmApi.remove(toRemove.id)\n                    if (resFilm.status === 204) {\n                        dispatch({\n                            type: 'remove-success'\n                        })\n                        clear()\n                    }\n                }\n            } catch (err) {\n                console.error(err)\n            }\n        }\n        if (isRemoving && removeModalData.isRemoving && toRemove &&\n            removeModalData.id === toRemove.id && removeModalData.title === toRemove.title &&\n            removeModalData.type === (toRemove.isPlaylist ? 'playlist' : 'film')) remove()\n    }, [isRemoving, removeModalData, toRemove, clear])\n\n    const handleRemove = (e, resource) => {\n        e.stopPropagation()\n        if (removeModalData.isRemoving) return\n        dispatch({\n            type: 'remove',\n            payload: resource\n        })\n        showModal(resource.id, resource.isPlaylist ? 'playlist' : 'film', resource.title)\n    };\n\n    const handleRedirectFilm = (id) => {\n        history.push({ pathname: `${process.env.REACT_APP_PATH_NAME}film/` + id });\n    }\n\n    const handleRedirectPlaylist = (record) => {\n        if (!record.film_id) return\n        history.push({\n            pathname: `${process.env.REACT_APP_PATH_NAME}film/` + record.film_id,\n            search: `?list=${record.id}`\n        });\n    }\n\n    return (\n        <Row className=\"mt-5 mx-2\">\n            {\n                data.map((record, index) => {\n                    if (record.isPlaylist) {\n                        return <Playlist key={record.id}\n                            playlist={record} index={index}\n                            isProfile={true}\n                            dispatchPrivacyUpdate={dispatch}\n                            handleRedirect={() => handleRedirectPlaylist(record)}\n                            handleRemove={(e) => handleRemove(e, record)} />\n                    } else {\n                        return <Film key={record.id} isProfile={true}\n                            film={record} index={index}\n                            handleRedirect={() => handleRedirectFilm(record.id)}\n                            handleRemove={(e) => handleRemove(e, record)} />\n                    }\n                })\n            }\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {\n                        (isLoading) &&\n                        <Spinner animation=\"border\" />\n                    }\n                </div>\n            }\n        </Row>\n    )\n}\n\n\nexport default Profile\n"],"sourceRoot":""}