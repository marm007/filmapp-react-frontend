{"version":3,"sources":["components/dialogs/login/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/models/input/index.js","components/dialogs/reducer.js"],"names":["Login","login","useContext","UserContext","history","useHistory","location","useLocation","useReducer","authReducer","authInitialState","state","dispatch","email","password","isSubmitted","isSending","isError","error","useEffect","a","authApi","then","res","data","user","name","id","token","refreshToken","pathname","slice","process","replace","search","catch","err","errorMessage","response","errors","type","payload","console","sendData","title","onClose","goBack","onSubmit","e","preventDefault","className","htmlFor","isInvalid","value","onChange","fieldName","target","disabled","onClick","setTimeout","push","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","Input","placeholder","InputTag","inputRef","useRef","current","classList","add","remove","ref","nick","isSuccess","action"],"mappings":"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","file":"static/js/12.168e6413.chunk.js","sourcesContent":["import React, { useEffect, useContext, useReducer } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport Modal from '../../models/modal';\r\nimport Input from '../../models/input';\r\n\r\nimport * as authApi from '../../../services/authService'\r\n\r\nimport UserContext from '../../../helpers/contexts/user/userContext'\r\nimport { authInitialState, authReducer } from '../reducer';\r\n\r\nconst Login = () => {\r\n\r\n    const { login } = useContext(UserContext);\r\n\r\n    let history = useHistory()\r\n    let location = useLocation()\r\n\r\n    const [state, dispatch] = useReducer(authReducer, authInitialState)\r\n    const { email, password, isSubmitted, isSending, isError, error } = state\r\n\r\n    useEffect(() => {\r\n        async function sendData() {\r\n            await authApi.login({ email, password })\r\n                .then(res => {\r\n                    login(res.data.user.name, res.data.user.id, res.data.token, res.data.refreshToken)\r\n                    //history.replace(location.pathname.slice(0, -6))\r\n\r\n                    let pathname = location.pathname.slice(0, -6)\r\n                    if (pathname === '') pathname = process.env.REACT_APP_PATH_NAME\r\n\r\n                    history.replace({\r\n                        pathname: pathname,\r\n                        search: location.search,\r\n                        state: location.state\r\n                    })\r\n\r\n                    //if (!location.state) {\r\n                    // history.goBack();\r\n                    //} else {\r\n                    //   history.replace(location.state.from)\r\n                    //}\r\n                })\r\n                .catch(err => {\r\n                    let errorMessage = null;\r\n\r\n                    if (err.response && err.response.data && err.response.data.errors)\r\n                        errorMessage = err.response.data.errors;\r\n\r\n                    dispatch({\r\n                        type: 'error',\r\n                        payload: errorMessage\r\n                    })\r\n\r\n                    console.error(err)\r\n                })\r\n        }\r\n        if (isSending) sendData()\r\n    }, [isSending, email, password, history, location, login])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch({ type: 'submit' })\r\n\r\n        if (email && password) {\r\n            dispatch({ type: 'send' })\r\n        }\r\n    }\r\n\r\n    const handleForgotPassword = () => {\r\n        history.goBack();\r\n\r\n        setTimeout(function () {\r\n            history.push(`${location.pathname.slice(0, -5)}forgot${location.search}`);\r\n        }, 500);\r\n    };\r\n\r\n    const modalClose = () => {\r\n        //if (!location.state) {\r\n            history.goBack();\r\n        //} else {\r\n        //    history.push(process.env.REACT_APP_PATH_NAME)\r\n        //}\r\n    };\r\n\r\n    const handleRegister = () => {\r\n        history.goBack();\r\n\r\n        setTimeout(function () {\r\n            history.push(`${location.pathname.slice(0, -5)}register${location.search}`);\r\n        }, 500);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal id=\"loginModal\" title=\"Login\" onClose={modalClose}>\r\n\r\n            <form onSubmit={isSending ? null : handleSubmit}>\r\n                <div>\r\n                    <label className=\"form-label\" htmlFor=\"email\">Email</label>\r\n                    <Input isInvalid={isSubmitted && !email} type=\"email\" name=\"email\" value={email}\r\n                        onChange={e => dispatch({ type: 'field', fieldName: 'email', payload: e.target.value })} />\r\n                    <div className=\"invalid-feedback\">\r\n                        Email is required\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mt-2\">\r\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\r\n                    <Input isInvalid={isSubmitted && !password} type=\"password\" name=\"password\"\r\n                        value={password} onChange={e => dispatch({ type: 'field', fieldName: 'password', payload: e.target.value })} />\r\n                    <div className=\"invalid-feedback\">\r\n                        Password is required\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"d-flex align-items-center mt-2\">\r\n                    <button disabled={isSending} type=\"submit\" className=\"btn btn-primary\">\r\n                        Login\r\n                    </button>\r\n                    {\r\n                        isSending &&\r\n                        <div className=\"spinner-grow ml-2\" />\r\n                    }\r\n                </div>\r\n            </form>\r\n\r\n            {\r\n                isError &&\r\n                <div className=\"alert-danger mt-2 mb-0\">\r\n                    {error ? error : 'Error while logging in.'}\r\n                </div>\r\n            }\r\n\r\n            <button onClick={handleRegister} className=\"p-0 mt-2 btn btn-link\">Register</button>\r\n\r\n            <div className=\"col-12 col-sm-12 p-0 m-0 \">\r\n                <button type=\"button\" onClick={handleForgotPassword} className=\"p-0 mt-2 btn btn-link\">Forgot password?</button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default Login","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useEffect, useRef } from \"react\"\r\n\r\nconst Input = ({ isInvalid, onChange, type, name, value, placeholder = '' }) => {\r\n\r\n    const InputTag = type === 'textarea' ? 'textarea' : 'input'\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        let ref = inputRef.current\r\n        if (ref) {\r\n            if (isInvalid) inputRef.current.classList.add('is-invalid')\r\n            else inputRef.current.classList.remove('is-invalid')\r\n        }\r\n    }, [isInvalid])\r\n\r\n    return (\r\n        <InputTag ref={inputRef} className=\"form-control\"\r\n            placeholder={placeholder}\r\n            type={type} name={name}\r\n            value={value} onChange={onChange} />\r\n    )\r\n}\r\n\r\nexport default Input","\r\nexport const authInitialState = {\r\n    email: '',\r\n    nick: '',\r\n    password: '',\r\n    isSubmitted: false,\r\n    isSending: false,\r\n    isSuccess: false,\r\n    isError: false,\r\n    error: null\r\n}\r\n\r\nexport const authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'field': {\r\n            return {\r\n                ...state,\r\n                isSubmitted: false,\r\n                [action.fieldName]: action.payload\r\n            }\r\n        }\r\n        case 'submit': {\r\n            return {\r\n                ...state,\r\n                isError: false,\r\n                error: null,\r\n                isSubmitted: true\r\n            }\r\n        }\r\n        case 'send': {\r\n            return {\r\n                ...state,\r\n                isSending: true\r\n            }\r\n        }\r\n        case 'success': {\r\n            return {\r\n\r\n                ...state,\r\n                isError: false,\r\n                error: null,\r\n                isSending: false,\r\n                isSuccess: true\r\n            }\r\n        }\r\n        case 'error': {\r\n            return {\r\n                ...state,\r\n                isSending: false,\r\n                isError: true,\r\n                error: action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}"],"sourceRoot":""}