{"version":3,"sources":["components/dialogs/resetPassword/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/models/input/index.js","components/dialogs/reducer.js"],"names":["ResetPassword","props","history","useHistory","useReducer","authReducer","authInitialState","state","dispatch","password","isSubmitted","isSending","isSuccess","isError","error","useEffect","a","authApi","match","params","token","then","res","type","setTimeout","push","process","catch","err","errorMessage","response","data","errors","payload","sendData","id","title","onClose","onSubmit","e","preventDefault","length","className","htmlFor","isInvalid","name","value","onChange","fieldName","target","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","Input","placeholder","InputTag","inputRef","useRef","current","classList","add","remove","ref","email","nick","action"],"mappings":"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","file":"static/js/14.00110a62.chunk.js","sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Modal from '../../models/modal';\r\nimport Input from '../../models/input';\r\n\r\nimport { authInitialState, authReducer } from '../reducer';\r\n\r\nimport * as authApi from '../../../services/authService'\r\n\r\nconst ResetPassword = (props) => {\r\n\r\n    let history = useHistory()\r\n\r\n    const [state, dispatch] = useReducer(authReducer, authInitialState)\r\n\r\n    const { password, isSubmitted, isSending, isSuccess, isError, error } = state\r\n\r\n    useEffect(() => {\r\n        async function sendData() {\r\n            await authApi.reset(props.match.params.token, { password: password })\r\n                .then(res => {\r\n                    dispatch({\r\n                        type: 'success'\r\n                    })\r\n\r\n                    setTimeout(function () {\r\n                        history.push(`${process.env.REACT_APP_PATH_NAME}`);\r\n                        setTimeout(function () {\r\n                            history.push(`${process.env.REACT_APP_PATH_NAME}login`);\r\n                        }, 500);\r\n                    }, 1500);\r\n\r\n                })\r\n                .catch(err => {\r\n                    let errorMessage = null;\r\n\r\n                    if (err.response && err.response.data && err.response.data.errors)\r\n                        errorMessage = err.response.data.errors;\r\n\r\n                    dispatch({\r\n                        type: 'error',\r\n                        payload: errorMessage\r\n                    })\r\n\r\n                })\r\n        }\r\n\r\n        if (isSending) sendData()\r\n\r\n    }, [isSending, history, password, props.match.params.token])\r\n\r\n    const handleSubmitPasswordChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch({\r\n            type: 'submit'\r\n        })\r\n\r\n        if (props.match.params.token && password && password.length >= 6) {\r\n            dispatch({ type: 'send' })\r\n        }\r\n    }\r\n\r\n    const modalClose = () => {\r\n        history.push(`${process.env.REACT_APP_PATH_NAME}`);\r\n    };\r\n\r\n    return (\r\n\r\n        <Modal id=\"resetPasswordModal\" title=\"Reset\" onClose={modalClose}>\r\n            <form onSubmit={handleSubmitPasswordChange}>\r\n                <div>\r\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\r\n                    <Input isInvalid={isSubmitted && (password.length < 6)}\r\n                        type=\"password\" name=\"password\" value={password}\r\n                        onChange={e => dispatch({ type: 'field', fieldName: 'password', payload: e.target.value })} />\r\n                    <div className=\"invalid-feedback\">\r\n                        {\r\n                            password.length === 0 ? \"Password is required\" : \"Password too short (min 6 chars)\"\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    isSuccess &&\r\n                    <div className=\"alert alert-success mt-2\">\r\n                        Password has been reseated! Redirecting to login page.\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    isError &&\r\n                    <div className=\"alert alert-danger mt-2\">\r\n                        {error ? error : 'Error while resetting password.'}\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"d-flex align-items-center mt-2\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Reset password\r\n                    </button>\r\n\r\n                    {\r\n                        isSending &&\r\n                        <div className=\"spinner-grow ml-2\" />\r\n                    }\r\n                </div>\r\n            </form>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default ResetPassword","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useEffect, useRef } from \"react\"\r\n\r\nconst Input = ({ isInvalid, onChange, type, name, value, placeholder = '' }) => {\r\n\r\n    const InputTag = type === 'textarea' ? 'textarea' : 'input'\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        let ref = inputRef.current\r\n        if (ref) {\r\n            if (isInvalid) inputRef.current.classList.add('is-invalid')\r\n            else inputRef.current.classList.remove('is-invalid')\r\n        }\r\n    }, [isInvalid])\r\n\r\n    return (\r\n        <InputTag ref={inputRef} className=\"form-control\"\r\n            placeholder={placeholder}\r\n            type={type} name={name}\r\n            value={value} onChange={onChange} />\r\n    )\r\n}\r\n\r\nexport default Input","\r\nexport const authInitialState = {\r\n    email: '',\r\n    nick: '',\r\n    password: '',\r\n    isSubmitted: false,\r\n    isSending: false,\r\n    isSuccess: false,\r\n    isError: false,\r\n    error: null\r\n}\r\n\r\nexport const authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'field': {\r\n            return {\r\n                ...state,\r\n                isSubmitted: false,\r\n                [action.fieldName]: action.payload\r\n            }\r\n        }\r\n        case 'submit': {\r\n            return {\r\n                ...state,\r\n                isError: false,\r\n                error: null,\r\n                isSubmitted: true\r\n            }\r\n        }\r\n        case 'send': {\r\n            return {\r\n                ...state,\r\n                isSending: true\r\n            }\r\n        }\r\n        case 'success': {\r\n            return {\r\n\r\n                ...state,\r\n                isError: false,\r\n                error: null,\r\n                isSending: false,\r\n                isSuccess: true\r\n            }\r\n        }\r\n        case 'error': {\r\n            return {\r\n                ...state,\r\n                isSending: false,\r\n                isError: true,\r\n                error: action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}"],"sourceRoot":""}