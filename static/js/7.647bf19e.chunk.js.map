{"version":3,"sources":["config/index.js","helpers/components/rippleButton.js","services/playlistService.js","helpers/components/changePrivacyButton.js","helpers/hooks/useIntersectionObserver.js","components/blurredImage/index.js","helpers/components/removeButton.js","helpers/index.js","components/add/reducers/playlistDropdownMenuReducer.js","components/add/playlistDropdownMenu.js","components/add/playlistAddButton.js","helpers/components/film.js","images/image_not_found.png","helpers/contexts/film/filmContext.js","components/filmPage/reducers/previewReducer.js","components/filmPage/preview.js","components/filmPage/reducers/recommendationsReducer.js","components/filmPage/recommendations.js","services/commentService.js","components/filmPage/reducers/commentsReducer.js","components/filmPage/comments.js","components/filmPage/reducers/playlistReducer.js","components/filmPage/playlist.js","helpers/contexts/film/filmProvider.js","components/filmPage/index.js"],"names":["commentsMaxFetchCount","recommendationsMaxFetchCount","playlistButtonMaxFetchCount","pageInitialMaxFetchCount","pageMaxFetchCount","RippleButton","onClick","children","className","useRipple","background","addRipple","ripples","variant","e","onMouseDown","create","body","axios","post","headers","authHeader","index","id","get","show","params","partialUpdate","patch","remove","delete","ChangePrivacyButton","isPublic","isProfile","dispatchPrivacyUpdate","filmDispatch","useState","isChanging","setIsChanging","useEffect","a","playlistApi","is_public","then","res","type","payload","data","undefined","fieldName","catch","err","console","error","changePrivacy","privacyButton","stopPropagation","icon","style","height","width","useIntersectionObserver","target","onIntersect","threshold","rootMargin","React","observer","IntersectionObserver","current","observe","unobserve","Image","src","thumb","isLoaded","setIsLoaded","alt","visibility","onLoad","opacity","BlurredImageComponent","image","ref","useRef","isVisible","setIsVisible","observerElement","isIntersecting","concat","RemoveButton","handleRemove","checkIfPlaylistButtonClick","tagName","parentNode","animVal","includes","displayCommentDate","comment","date","Date","parse","createdAt","getDate","slice","getMonth","getFullYear","getHours","getMinutes","parseSearchDate","film","today","time","Math","abs","floor","UTC","playlistDropdownMenuInitialState","playlists","isLoading","isAllFetched","isCreating","isAdding","playlistToUpgrade","title","playlistDropdownMenuReducer","state","action","length","map","playlist","contains","PlaylistDropdownMenu","filmID","handlePlaylistClose","isRecommendations","createToast","useContext","ToastContext","useReducer","dispatch","handleOnPlaylistDropdownMenuBottom","useCallback","scrollRef","useBottomScrollListener","userApi","skip","limit","result","forEach","films","indexOf","getMyPlaylists","films_id","errorMessage","response","errors","creatPlaylist","is_remove_films","message","addToPlaylist","Dropdown","Menu","left","Row","Col","setTimeout","Divider","maxHeight","overflowY","minHeight","xs","sm","Form","Check","FormCheck","Input","onChange","handleAddToPlaylist","checked","Label","Spinner","animation","ItemText","FormControl","isInvalid","value","placeholder","Feedback","Select","Group","Button","disabled","PlaylistAddButton","props","user","UserContext","isOpen","setIsOpen","auth","onToggle","event","metadata","Toggle","bsPrefix","color","display","faEllipsisV","Film","handleRedirect","img","line","text","author_name","views","FilmContext","createContext","initialPreviewState","video","likes","dislikes","description","isLiked","isDisliked","isLikeButtonClicked","likeAction","isDescExpanded","previewReducer","FilmPreview","history","useHistory","location","useLocation","playerRef","node","getBoundingClientRect","setPlayerNode","playerNode","measure","window","addEventListener","removeEventListener","requests","filmApi","match","push","details","Promise","allSettled","filmResponse","filmViewResponse","userResponse","status","filmData","comments","commentsCount","comments_count","process","liked","disliked","handleGetFilm","likeResult","likeData","userResult","pathname","handleLike","handleTruncate","preventDefault","TruncateButton","playsInline","poster","Fragment","faEye","cursor","faThumbsUp","faThumbsDown","whiteSpace","textAlign","truncateText","textTruncateChild","recommendationsInitialState","isInitialLoaded","recommendationsReducer","FilmsRecommendations","filmState","handleRecommendationsOnBottom","exclude","isPreviewLoaded","initialLoad","fetchData","all","film_id","sort","commentsInitialState","isRemoving","toRemove","isSorting","sorts","dir","commentsReducer","filter","sortToChange","Comments","RemoveModalContext","showModal","clear","removeModalData","handleOnCommentsBottom","commentApi","loadSortedComments","loadComments","form","addComment","substring","removeComment","sortParams","sortComments","md","DropdownButton","onSelect","tmpSort","handleSortComments","sortTmp","Item","eventKey","active","onSubmit","Control","author_id","handleRemoveComment","filmPlaylistInitialState","currentFilm","currentFilmIndex","isRemovingPlaylist","isRemovingFilm","removingFilmId","headerHeight","playerHeight","filmPlaylistReducer","filtered","findIndex","Playlist","clearPlaylist","headerRef","filmIndex","filmId","Array","prototype","call","reloadPlaylist","handleReloadPlaylist","parsed","queryString","search","list","handleGetPlaylist","removePlaylist","removeFilm","handleRemoveFromPlaylist","onYReachEnd","onScrollY","isNonExisting","fontWeight","justifyContent","alignItems","image_not_found","filmInitialState","filmReducer","FilmProvider","Provider","onSmallScreen","useWindowWidth","historyObject","span","order"],"mappings":"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","file":"static/js/7.647bf19e.chunk.js","sourcesContent":["export const commentsMaxFetchCount = 10\nexport const recommendationsMaxFetchCount = 12\n\nexport const playlistButtonMaxFetchCount = 10\n\nexport const pageInitialMaxFetchCount = 40\nexport const pageMaxFetchCount = 20\n","import Button from 'react-bootstrap/Button'\nimport useRipple from 'useripple'\n\nconst RippleButton = ({ onClick, children, className }) => {\n\n    const [addRipple, ripples] = useRipple({ background: 'black' })\n\n    return (\n        <Button variant=\"link\" onClick={(e) => {\n            onClick(e)\n        }}\n            onMouseDown={addRipple}\n            className={`button-ripple ${className}`}>\n            {children}\n            {ripples}\n        </Button>\n    )\n}\n\nexport default RippleButton","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const create = (body) => axios.post('playlists', body, { headers: authHeader() })\nexport const index = (id) => axios.get(`playlists/${id}`, { headers: authHeader() })\nexport const show = (params) => axios.get(`playlists`, { params, headers: authHeader() })\nexport const partialUpdate = (id, body) => axios.patch(`playlists/${id}`, body, { headers: authHeader() })\n\n\nexport const remove = (id) => axios.delete(`playlists/${id}`, { headers: authHeader() })\n\n","import Col  from \"react-bootstrap/Col\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useState } from \"react\"\nimport * as playlistApi from '../../services/playlistService'\nimport RippleButton from \"./rippleButton\"\n\nconst ChangePrivacyButton = ({ isPublic, id, isProfile, dispatchPrivacyUpdate, filmDispatch }) => {\n\n    const [isChanging, setIsChanging] = useState(false)\n\n\n    useEffect(() => {\n        async function changePrivacy() {\n            await playlistApi.partialUpdate(id, { is_public: !isPublic })\n                .then(res => {\n                    setIsChanging(false)\n\n                    dispatchPrivacyUpdate({\n                        type: 'change-playlist-privacy-success',\n                        payload: res.data\n                    })\n\n                    if (filmDispatch !== undefined) {\n                        filmDispatch({\n                            type: 'field',\n                            fieldName: 'reloadPlaylist',\n                            payload: true\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.error(err)\n                    setIsChanging(false)\n                })\n        }\n        if (isChanging) changePrivacy()\n    }, [dispatchPrivacyUpdate, isChanging, isPublic, id, filmDispatch])\n\n    const handleChangePrivacy = (e) => {\n        e.stopPropagation()\n        if (!isChanging) setIsChanging(true)\n    }\n\n    const privacyButton = (\n        <RippleButton\n            className=\"button-ripple-24 p-0\"\n            onClick={handleChangePrivacy}>\n            <FontAwesomeIcon icon={isPublic ? \"globe-europe\" : \"lock\"} />\n        </RippleButton>\n    )\n\n    return isProfile ?\n        (\n            <Col className=\"text-center justify-content-center d-flex align-items-center p-0 flex-grow-0\"\n            >\n                <Col\n                    className=\"remove-holder p-0 m-0 flex-grow-0\"\n                    style={{ height: '24px', width: '24' }}>\n                    {privacyButton}\n                </Col>\n            </Col>\n        ) :\n        privacyButton\n}\n\nexport default ChangePrivacyButton","import React from \"react\";\nconst useIntersectionObserver = ({\n  target,\n  onIntersect,\n  threshold = 0.1,\n  rootMargin = \"0px\"\n}) => {\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, {\n      rootMargin,\n      threshold\n    });\nconst current = target.current;\nobserver.observe(current);\nreturn () => {\n      observer.unobserve(current);\n    };\n  });\n};\nexport default useIntersectionObserver;","import { useState, useRef } from 'react';\nimport useIntersectionObserver from '../../helpers/hooks/useIntersectionObserver';\nimport \"./blurred.css\";\n\nconst Image = ({ src, thumb }) => {\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    return (\n        <div className=\"ratio ratio-16x9\">\n            <img\n                className=\"image thumb\"\n                alt=\"\"\n                src={thumb}\n                style={{ visibility: isLoaded ? \"hidden\" : \"visible\" }}\n            />\n            <img\n                onLoad={() => {\n                    setIsLoaded(true);\n                }}\n                className=\"image full\"\n                style={{ opacity: isLoaded ? 1 : 0 }}\n                alt=\"\"\n                src={src}\n            />\n        </div>\n    );\n}\nfunction BlurredImageComponent({ image }) {\n    const ref = useRef();\n    const [isVisible, setIsVisible] = useState(false);\n    \n    useIntersectionObserver({\n        target: ref,\n        onIntersect: ([{ isIntersecting }], observerElement) => {\n            if (isIntersecting) {\n                setIsVisible(true);\n                observerElement.unobserve(ref.current);\n            }\n        }\n    });\n\n    return (\n        <div\n            ref={ref}\n            className=\"image-container ratio ratio-16x9 play-image\"\n        >\n            {isVisible && (\n                <Image  src={image.concat('?width=small_webp')} thumb={image.concat('?width=preview_webp')} />\n            )}\n        </div>\n    );\n}\n\nexport default BlurredImageComponent;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport RippleButton from '../../helpers/components/rippleButton'\n\nconst RemoveButton = ({ handleRemove }) => {\n    return (\n        <RippleButton\n            className=\"button-ripple-24 remove-holder p-0\"\n            onClick={handleRemove}>\n            <FontAwesomeIcon icon=\"trash-alt\" />\n        </RippleButton>\n    )\n}\n\nexport default RemoveButton","export const checkIfPlaylistButtonClick = (target) => {\n    if ((target.tagName === 'path' && target.parentNode.className.animVal && target.parentNode.className.animVal.includes('playlist-add-icon')) ||\n        (target.tagName === 'svg' && target.className.animVal && target.className.animVal.includes('playlist-add-icon')) ||\n        (target.className && typeof target.className === 'string' && target.className.includes('playlist-add-icon-holder')))\n        return true\n    return false\n}\n\nexport const displayCommentDate = (comment) => {\n    let date = new Date(Date.parse(comment.createdAt));\n    let time = (('0' + date.getDate()).slice(-2) + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-'\n        + ('0' + date.getFullYear()).slice(-2)\n        + ' o ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2))\n    return time;\n};\n\nexport const parseSearchDate = (film) => {\n\n    let date = new Date(Date.parse(film.createdAt));\n    let today = new Date();\n\n\n    let time = Math.abs(Math.floor((\n        Date.UTC(\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes()) -\n        Date.UTC(\n            today.getFullYear(),\n            today.getMonth(),\n            today.getDate(),\n            today.getHours(),\n            today.getMinutes()))\n        / (1000 * 60)));\n\n    if (time / 60 >= 1) {\n        time /= 60;\n\n        if (time / 24 >= 1) {\n\n            time /= 24;\n\n            if (time / 30 >= 1) {\n\n                time /= 30;\n\n                if (time / 12 >= 1) {\n\n                    time = time / 12;\n                    time = Math.floor(time) + ' years ';\n\n                } else {\n                    time = Math.floor(time) + ' months ';\n                }\n\n            } else {\n                time = Math.floor(time) + ' days ';\n            }\n\n        } else {\n            time = Math.floor(time) + ' hours ';\n        }\n    } else {\n        time = Math.floor(time) + ' minutes ';\n    }\n\n    time = time + 'ago';\n\n    return time;\n};\n","import { playlistButtonMaxFetchCount } from \"../../../config\"\n\nexport const playlistDropdownMenuInitialState = {\n    playlists: [],\n    isLoading: true,\n    isAllFetched: false,\n    isCreating: false,\n    isAdding: false,\n    playlistToUpgrade: null,\n    title: '',\n    isPublic: false,\n    error: '',\n}\n\nexport function playlistDropdownMenuReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                error: '',\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'load': {\n            return {\n                ...state,\n                isLoading: true,\n                isAllFetched: false,\n            }\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                playlists: [...state.playlists, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < playlistButtonMaxFetchCount,\n                error: '',\n            }\n        }\n        case 'create': {\n            return {\n                ...state,\n                isLoading: false,\n                isCreating: true\n            }\n        }\n        case 'create-success': {\n            return {\n                ...state,\n                isLoading: false,\n                isCreating: false\n            }\n        }\n        case 'add': {\n            return {\n                ...state,\n                isLoading: false,\n                isAdding: true,\n                playlistToUpgrade: action.payload\n            }\n        }\n        case 'add-update-playlist': {\n            return {\n                ...state,\n                playlists: state.playlists.map(playlist => {\n                    if (playlist.id === state.playlistToUpgrade.id) return { ...playlist, contains: !playlist.contains }\n                    else return playlist\n                }),\n                playlistToUpgrade: null\n            }\n        }\n        case 'add-success': {\n            return {\n                ...state,\n                isAdding: false\n            }\n        }\n        case 'change-playlist-privacy-success': {\n            return {\n                ...state,\n                playlists: state.playlists.map(playlist => {\n                    if (playlist.id === action.payload.id) return { ...playlist, is_public: action.payload.is_public }\n                    return playlist\n                })\n            }\n        }\n        case 'error':\n            return {\n                ...state,\n                isLoading: false,\n                isAllFetched: false,\n                isCreating: false,\n                error: action.payload,\n                title: ''\n            }\n        default:\n            return state\n\n    }\n}\n","import React, { useCallback, useEffect, useContext, useReducer } from 'react';\nimport { Button, Col, Dropdown, Form, FormCheck, FormControl, Row, Spinner } from \"react-bootstrap\";\n\nimport * as userApi from '../../services/userService'\nimport * as playlistApi from '../../services/playlistService'\n\nimport ToastContext from '../../helpers/contexts/toast/toastContext';\nimport useBottomScrollListener from '../../helpers/hooks/useBottomScrollListener';\nimport { playlistDropdownMenuReducer, playlistDropdownMenuInitialState } from './reducers/playlistDropdownMenuReducer'\nimport ChangePrivacyButton from '../../helpers/components/changePrivacyButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { playlistButtonMaxFetchCount } from '../../config';\nimport RippleButton from '../../helpers/components/rippleButton';\n\nfunction PlaylistDropdownMenu({ filmID, handlePlaylistClose, isRecommendations, filmDispatch }) {\n\n\n    const { createToast } = useContext(ToastContext);\n    const [state, dispatch] = useReducer(playlistDropdownMenuReducer, playlistDropdownMenuInitialState);\n\n    const { playlists, title, isPublic, isLoading, isAllFetched, isCreating, isAdding, playlistToUpgrade, error } = state\n\n    const handleOnPlaylistDropdownMenuBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && !isCreating && !isAdding) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isCreating, isAdding])\n\n    const scrollRef = useBottomScrollListener(handleOnPlaylistDropdownMenuBottom);\n\n    useEffect(() => {\n        async function getMyPlaylists() {\n            await userApi.me({ playlists: true, skip: playlists.length, limit: playlistButtonMaxFetchCount })\n                .then(res => {\n\n                    let result = res.data.playlists\n\n                    result.forEach(playlist => {\n                        playlist.contains = playlist.films.indexOf(filmID) > -1\n                    });\n\n                    dispatch({\n                        type: 'load-success',\n                        payload: result\n                    })\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (isLoading) getMyPlaylists()\n\n    }, [filmID, playlists, isLoading])\n\n    useEffect(() => {\n\n        async function creatPlaylist() {\n            const body = { title: title, is_public: isPublic, films_id: [filmID] };\n\n            await playlistApi.create(body)\n                .then(res => {\n                    dispatch({\n                        type: 'create-success'\n                    })\n                    createToast(`Created playlist ${title}`)\n                    handlePlaylistClose()\n\n                })\n                .catch(err => {\n                    console.error(err)\n                    let errorMessage = null\n\n                    if (err.response && err.response.data && err.response.data.error) {\n                        errorMessage = err.response.data.error\n                    } else if (err.response && err.response.data && err.response.data.errors) {\n                        errorMessage = err.response.data.errors[0]\n                    }\n\n                    dispatch({\n                        type: 'error',\n                        payload: errorMessage === \"Path `title` is required.\" ? 'Playlist title is required' : errorMessage\n                    })\n                })\n        }\n\n        if (isCreating) creatPlaylist()\n\n    }, [isCreating, title, isPublic, createToast, handlePlaylistClose, filmID,])\n\n    useEffect(() => {\n        async function addToPlaylist() {\n\n            let body = { films_id: [filmID] };\n\n            body = playlistToUpgrade.contains ? { ...body, is_remove_films: true } : { ...body, is_remove_films: false }\n\n            const message = playlistToUpgrade.contains ? `Deleted from playlist ${playlistToUpgrade.title}` : `Added to playlist ${playlistToUpgrade.title}`\n\n            dispatch({\n                type: 'add-update-playlist',\n                playlist: playlistToUpgrade\n            })\n\n            await playlistApi.partialUpdate(playlistToUpgrade.id, body)\n                .then(res => {\n                    dispatch({\n                        type: 'add-success'\n                    })\n\n                    if (isRecommendations) {\n                        filmDispatch({\n                            type: 'field',\n                            fieldName: 'reloadPlaylist',\n                            payload: true\n                        })\n                    }\n                    createToast(message)\n                })\n                .catch(err => console.error(err))\n        }\n        if (isAdding && playlistToUpgrade) addToPlaylist()\n    }, [isAdding, playlistToUpgrade, createToast, filmDispatch, filmID, isRecommendations])\n\n    const handleAddToPlaylist = (playlist) => {\n        dispatch({\n            type: 'add',\n            payload: playlist\n        })\n    };\n\n    const handleCreatePlaylist = (e) => {\n        e.stopPropagation()\n        dispatch({\n            type: 'create'\n        })\n    };\n\n    return (\n\n        <Dropdown.Menu\n            onClick={e => e.stopPropagation()}\n            style={{ width: 240 + \"px\", left: '50px !important' }}>\n            <Row className=\"m-0 m-button button-ripple\" >\n                <Col className=\"playlist-add-exit-text-width\">Save to...</Col>\n                <RippleButton className=\"button-ripple-24 playlist-add-icon-holder p-0 d-flex align-items-center text-center justify-content-center\"\n                    onClick={() => setTimeout(handlePlaylistClose, 150)}>\n                    <FontAwesomeIcon icon=\"times\" />\n                </RippleButton>\n            </Row>\n            <Dropdown.Divider />\n            <div\n                ref={scrollRef}\n                style={{\n                    maxHeight: 100 + 'px', overflowY: 'scroll', minHeight: 3 + 'rem'\n                }}>\n\n                {\n                    playlists.map((playlist, index) => {\n                        return (<Row className=\"m-0 playlist-form-group\" key={playlist.id} >\n                            <Col xs={10} sm={10} className=\"p-0\">\n                                <Form.Check id={playlist.id} className=\"form-check\">\n                                    <FormCheck.Input type=\"checkbox\"\n                                        onChange={() => handleAddToPlaylist(playlist)}\n                                        checked={playlist.contains} />\n                                    <FormCheck.Label>\n                                        <p className=\"playlist-check-label\">\n                                            {playlist.title}\n                                        </p>\n                                    </FormCheck.Label>\n                                </Form.Check>\n\n                            </Col>\n                            <ChangePrivacyButton\n                                id={playlist.id}\n                                isPublic={playlist.is_public}\n                                isProfile={false}\n                                filmDispatch={filmDispatch}\n                                dispatchPrivacyUpdate={dispatch} />\n\n                        </Row>)\n                    })\n                }\n\n                {\n                    !isAllFetched && <div style={{\n                        height: 3 + 'rem'\n                    }}\n                        className=\"fetch-spinner d-flex justify-content-center align-items-center\">\n                        {isLoading && <Spinner animation=\"border\" />}\n                    </div>\n                }\n            </div>\n            <Dropdown.Divider />\n            <Dropdown.ItemText>Create a new playlist</Dropdown.ItemText>\n            <Row className=\"m-0 p-0\">\n                <Form>\n                    <FormControl\n                        isInvalid={error !== ''}\n                        onChange={(e) => dispatch({ type: 'field', fieldName: 'title', payload: e.target.value })}\n                        className=\"mb-2 mt-2\"\n                        placeholder=\"Enter playlist title...\" />\n\n                    <FormControl.Feedback type=\"invalid\"\n                        className=\"mb-2 mt-2\">\n                        {error}\n                    </FormControl.Feedback>\n                    <Form.Select aria-label=\"Privacy\" className=\"mb-2 mt-2\"\n                        onChange={(e) => dispatch({ type: 'field', fieldName: 'isPublic', payload: e.target.value === 'public' })}>\n                        <option value=\"private\">Private</option>\n                        <option value=\"public\">Public</option>\n                    </Form.Select>\n\n                    <Form.Group className=\"d-flex align-items-center mt-2\">\n                        <Button disabled={isCreating}\n                            onClick={isCreating ? null : handleCreatePlaylist}>Create</Button>\n\n                        {\n                            isCreating &&\n                            <Spinner className=\"ms-2\" animation=\"grow\" />\n                        }\n                    </Form.Group>\n\n                </Form>\n\n            </Row>\n\n        </Dropdown.Menu >\n\n\n    )\n}\n\nexport default PlaylistDropdownMenu\n","import React, { useState, useContext } from 'react';\nimport { Col, Dropdown } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport PlaylistDropdownMenu from './playlistDropdownMenu'\nimport UserContext from '../../helpers/contexts/user/userContext';\nimport useRipple from \"useripple\"\n\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\n\nimport './playlistAdd.css'\n\nfunction PlaylistAddButton(props) {\n\n    const { user } = useContext(UserContext);\n\n    const [addRipple, ripples] = useRipple({ background: \"black\" })\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const handlePlaylistClose = () => {\n        setIsOpen(false)\n    }\n\n    const allClass = \"\"\n    const previewClass = \"col-sm-2 col-2 p-0\"\n\n    return (\n\n        user.auth ?\n            <Dropdown show={isOpen}\n                onToggle={(isOpen, event, metadata) => {\n                    setIsOpen(isOpen)\n                }} className={props.isRecommendations ? previewClass : allClass} >\n                <Dropdown.Toggle variant=\"link\" bsPrefix=\"p-0\"\n                    className=\"m-button button-ripple\"\n                    style={{ color: \"black\" }}>\n                    <div style={{ display: 'inline-block', width: '100%', height: '100%' }}>\n                        <Col\n                            onClick={addRipple}\n                            className=\"playlist-add-icon-holder p-0 button-ripple button-ripple-24\">\n                            <FontAwesomeIcon style={{ opacity: (isOpen ? 1 : \"\") }}\n                                className=\"playlist-add-icon\" icon={faEllipsisV} />\n                            {ripples}\n                        </Col>\n                    </div>\n                </Dropdown.Toggle>\n                {isOpen && <PlaylistDropdownMenu\n                    isRecommendations={props.isRecommendations}\n                    filmDispatch={props.filmDispatch}\n                    isOpen={isOpen}\n                    filmID={props.filmID}\n                    handlePlaylistClose={handlePlaylistClose} />}\n            </Dropdown>\n            :\n            null\n\n    )\n}\n\nexport default PlaylistAddButton\n","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TextTruncate from \"react-text-truncate\";\n\nimport BlurredImageComponent from \"../../components/blurredImage\";\nimport PlaylistAddButtonComponent from \"../../components/add/playlistAddButton\";\n\nimport { checkIfPlaylistButtonClick } from '../index'\nimport RemoveButton from './removeButton';\nimport '../../components/filmPage/film.css'\n\nconst Film = ({ film, index, handleRedirect, handleRemove, isProfile, isRecommendations, filmDispatch }) => {\n\n    const recommendationsClass = \"row mx-0 mb-4\"\n    const normalClass = \"col mb-5 col-12 col-sm-6 col-md-3 col-lg-2\"\n\n    return (\n        <div className={isRecommendations ? recommendationsClass : normalClass}>\n            <div className={(isRecommendations ? \"row p-0 m-0\" : \"col\").concat(\" play-outer-container remove-container\")}\n                onClick={(e) => {\n                    const isPlaylistButton = checkIfPlaylistButtonClick(e.target)\n                    if (!isPlaylistButton) handleRedirect(film.id)\n                }}>\n                <Col xs={isRecommendations ? 6 : 12} sm={isRecommendations ? 6 : 12}\n                    className=\"m-0 p-0\">\n                    <div\n                        className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                        <BlurredImageComponent\n                            image={film.img} />\n                        <FontAwesomeIcon className=\"play-middle\" icon=\"play\" />\n                    </div>\n                </Col>\n                <Col xs={isRecommendations ? 6 : 12} sm={isRecommendations ? 6 : 12}\n                    className={isRecommendations ? \"m-0\" : \"m-0 p-0\"}>\n                    <Row className=\"m-0 mt-1\">\n                        <Col className=\"film-preview-playlist-title-width p-0\">\n                            <TextTruncate line={1} text={film.title}\n                                className=\"mb-1 mt-1 title \" />\n                        </Col>\n\n                        <Col className=\"p-0 d-flex justify-content-end\">\n                            {\n                                isProfile ?\n                                    <RemoveButton handleRemove={handleRemove} /> :\n                                    <PlaylistAddButtonComponent\n                                        isRecommendations={isRecommendations}\n                                        filmDispatch={filmDispatch}\n                                        index={index}\n                                        filmID={film.id} />\n                            }\n                        </Col>\n                    </Row>\n                    <p className=\"mb-0 author-nick-color\">\n                        <small>{film.author_name}</small>\n                    </p>\n                    <p className=\"mb-0 film-views\">\n                        <small>{film.views} views</small>\n                    </p>\n                </Col>\n            </div>\n        </div>\n    )\n}\n\nexport default Film","export default __webpack_public_path__ + \"static/media/image_not_found.c4ba1e76.png\";","import { createContext } from 'react'\nconst FilmContext = createContext();\nexport default FilmContext","const initialFilm = {\n    img: '',\n    video: '',\n    film: '',\n    title: '',\n    views: '',\n    likes: '',\n    dislikes: '',\n    description: `\\r\\n\\n\\n`,\n}\n\nexport const initialPreviewState = {\n    film: initialFilm,\n    isLiked: false,\n    isDisliked: false,\n    isLikeButtonClicked: false,\n    likeAction: null,\n    isDescExpanded: false\n}\n\nexport function previewReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'like': {\n            return {\n                ...state,\n                isLikeButtonClicked: true,\n                likeAction: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                film: action.film,\n                isLiked: action.isLiked,\n                isDisliked: action.isDisliked,\n                isLikeButtonClicked: false,\n                likeAction: null,\n                isDescExpanded: false\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLikeButtonClicked: false,\n                likeAction: null\n            }\n        }\n        default: return state\n    }\n}","import React, { useState, useEffect, useCallback, useContext, useReducer } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as filmApi from '../../services/filmService'\nimport * as userApi from '../../services/userService'\n\nimport { Player } from 'video-react';\nimport TextTruncate from 'react-text-truncate';\n\nimport FilmContext from '../../helpers/contexts/film/filmContext'\n\nimport \"../../../node_modules/video-react/dist/video-react.css\";\nimport { initialPreviewState, previewReducer } from './reducers/previewReducer';\nimport UserContext from '../../helpers/contexts/user/userContext';\nimport { faEye, faThumbsDown, faThumbsUp } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction FilmPreview(props) {\n\n    let history = useHistory()\n    let location = useLocation()\n\n    const { user } = useContext(UserContext)\n\n    // eslint-disable-next-line no-unused-vars\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const playerRef = useCallback(node => {\n        if (node !== null) {\n            filmDispatch({\n                type: 'field',\n                fieldName: 'playerHeight',\n                payload: node.getBoundingClientRect().height\n            })\n            setPlayerNode(node)\n        }\n    }, [filmDispatch])\n\n    const [state, dispatch] = useReducer(previewReducer, initialPreviewState)\n\n    const { film, isLiked, isDisliked, isLikeButtonClicked, likeAction, isDescExpanded } = state\n\n    const [playerNode, setPlayerNode] = useState(null);\n\n\n    useEffect(() => {\n        if (playerNode) {\n\n            const measure = () => {\n                filmDispatch({\n                    type: 'field',\n                    fieldName: 'playerHeight',\n                    payload: playerNode.getBoundingClientRect().height\n                })\n            }\n\n            window.addEventListener(\"resize\", measure);\n\n            return () => window.removeEventListener(\"resize\", measure);\n        }\n    }, [playerNode, filmDispatch]);\n\n    useEffect(() => {\n        async function handleGetFilm() {\n            let requests = [filmApi.index(props.match.params.id), filmApi.view(props.match.params.id)]\n            if (user.auth) requests.push(userApi.me({ details: true }))\n\n            const [filmResponse, filmViewResponse, userResponse] = await Promise.allSettled(requests);\n\n            if (filmResponse.status === \"rejected\" || filmViewResponse.status === \"rejected\") {\n                filmDispatch({\n                    type: 'field',\n                    fieldName: 'error',\n                    payload: true\n                })\n                return\n            }\n\n\n            const filmData = filmResponse.value.data\n\n            filmDispatch({\n                type: 'success',\n                comments: filmData.comments,\n                commentsCount: filmData.comments_count\n            })\n\n            const film = {\n                ...filmData,\n                img: `${process.env.REACT_APP_API_URL}films/${filmData.id}/thumbnail?width=poster`,\n                video: `${process.env.REACT_APP_API_URL}films/${filmData.id}/video`,\n                views: filmViewResponse.value.data.views\n            }\n            let isLiked = false\n            let isDisliked = false\n\n\n            if (userResponse && userResponse.status === \"fulfilled\") {\n                const details = userResponse.value.data.details\n                isLiked = details.liked.indexOf(props.match.params.id) > -1\n                isDisliked = details.disliked.indexOf(props.match.params.id) > -1\n            }\n\n            dispatch({\n                type: 'success',\n                film: film,\n                isLiked: isLiked,\n                isDisliked: isDisliked\n            })\n\n        }\n        handleGetFilm()\n    }, [props.match.params.id, filmDispatch, user.auth])\n\n    useEffect(() => {\n        async function handleLike() {\n            if (likeAction === null) return\n\n            try {\n                const likeResult = await filmApi.like(film.id, { action: likeAction })\n\n                let likeData = likeResult.data\n                likeData.img = `${process.env.REACT_APP_API_URL}films/${likeData.id}/thumbnail?width=poster`\n                likeData.video = `${process.env.REACT_APP_API_URL}films/${likeData.id}/video`\n\n                const userResult = await userApi.me({ details: true })\n                const details = userResult.data.details\n                const isLiked = details.liked.indexOf(likeData.id) > -1\n                const isDisliked = details.disliked.indexOf(likeData.id) > -1\n\n                dispatch({\n                    type: 'success',\n                    film: likeData,\n                    isLiked: isLiked,\n                    isDisliked: isDisliked\n                })\n\n            } catch (err) {\n                console.error(err)\n                dispatch({\n                    type: 'error'\n                })\n                if (err.response && err.response.status === 401) {\n                    history.push(`${location.pathname}/login`);\n                }\n            }\n        }\n\n        if (isLikeButtonClicked) handleLike()\n    }, [film.id, isLikeButtonClicked, likeAction, history, location])\n\n    const handleTruncate = (e) => {\n        e.preventDefault();\n        dispatch({\n            type: 'field',\n            fieldName: 'isDescExpanded',\n            payload: !isDescExpanded\n        })\n    }\n\n    const handleLike = (action) => {\n        if (isLikeButtonClicked) return\n        dispatch({\n            type: 'like',\n            payload: action\n        })\n\n    };\n\n    const TruncateButton = (title) => {\n        return (<span>\n            <Button variant=\"link\"\n                className=\"p-0 m-0 mb-1 title fw-bold\"\n                onClick={handleTruncate}>{title}</Button>\n        </span>)\n    }\n    return (\n\n        <Col>\n            <Col sm={12}>\n                <div ref={playerRef}>\n                    <Player\n                        playsInline\n                        poster={film.img}\n                        src={film.video} />\n                </div>\n            </Col>\n            {\n                film &&\n                <React.Fragment>\n                    <Col className=\"mt-4\" sm={12}>\n                        <Row className=\"p-0 m-0\">\n                            <Col sm={12} className=\"p-0\">\n                                {!film.title && <p className=\"fw-bold\"><br /></p>}\n                                <p className=\"fw-bold\">{film.title}</p>\n                            </Col>\n                            <Col xs={4} sm={4} className=\"p-0\">\n                                <p><FontAwesomeIcon icon={faEye} /> &ensp;{film.views}</p>\n                            </Col>\n                            <Col xs={4} sm={4} className=\"text-right d-flex justify-content-end\">\n                                <p style={{ cursor: \"pointer\" }}\n                                    className={isLiked ? 'film-picked-thumb-color' : ''}\n                                    onClick={() => handleLike('like')}>\n                                    <FontAwesomeIcon icon={faThumbsUp} />\n                                    &ensp;{film.likes}\n                                </p>\n                            </Col>\n                            <Col xs={4} sm={4}>\n                                <p style={{ cursor: \"pointer\" }} className={isDisliked ? 'film-picked-thumb-color' : ''}\n                                    onClick={() => handleLike('dislike')}>\n                                    <FontAwesomeIcon icon={faThumbsDown} />\n                                    &ensp;{film.dislikes}\n                                </p>\n                            </Col>\n                            <Col sm={12} className=\"mt-4 mb-4 divider\" />\n\n                            <Col sm={12} className=\"p-0\" style={{ whiteSpace: 'pre-line', textAlign: 'justify' }}>\n                                <TextTruncate line={!isDescExpanded && 2}\n                                    truncateText=\"…\"\n                                    text={film.description}\n                                    textTruncateChild={TruncateButton('Show more')} />\n\n                                {isDescExpanded && TruncateButton('Show less')}\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col sm={12} className=\"mt-4 mb-2 divider\" />\n                </React.Fragment>\n            }\n        </Col>\n\n\n    )\n}\n\n\nexport default FilmPreview\n","import { recommendationsMaxFetchCount } from \"../../../config\"\n\nexport const recommendationsInitialState = {\n    films: null,\n    id: null,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    error: null,\n}\n\nexport function recommendationsReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'clear': {\n            return recommendationsInitialState\n        }\n        case 'initial-success': {\n            return {\n                ...recommendationsInitialState,\n                films: action.films,\n                id: action.id,\n                isInitialLoaded: true\n            }\n        }\n        case 'load': {\n\n            return {\n                ...state,\n                isLoading: true,\n                isAllFetched: false\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                films: [...state.films, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < recommendationsMaxFetchCount\n            }\n        }\n        case 'error': {\n            return {\n                ...recommendationsInitialState,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}\n","import React, { useEffect, useReducer, useCallback, useContext } from 'react';\n\nimport { Col, Spinner } from \"react-bootstrap\";\n\nimport * as filmApi from '../../services/filmService'\n\nimport useBottomScrollListener from '../../helpers/hooks/useBottomScrollListener';\nimport Film from '../../helpers/components/film';\nimport { recommendationsReducer, recommendationsInitialState } from './reducers/recommendationsReducer'\nimport { recommendationsMaxFetchCount } from \"../../config\"\nimport FilmContext from '../../helpers/contexts/film/filmContext';\n\nfunction FilmsRecommendations(props) {\n\n    // eslint-disable-next-line no-unused-vars\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(recommendationsReducer, recommendationsInitialState)\n\n    const { films, isLoading, isAllFetched, isInitialLoaded, id, error } = state\n\n    const handleRecommendationsOnBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded && !error && id) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded, error, id])\n\n    useBottomScrollListener(handleRecommendationsOnBottom)\n\n    useEffect(() => {\n        async function initialLoad() {\n            await filmApi.all({ exclude: props.match.params.id, limit: recommendationsMaxFetchCount })\n                .then(res => {\n                    let films = res.data;\n\n                    films.forEach(film => {\n                        film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`\n\n                    });\n\n                    dispatch({\n                        type: 'initial-success',\n                        films: films,\n                        id: props.match.params.id\n                    })\n\n\n                })\n                .catch(err => console.error(err))\n        }\n\n        dispatch({\n            type: 'clear'\n        })\n\n        if (filmState.isPreviewLoaded) {\n            initialLoad()\n        }\n    }, [props.match.params.id, filmState.isPreviewLoaded])\n\n    useEffect(() => {\n        if (filmState.error) {\n            dispatch({\n                type: 'error',\n                payload: filmState.error\n            })\n        }\n    }, [filmState.error])\n\n    useEffect(() => {\n        async function fetchData() {\n            await filmApi.all({ exclude: id, skip: films.length, limit: recommendationsMaxFetchCount }).then(res => {\n                let films = res.data;\n\n                films.forEach(film => {\n                    film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`\n\n                });\n\n                dispatch({\n                    type: 'success',\n                    payload: films\n                })\n            })\n        }\n        if (isLoading && films && id) fetchData()\n    }, [isLoading, id, films])\n\n    return (\n\n        <Col>\n\n            {\n                films && films.map((film, index) => <Film key={film.id} film={film} index={index} isRecommendations={true} filmDispatch={filmDispatch} handleRedirect={() => props.handleRedirect(film.id)} />)\n            }\n\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {(isLoading) && !error && <Spinner animation=\"border\" />}\n                </div>\n            }\n        </Col>\n    )\n}\n\nexport default FilmsRecommendations\n","import axios from '../helpers/axios'\nimport authHeader from '../helpers/authHeader'\n\n\nexport const all = (film_id, params) => axios.get(`films/${film_id}/comments`, { params })\n\nexport const create = (film_id, form) => axios.post(`films/${film_id}/comments`, form, { headers: authHeader() })\n\nexport const update = (id, update) => axios.put(`comments/${id}`, update, { headers: authHeader() })\n\nexport const remove = (id) => axios.delete(`comments/${id}`, { headers: authHeader() })\n\nexport const sort = (film_id, params) => axios.get(`films/${film_id}/comments/sort`, { params, headers: authHeader() })\n\n\n","import { commentsMaxFetchCount } from \"../../../config\"\n\nexport const commentsInitialState = {\n    comments: null,\n    commentsCount: null,\n    text: '',\n    id: null,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    isAdding: false,\n    isRemoving: false,\n    toRemove: null,\n    isSorting: false,\n    sort: null,\n    sorts: [\n        { id: 'created_at', title: 'By date', dir: 1 },\n        { id: 'author_name', title: 'By author name', dir: 1 }\n    ],\n    error: null\n}\n\nexport function commentsReducer(state, action) {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'clear': {\n            return {\n                ...commentsInitialState,\n                id: action.id\n            }\n        }\n        case 'load': {\n            return !state.isLoading && !state.isAllFetched && state.isInitialLoaded && !state.isAdding &&\n                !state.error && state.id && !state.isSorting ?\n                {\n                    ...state,\n                    isLoading: true\n                } : state\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                comments: action.comments,\n                commentsCount: action.commentsCount,\n                isAllFetched: action.comments.length < commentsMaxFetchCount,\n                isInitialLoaded: true,\n                error: null,\n            }\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                comments: [...state.comments, ...action.payload],\n                isLoading: false,\n                isAllFetched: action.payload.length < commentsMaxFetchCount\n            }\n        }\n        case 'add': {\n            return {\n                ...state,\n                isAdding: true,\n                error: null\n            }\n        }\n        case 'add-success': {\n            return {\n                ...state,\n                text: '',\n                commentsCount: state.commentsCount + 1,\n                comments: [action.payload, ...state.comments],\n                isAdding: false\n            }\n        }\n        case 'remove': {\n            return {\n                ...state,\n                isRemoving: true,\n                toRemove: action.payload\n            }\n        }\n        case 'remove-success': {\n            return {\n                ...state,\n                isRemoving: false,\n                toRemove: null,\n                commentsCount: state.commentsCount - 1,\n                comments: state.toRemove ? state.comments.filter(comment => comment.id !== state.toRemove.id) : state.data\n            }\n        }\n        case 'sort': {\n            return {\n                ...state,\n                comments: null,\n                isAllFetched: false,\n                sorts: state.sorts.map(sort => {\n                    if (sort.id === action.sortToChange.id) return action.sortToChange\n                    else return sort\n                }),\n                sort: action.sort,\n                isSorting: true,\n            }\n        }\n        case 'sort-success': {\n            return {\n                ...state,\n                isSorting: false,\n                comments: action.payload,\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isAdding: false,\n                isLoading: false,\n                isSorting: false,\n                error: action.payload,\n            }\n        }\n        default: return state\n    }\n}","import React, { useContext, useEffect, useReducer, useCallback } from 'react';\n\nimport { Button, Col, Dropdown, DropdownButton, Row, Spinner, Form } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport * as commentApi from '../../services/commentService'\n\nimport useBottomScrollListener from '../../helpers/hooks/useBottomScrollListener';\nimport { commentsReducer, commentsInitialState } from './reducers/commentsReducer';\nimport { commentsMaxFetchCount } from \"../../config\"\nimport UserContext from '../../helpers/contexts/user/userContext';\nimport FilmContext from '../../helpers/contexts/film/filmContext';\nimport { displayCommentDate } from '../../helpers';\nimport RemoveModalContext from '../../helpers/contexts/removeModal/removeModalContext';\nimport RippleButton from '../../helpers/components/rippleButton';\n\nfunction Comments(props) {\n\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\n\n    const { user } = useContext(UserContext);\n\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(commentsReducer, commentsInitialState)\n    const {\n        comments,\n        commentsCount,\n        text,\n        isInitialLoaded,\n        isLoading,\n        isAllFetched,\n        isAdding,\n        id,\n        isRemoving,\n        toRemove,\n        isSorting,\n        sort,\n        sorts,\n        error\n    } = state\n\n    const handleOnCommentsBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && isInitialLoaded && !isAdding && !error && id && !isSorting) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllFetched, isInitialLoaded, isAdding, error, id, isSorting])\n\n    useBottomScrollListener(handleOnCommentsBottom)\n\n    useEffect(() => {\n        dispatch({\n            type: 'clear',\n            id: props.match.params.id\n        })\n    }, [props.match.params.id])\n\n    useEffect(() => {\n        if (filmState.error) {\n            dispatch({\n                type: 'error',\n                payload: filmState.error\n            })\n        }\n    }, [filmState.error])\n\n    useEffect(() => {\n        function getCommentsFromContext() {\n            dispatch({\n                type: 'initial-success',\n                comments: filmState.comments,\n                commentsCount: filmState.commentsCount,\n            })\n        }\n\n        if (filmState.comments && filmState.commentsCount !== null) getCommentsFromContext()\n    }, [filmState.comments, filmState.commentsCount, filmDispatch])\n\n    useEffect(() => {\n        async function loadComments() {\n            await commentApi.all(id, { skip: comments.length, limit: commentsMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                })\n        }\n        async function loadSortedComments() {\n            await commentApi.sort(id, { [sort.id]: sort.dir, skip: comments.length, limit: commentsMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                })\n        }\n        if (isLoading && isInitialLoaded && !isAdding &&\n            comments && id && !isSorting) {\n            if (!sort)\n                loadComments()\n            else\n                loadSortedComments()\n        }\n    }, [isLoading, isAdding, id, comments, isInitialLoaded, isSorting, sort])\n\n\n    useEffect(() => {\n        const addComment = async () => {\n            const comment = { text: text }\n\n            await commentApi.create(id, comment)\n                .then(res => {\n                    dispatch({\n                        type: 'add-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error',\n                        payload: err.response.status\n                    })\n                })\n        };\n        if (isAdding && !isLoading && id) addComment()\n    }, [isAdding, isLoading, id, text])\n\n    useEffect(() => {\n        async function removeComment() {\n            await commentApi.remove(toRemove.id)\n                .then(res => {\n                    dispatch({ type: 'remove-success' })\n                    clear()\n                })\n                .catch(err => {\n                    clear()\n                    console.error(err)\n                })\n        }\n\n        if (isRemoving && toRemove && removeModalData.isRemoving &&\n            removeModalData.id === toRemove.id && removeModalData.type === 'comment' &&\n            removeModalData.title === toRemove.text.substring(0, 10).concat('...')) removeComment()\n    }, [isRemoving, toRemove, clear, removeModalData])\n\n    useEffect(() => {\n        async function sortComments() {\n            const sortParams = sort ? { [sort.id]: sort.dir, limit: commentsMaxFetchCount } : {}\n\n            await commentApi.sort(id, sortParams)\n                .then(res => {\n                    dispatch({ type: 'sort-success', payload: res.data })\n                })\n                .catch(err => {\n                    dispatch({ type: 'error', payload: 'Sort error.' })\n                    console.error(err)\n                })\n        }\n        if (isSorting) sortComments()\n    }, [isSorting, sort, id])\n\n    const handleAddComment = () => {\n        dispatch({\n            type: 'add'\n        })\n    }\n\n    const handleRemoveComment = (comment) => {\n        if (removeModalData.isRemoving) return\n        dispatch({ type: 'remove', payload: comment })\n        showModal(comment.id, 'comment', comment.text.substring(0, 10).concat('...'))\n    }\n\n    const handleSortComments = (e) => {\n\n        let sortToChange = null\n\n        switch (e) {\n            case 'created_at':\n                sortToChange = sorts[0]\n\n                break;\n            case 'author_name':\n                sortToChange = sorts[1]\n                break;\n            default:\n                return;\n        }\n\n        let tmpSort = null\n\n        if (sort && sort.id === sortToChange.id) {\n            sortToChange.dir *= -1\n            tmpSort = sortToChange\n            if (sortToChange.dir === 1) {\n                tmpSort = null\n            }\n        } else {\n            tmpSort = sortToChange\n        }\n\n        dispatch({\n            type: 'sort',\n            sortToChange: sortToChange,\n            sort: tmpSort\n        })\n\n    };\n\n\n    return (\n\n        <Col>\n            <Row className=\"p-0 mt-4 mb-4\">\n                <Col xs={7} sm={5} md={4} className=\"d-flex align-items-center \">\n                    {commentsCount !== null && <span>{commentsCount}{commentsCount === 1 ? ' comment' : ' comments'} </span>}\n                </Col>\n                <Col xs={2} sm={2}>\n                    <DropdownButton\n                        variant=\"secondary\"\n                        title=\"Sort\"\n                        id=\"dropdown-button-drop-down\"\n                        onSelect={e => handleSortComments(e)}>\n                        {\n                            sorts.map(sortTmp => (\n                                <Dropdown.Item key={sortTmp.id} eventKey={sortTmp.id} active={sort && sortTmp.id === sort.id}>\n                                    {sortTmp.title}\n                                    {sort && sort.id === sortTmp.id && sortTmp.dir === 1 ?\n                                        <FontAwesomeIcon className=\"ms-2\" icon=\"sort-up\" /> :\n                                        sort && sort.id === sortTmp.id && sortTmp.dir === -1 ?\n                                            <FontAwesomeIcon className=\"ms-2\" icon=\"sort-down\" /> : \"\"}\n                                </Dropdown.Item>)\n                            )\n                        }\n                    </DropdownButton>\n                </Col>\n            </Row>\n            <Form onSubmit={(text && !isAdding) ? handleAddComment : null}>\n                <Form.Group id=\"fiordur\">\n                    <Form.Control type=\"text\" placeholder=\"Comment\" value={text}\n                        onChange={e => dispatch({ type: 'field', fieldName: 'text', payload: e.target.value })}\n                    />\n                </Form.Group>\n                <Col className=\"d-flex justify-content-end\" >\n                    <Button disabled={isAdding || !text}\n                        type=\"submit\"\n                        className=\"mt-3\" variant=\"primary\">\n                        Submit\n                    </Button>\n                </Col>\n            </Form>\n            {/*  <TextField\n                value={text}\n                onChange={e => dispatch({ type: 'field', fieldName: 'text', payload: e.target.value })}\n                type=\"text\"\n                id=\"standard-multiline-flexible\"\n                label=\"Comment\"\n                multiline\n                fullWidth\n                maxrow=\"4\" /> */}\n\n\n            {\n                isAdding && <div style={{ height: 32 + 'px' }} className=\"d-flex justify-content-center\">\n                    <Spinner animation=\"border\" />\n                </div>\n            }\n            {\n                comments && comments.map(comment => {\n                    return (\n                        <Col className=\"p-0 mt-4 remove-container\" sm={12} key={comment.id}>\n                            <div className=\"d-flex\">\n                                <p className=\"m-0 fw-bold\">\n                                    <small className=\"m-0 fw-bold\">{comment.author_name}&nbsp;</small>\n                                </p>\n                                <p >\n                                    <small className=\"m-0\">{displayCommentDate(comment)}</small>\n                                </p>\n                                {\n                                    user.id === comment.author_id &&\n\n                                    <RippleButton className=\"m-button cursor-pointer button-ripple-24 d-flex justify-content-center align-items-center remove-holder p-0 m-0 ms-auto\"\n                                        onClick={() => handleRemoveComment(comment)}>\n                                        <FontAwesomeIcon icon=\"trash-alt\" />\n\n                                    </RippleButton>\n                                }\n                            </div>\n                            <p className=\"d-block d-sm-block\">\n                                <small>{comment.text}</small>\n                            </p>\n                        </Col>\n                    )\n                })\n            }\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {(isLoading || isSorting) && !error && <Spinner animation=\"border\" />}\n                </div>\n            }\n\n        </Col>\n\n    )\n}\n\nexport default Comments","\nexport const filmPlaylistInitialState = {\n    playlist: null,\n    currentFilm: null,\n    currentFilmIndex: 0,\n    isLoading: false,\n    isRemovingPlaylist: false,\n    isRemovingFilm: false,\n    removingFilmId: null,\n    headerHeight: null,\n    playerHeight: null\n}\n\nexport const filmPlaylistReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                isLoading: false,\n                playlist: action.playlist,\n                currentFilm: action.currentFilm,\n                currentFilmIndex: action.currentFilmIndex\n            }\n        }\n        case 'clear': {\n            return filmPlaylistInitialState\n        }\n        case 'remove-film': {\n            return {\n                ...state,\n                removingFilmId: action.payload,\n                isRemovingFilm: true\n            }\n        }\n        case 'remove-film-success': {\n\n            if (!state.removingFilmId)\n                return {\n                    ...state,\n                    isRemovingFilm: false\n                }\n\n            const filtered = state.playlist.films.filter(film => film.id !== state.removingFilmId)\n            return {\n                ...state,\n                currentFilm: state.removingFilmId === state.currentFilm ? null : state.currentFilm,\n                currentFilmIndex: state.removingFilmId === state.currentFilm ? 0 : filtered.findIndex(film => film.id === state.currentFilm) + 1,\n                playlist: {\n                    ...state.playlist,\n                    films: filtered\n                },\n                isRemovingFilm: false,\n            }\n        }\n        case 'change-playlist-privacy-success': {\n            return {\n                ...state,\n                playlist: { ...state.playlist, is_public: action.payload.is_public }\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                error: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}","import React, { useContext, useEffect, useCallback, useReducer } from 'react';\nimport { useLocation } from 'react-router-dom'\nimport { Col, Row } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport queryString from \"query-string\";\n\nimport TextTruncate from \"react-text-truncate\";\nimport image_not_found from '../../images/image_not_found.png'; // Tell Webpack this JS file uses this image\n\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nimport * as playlistApi from '../../services/playlistService'\nimport FilmContext from '../../helpers/contexts/film/filmContext';\n\nimport { filmPlaylistInitialState, filmPlaylistReducer } from './reducers/playlistReducer';\n\nimport UserContext from '../../helpers/contexts/user/userContext';\nimport RemoveButton from '../../helpers/components/removeButton';\nimport ChangePrivacyButton from '../../helpers/components/changePrivacyButton';\nimport RemoveModalContext from '../../helpers/contexts/removeModal/removeModalContext';\nimport BlurredImageComponent from '../blurredImage';\n\nfunction Playlist(props) {\n\n    const { showModal, clear, removeModalData } = useContext(RemoveModalContext)\n\n    let location = useLocation()\n\n    const { user } = useContext(UserContext)\n    const [filmState, filmDispatch] = useContext(FilmContext)\n\n    const [state, dispatch] = useReducer(filmPlaylistReducer, filmPlaylistInitialState)\n\n    const {\n        playlist,\n        isRemovingPlaylist,\n        isRemovingFilm,\n        removingFilmId,\n        currentFilm,\n        currentFilmIndex,\n        headerHeight,\n        playerHeight,\n        error\n    } = state\n\n    const clearPlaylist = () => {\n        dispatch({ type: 'clear' })\n    }\n\n    const headerRef = useCallback(node => {\n        if (node !== null) {\n            dispatch({\n                type: 'field',\n                fieldName: 'headerHeight',\n                payload: node.getBoundingClientRect().height\n            });\n        }\n    }, [])\n\n    useEffect(() => {\n        dispatch({\n            type: 'field',\n            fieldName: 'playerHeight',\n            payload: filmState.playerHeight\n        });\n    }, [filmState.playerHeight])\n\n    useEffect(() => {\n        dispatch({\n            type: 'error',\n            payload: filmState.error\n        });\n    }, [filmState.error])\n\n\n    useEffect(() => {\n        async function handleReloadPlaylist() {\n            await playlistApi.index(playlist.id)\n                .then(res => {\n\n                    let filmIndex = 0\n                    let filmId = null\n\n                    Array.prototype.forEach.call(res.data.films, (film, index) => {\n                        if (film && film.id === props.match.params.id) {\n                            filmIndex = index + 1\n                            filmId = film.id\n                        }\n                    })\n\n                    dispatch({\n                        type: 'success',\n                        playlist: res.data,\n                        currentFilm: filmId,\n                        currentFilmIndex: filmIndex\n                    })\n\n                    filmDispatch({\n                        type: 'field',\n                        fieldName: 'reloadPlaylist',\n                        payload: false\n                    })\n\n                    return res.data\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (filmState.reloadPlaylist && playlist) handleReloadPlaylist()\n\n    }, [filmState.reloadPlaylist, playlist, filmDispatch, props.match.params.id])\n\n\n\n    useEffect(() => {\n        const parsed = queryString.parse(location.search);\n        if (!parsed.list) {\n            clearPlaylist()\n            return\n        }\n\n        async function handleGetPlaylist() {\n            await playlistApi.index(parsed.list).then(res => {\n\n                let filmIndex = 0\n                let filmId = null\n\n                Array.prototype.forEach.call(res.data.films, (film, index) => {\n                    if (film && film.id === props.match.params.id) {\n                        filmIndex = index + 1\n                        filmId = film.id\n                    }\n                })\n\n                dispatch({\n                    type: 'success',\n                    playlist: res.data,\n                    currentFilm: filmId,\n                    currentFilmIndex: filmIndex\n                })\n                return res.data\n            }).catch(err => {\n                console.error(err)\n                clearPlaylist()\n            })\n        }\n        if (!error && filmState.isPreviewLoaded) handleGetPlaylist()\n    }, [props.match.params.id, location.search, error, filmState.isPreviewLoaded])\n\n\n    useEffect(() => {\n        async function removePlaylist() {\n            await playlistApi.remove(playlist.id)\n                .then(res => {\n                    clearPlaylist()\n                    clear()\n                })\n                .catch(err => {\n                    console.error(err)\n                    clear()\n                })\n        }\n        if (isRemovingPlaylist && removeModalData.isRemoving &&\n            removeModalData.id === playlist.id && removeModalData.type === 'playlist' &&\n            removeModalData.title === playlist.title) removePlaylist()\n    }, [clear, isRemovingPlaylist, playlist, removeModalData])\n\n\n    useEffect(() => {\n        async function removeFilm() {\n            await playlistApi.partialUpdate(playlist.id, { films_id: [removingFilmId], is_remove_films: true })\n                .then(res => {\n                    dispatch({\n                        type: 'remove-film-success'\n                    })\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n        }\n\n        if (isRemovingFilm) removeFilm()\n    }, [isRemovingFilm, playlist, removingFilmId])\n\n    const handleRemovePlaylist = () => {\n\n        if (removeModalData.isRemoving) return\n\n        dispatch({\n            type: 'field',\n            fieldName: 'isRemovingPlaylist',\n            payload: true\n        })\n\n        showModal(playlist.id, 'playlist', playlist.title)\n    }\n\n    const handleRemoveFromPlaylist = (id) => {\n        if (isRemovingFilm) return\n\n        dispatch({\n            type: 'remove-film',\n            payload: id\n        })\n    }\n\n\n    return (\n\n        playlist && playerHeight && !error &&\n        <Col className='mb-4'>\n            <Col className='p-0 border'>\n                <Col ref={headerRef}\n                    style={{ height: headerHeight + 'px' }}\n                    className=\"remove-container pt-2 pb-2 film-preview-playlist-header\" sm={12}>\n                    <Row className=\"m-0 px-2\">\n                        <Col className=\"film-preview-playlist-title-width\">\n                            <p className=\"mb-1 fw-bold film-preview-playlist-text-truncate\">{playlist.title}</p>\n                        </Col>\n                        <Col className=\"justify-content-end d-flex\">\n                            {\n                                user.id === playlist.author_id &&\n                                <RemoveButton handleRemove={() => handleRemovePlaylist()} />\n                            }\n                        </Col>\n                        <Col xs={12} sm={12}>\n                            {\n                                user.id === playlist.author_id &&\n                                <ChangePrivacyButton\n                                    id={playlist.id}\n                                    isPublic={playlist.is_public}\n                                    isProfile={false}\n                                    dispatchPrivacyUpdate={dispatch} />\n                            }\n                            {\n                                user.id === playlist.author_id && <small>&nbsp;</small>\n\n                            }\n                            <small>{playlist.author_name}&nbsp;</small>\n                            <small\n                                className=\"film-preview-playlist-index\">\n                                - {currentFilmIndex}/{playlist.films.length}\n                            </small>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col style={{ height: playerHeight - headerHeight + 'px' }}\n                    className=\"p-0 film-preview-playlist-container\" xs={12} sm={12}>\n                    <PerfectScrollbar\n                        onYReachEnd={() => { }}\n                        onScrollY={() => { }}>\n                        {\n                            playlist.films.map((film, index) => {\n                                return film && !film.isNonExisting ? (\n                                    <Row xs={12} sm={12} className=\"m-0 p-0 remove-container\" key={film.id}>\n                                        <Col xs={9} sm={9}\n                                            className={index === playlist.films.length - 1 ?\n                                                \"mt-3 mb-3 \" :\n                                                \"mt-3\"}\n                                            onClick={() => props.handleRedirect(film.id)} >\n                                            <Row className=\"m-0 p-0 play-outer-container\">\n                                                <Col xs={1} sm={1}\n                                                    className=\"text-center justify-content-center d-flex align-items-center p-0 ps-1\" >\n                                                    {\n                                                        (currentFilm === film.id) ?\n                                                            <small>\n                                                                <FontAwesomeIcon style={{ fontWeight: 300 }}\n                                                                    icon=\"play\" />\n                                                            </small>\n                                                            :\n                                                            <small>{index + 1}</small>\n\n                                                    }\n                                                </Col>\n                                                <Col xs={6} sm={6} className=\"pe-2 ps-2\"\n                                                    style={{\n                                                        display: 'flex',\n                                                        justifyContent: 'center',\n                                                        alignItems: 'center'\n                                                    }}>\n                                                    <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half w-100 play-container\">\n                                                        <BlurredImageComponent\n                                                            image={`${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`} />\n                                                    </div>\n                                                </Col>\n                                                <Col xs={5} sm={5} className=\"p-0\">\n                                                    <TextTruncate line={1} text={film.title}\n                                                        className=\"mb-0 title fw-bold\" />\n                                                    <p className=\"mb-1 author-nick-color\">\n                                                        <small>{film.author_name}</small>\n                                                    </p>\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        {\n                                            user.id === playlist.author_id &&\n                                            <Col className=\"d-flex align-items-center justify-content-center\">\n                                                <RemoveButton handleRemove={() => handleRemoveFromPlaylist(film.id)} />\n                                            </Col>\n                                        }\n\n                                    </Row>\n                                ) : (\n                                    <Row xs={12} sm={12} className=\"m-0 p-0 remove-container\" key={film.id}>\n                                        <Col xs={9} sm={9}\n                                            className={index === playlist.films.length - 1 ?\n                                                \"mt-3 mb-3 \" :\n                                                \"mt-3\"} >\n                                            <Row className=\"m-0 p-0\">\n                                                <Col xs={1} sm={1}\n                                                    className=\"text-center justify-content-center d-flex align-items-center p-0 ps-1\" >\n                                                    <small>{index + 1}</small>\n                                                </Col>\n                                                <Col xs={6} sm={6} className=\"pe-2 ps-2\"\n                                                    style={{\n                                                        display: 'flex',\n                                                        justifyContent: 'center',\n                                                        alignItems: 'center'\n                                                    }}>\n                                                    <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                                                        <img alt=\"\" className=\"embed-responsive-item play-image\"\n                                                            src={image_not_found} />\n                                                    </div>\n                                                </Col>\n                                                <Col xs={5} sm={5} className=\"p-0\">\n                                                    <TextTruncate line={2} text=\"Not found\"\n                                                        className=\"mb-0 title fw-bold\" />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        {\n                                            user.id === playlist.author_id &&\n                                            <Col className=\"d-flex align-items-center justify-content-center\">\n                                                <RemoveButton handleRemove={() => handleRemoveFromPlaylist(film.id)} />\n                                            </Col>\n                                        }\n\n                                    </Row>\n                                )\n                            })\n                        }\n                    </PerfectScrollbar>\n\n                </Col>\n            </Col>\n        </Col >\n\n\n    )\n}\n\n\nexport default Playlist\n","import { useReducer } from \"react\"\nimport FilmContext from \"./filmContext\"\n\nconst filmInitialState = {\n    isPreviewLoaded: false,\n    comments: null,\n    commentsCount: null,\n    playerHeight: null,\n    reloadPlaylist: false,\n    error: null\n}\n\nconst filmReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                isPreviewLoaded: true,\n                comments: action.comments,\n                commentsCount: action.commentsCount,\n                error: null\n            }\n        }\n        case 'reset-comments': {\n            return {\n                ...state,\n                comments: null,\n                commentsCount: null\n            }\n        }\n        default:\n            return state\n    }\n}\n\nconst FilmProvider = ({ children }) => {\n    const [filmState, filmDispatch] = useReducer(filmReducer, filmInitialState)\n\n\n    return (\n        <FilmContext.Provider value={[filmState, filmDispatch]}>\n            {children}\n        </FilmContext.Provider>\n    );\n}\n\nexport default FilmProvider","import React from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport queryString from \"query-string\";\n\nimport FilmPreview from './preview'\nimport { Row, Col } from \"react-bootstrap\";\nimport FilmsRecommendations from './recommendations';\nimport Comments from './comments';\nimport Playlist from './playlist';\nimport useWindowWidth from '../../helpers/hooks/useWindowsWidth'\n\nimport FilmProvider from '../../helpers/contexts/film/filmProvider'\nimport './film.css'\n\n\nfunction Film(props) {\n\n    let history = useHistory()\n    let location = useLocation()\n\n    const onSmallScreen = useWindowWidth();\n\n    const handleRedirect = (id) => {\n        const parsed = queryString.parse(location.search);\n        let historyObject = { pathname: `${process.env.REACT_APP_PATH_NAME}film/` + id }\n        if (parsed.list) historyObject = { ...historyObject, search: `?list=${parsed.list}` }\n        history.push(historyObject);\n    };\n\n    return (\n        <FilmProvider>\n            <Row className=\"p-0 m-0 mt-4 mx-2\">\n                <Col xs={{ span: 12, order: 'first' }} sm={8}>\n                    <FilmPreview {...props} />\n                    {!onSmallScreen && <Comments {...props} />}\n                </Col>\n                <Col xs={{ span: 12, order: 2 }} sm={4}>\n                    <Playlist handleRedirect={handleRedirect} {...props} />\n                    <FilmsRecommendations handleRedirect={handleRedirect} {...props} />\n                </Col>\n                {onSmallScreen &&\n                    <Col xs={{ span: 12, order: 'last' }} sm={8}>\n                        <Comments {...props} />\n                    </Col>\n                }\n            </Row>\n\n        </FilmProvider>\n    )\n}\n\nexport default Film"],"sourceRoot":""}