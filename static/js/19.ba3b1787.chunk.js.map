{"version":3,"sources":["components/dialogs/reset-password.js","pages/reset-password.js","components/input.js","reducers/auth-reducer.js"],"names":["ResetPassword","history","useHistory","token","useParams","useReducer","authReducer","authInitialState","state","dispatch","password","isSubmitted","isSending","isSuccess","isError","error","onSubmit","event","preventDefault","type","length","reset","then","res","setTimeout","push","process","catch","err","errorMessage","response","data","errors","payload","className","htmlFor","isInvalid","name","value","onChange","e","fieldName","target","id","title","onClose","Input","placeholder","inputRef","useRef","useEffect","current","classList","add","remove","ref","rows","email","nick","action"],"mappings":"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","file":"static/js/19.ba3b1787.chunk.js","sourcesContent":["import React, { useParams, useReducer } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authInitialState, authReducer } from '../../reducers/auth-reducer';\nimport { reset } from '../../services/authService';\nimport Input from '../input';\n\nconst ResetPassword = () => {\n\n    let history = useHistory()\n    let { token } = useParams();\n\n    const [state, dispatch] = useReducer(authReducer, authInitialState)\n\n    const { password, isSubmitted, isSending, isSuccess, isError, error } = state\n\n    const handleSubmitPasswordChange = (event) => {\n        event.preventDefault();\n\n        dispatch({ type: 'submit' })\n\n        if (token && password && password.length >= 6) {\n            dispatch({ type: 'send' })\n            return reset(token, { password: password })\n                .then(res => {\n                    dispatch({\n                        type: 'success'\n                    })\n\n                    setTimeout(function () {\n                        history.push(`${process.env.REACT_APP_PATH_NAME}`);\n                        setTimeout(function () {\n                            history.push(`${process.env.REACT_APP_PATH_NAME}login`);\n                        }, 500);\n                    }, 1500);\n\n                })\n                .catch(err => {\n                    let errorMessage = null;\n\n                    if (err.response && err.response.data && err.response.data.errors)\n                        errorMessage = err.response.data.errors;\n\n                    dispatch({\n                        type: 'error',\n                        payload: errorMessage\n                    })\n\n                })\n        }\n    }\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmitPasswordChange}>\n                <div className=\"form-group\">\n                    <label className=\"form-label\" htmlFor=\"password\">Password</label>\n                    <Input isInvalid={isSubmitted && (password.length < 6)}\n                        type=\"password\" name=\"password\" value={password}\n                        onChange={e => dispatch({ type: 'field', fieldName: 'password', payload: e.target.value })} />\n                    <div className=\"invalid-feedback\">\n                        {\n                            password.length === 0 ? \"Password is required\" : \"Password too short (min 6 chars)\"\n                        }\n                    </div>\n                </div>\n\n                <div className=\"d-flex align-items-center mt-2 form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Reset password\n                    </button>\n\n                    {\n                        isSending &&\n                        <div className=\"spinner-grow ml-2\" />\n                    }\n                </div>\n            </form>\n\n\n            {\n                isSuccess &&\n                <div className=\"alert alert-success mt-2\">\n                    Password has been reseated! Redirecting to login page.\n                </div>\n            }\n\n            {\n                isError &&\n                <div className=\"alert alert-danger mt-2\">\n                    {error ? error : 'Error while resetting password.'}\n                </div>\n            }\n        </>\n\n    );\n}\n\n\nexport default ResetPassword","import { useHistory } from 'react-router-dom';\n\nimport Modal from '../components/modal';\nimport ResetPasswordComponent from '../components/dialogs/reset-password';\n\nexport default function ResetPassword() {\n\n    let history = useHistory()\n\n    const modalClose = () => {\n        history.push(`${process.env.REACT_APP_PATH_NAME}`);\n    };\n\n    return (\n\n        <Modal id=\"resetPasswordModal\" title=\"Reset\" onClose={modalClose}>\n            <ResetPasswordComponent />\n        </Modal>\n\n\n    );\n}","import { useEffect, useRef } from \"react\"\n\nconst Input = ({ isInvalid, onChange, type, name, value, placeholder = '' }) => {\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        let ref = inputRef.current\n        if (ref) {\n            if (isInvalid) inputRef.current.classList.add('is-invalid')\n            else inputRef.current.classList.remove('is-invalid')\n        }\n    }, [isInvalid])\n\n    return type === 'textarea' ?\n        <textarea ref={inputRef} className=\"form-control\"\n            placeholder={placeholder}\n            type={type} name={name}\n            value={value} onChange={onChange} rows={8}/> :\n        <input ref={inputRef} className=\"form-control\"\n            placeholder={placeholder}\n            type={type} name={name}\n            value={value} onChange={onChange} />\n\n\n}\n\nexport default Input","\nexport const authInitialState = {\n    email: '',\n    nick: '',\n    password: '',\n    isSubmitted: false,\n    isSending: false,\n    isSuccess: false,\n    isError: false,\n    error: null\n}\n\nexport const authReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                isSubmitted: false,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'submit': {\n            return {\n                ...state,\n                isError: false,\n                error: null,\n                isSubmitted: true\n            }\n        }\n        case 'send': {\n            return {\n                ...state,\n                isSending: true\n            }\n        }\n        case 'success': {\n            return {\n\n                ...state,\n                isError: false,\n                error: null,\n                isSending: false,\n                isSuccess: true\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isSending: false,\n                isError: true,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}"],"sourceRoot":""}