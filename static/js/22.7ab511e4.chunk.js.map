{"version":3,"sources":["components/home/reducer.js","components/home/index.js","pages/home.js"],"names":["initialState","films","isLoading","isAllLoaded","isInitialLoaded","error","homePageReducer","state","action","type","fieldName","payload","Set","length","pageInitialMaxFetchCount","pageMaxFetchCount","Home","history","useHistory","useReducer","dispatch","handleOnHomePageData","useCallback","useBottomScrollListener","triggerOnNoScroll","useEffect","a","all","preview","limit","then","res","response","data","forEach","film","img","process","id","catch","err","console","fetchData","skip","getAllFilms","className","map","index","handleRedirect","push","pathname","Array","_","document","title"],"mappings":"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","file":"static/js/22.7ab511e4.chunk.js","sourcesContent":["import { pageInitialMaxFetchCount, pageMaxFetchCount } from \"../../config\"\n\nexport const initialState = {\n    films: null,\n    isLoading: false,\n    isAllLoaded: false,\n    isInitialLoaded: false,\n    error: null,\n}\n\nexport const homePageReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'load': {\n            return {\n                ...state,\n                isLoading: true,\n                isAllLoaded: false,\n                error: ''\n            }\n        }\n        case 'initial-load': { \n            return {\n                ...state,\n                films: [...new Set([...action.payload])],\n                isLoading: false,\n                isInitialLoaded: true,\n                isAllLoaded: action.payload.length < pageInitialMaxFetchCount,\n            }\n        }\n        case 'success': {\n            return {\n                ...state,\n                films: [...new Set([...state.films, ...action.payload])],\n                isLoading: false,\n                isAllLoaded: action.payload.length < pageMaxFetchCount,\n                error: null\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                isAllLoaded: false,\n                error: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}","import React, { useEffect, useReducer, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { homePageReducer, initialState } from './reducer';\n\nimport Film from '../film-row'\nimport Skeleton from '../../skeletons/film';\n\nimport { all } from '../../services/filmService'\n\nimport { pageMaxFetchCount, pageInitialMaxFetchCount } from '../../config';\n\nimport useBottomScrollListener from '../../hooks/use-bottom-scroll-listener';\n\n\nfunction Home() {\n\n    let history = useHistory()\n\n    const [state, dispatch] = useReducer(homePageReducer, initialState)\n    const { films, isLoading, isAllLoaded, isInitialLoaded } = state\n\n    const handleOnHomePageData = useCallback(() => {\n        if (!isLoading && !isAllLoaded && isInitialLoaded) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [isLoading, isAllLoaded, isInitialLoaded])\n\n    useBottomScrollListener(handleOnHomePageData, { triggerOnNoScroll: true })\n\n    useEffect(() => {\n        async function fetchData() {\n            await all({ preview: true, limit: pageInitialMaxFetchCount }).then(res => {\n                let response = res.data;\n\n                response.forEach(film => {\n                    film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`\n\n                });\n\n                dispatch({\n                    type: 'initial-load',\n                    payload: response\n                })\n            }).catch(err => console.error(err))\n        }\n        fetchData()\n    }, [])\n\n    useEffect(() => {\n        async function getAllFilms() {\n            await all({ preview: true, skip: films.length, limit: pageMaxFetchCount })\n                .then(res => {\n                    let response = res.data;\n\n                    response.forEach(film => {\n                        film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`\n\n                    });\n\n                    dispatch({\n                        type: 'success',\n                        payload: response\n                    })\n                }).catch(err => console.error(err))\n        }\n        if (isLoading && isInitialLoaded && films) getAllFilms()\n    }, [isLoading, isInitialLoaded, films])\n\n    const handleRedirect = (film) => {\n        history.push({ pathname: `${process.env.REACT_APP_PATH_NAME}film/` + film.id, state: { film } });\n    };\n\n    return (\n        <div className=\"row mt-5 mx-2\" id=\"homePage\">\n            {\n                films ? films.map((film, index) => <Film key={film.id}\n                    film={film} index={index} handleRedirect={() => handleRedirect(film)} />)\n                    : ([...Array(24)].map((_, index) => (\n                        <Skeleton key={index} />\n                    )))\n            }\n\n            {\n                !isAllLoaded && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {\n                        (isLoading) &&\n                        <div className=\"spinner-border\" />\n                    }\n                </div>\n            }\n\n        </div>\n    )\n}\n\nexport default Home;\n","import { useEffect } from \"react\"\n\nimport HomeComponent from '../components/home'\n\nexport default function Home() {\n    useEffect(() => {\n        document.title = \"FilmApp\"\n    }, [])\n\n    return <HomeComponent />\n}"],"sourceRoot":""}