{"version":3,"sources":["helpers/index.js","components/pages/search/reducer.js","components/pages/search/skeleton.js","components/pages/search/index.js"],"names":["displayCommentDate","comment","date","Date","parse","createdAt","getDate","slice","getMonth","getFullYear","getHours","getMinutes","parseSearchDate","film","today","time","Math","abs","floor","UTC","searchInitialState","films","isLoading","isAllFetched","isInitialLoaded","error","search","filter","sort","dir","sorts","id","title","searchReducer","state","action","type","fieldName","payload","length","pageMaxFetchCount","params","resetSort","map","SearchSkeleton","className","style","lineHeight","filters","Search","isSmallScreen","useWindowsWidth","history","useHistory","location","useLocation","useReducer","dispatch","useState","isOpen","setIsOpen","handleSearchOnBottom","useCallback","useBottomScrollListener","useEffect","searchParams","queryString","a","filmApi","limit","then","res","data","catch","err","console","getFilms","skip","handleOnclick","filterClick","sortClick","dirClick","tmpType","push","onClick","cursor","icon","faFilter","filterTmp","fontWeight","fontSize","sortTmp","index","img","process","isSearch","handleRedirect","filmID","Truncate","lines","author_name","views","line","text","description","Array","_"],"mappings":"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","file":"static/js/17.e3438041.chunk.js","sourcesContent":["export const checkIfPlaylistButtonClick = (target) => {\n    if ((target.tagName === 'path' && target.parentNode.className.animVal && target.parentNode.className.animVal.includes('playlist-add-icon')) ||\n        (target.tagName === 'svg' && target.className.animVal && target.className.animVal.includes('playlist-add-icon')) ||\n        (target.className && typeof target.className === 'string' && target.className.includes('playlist-add-icon-holder')))\n        return true\n    return false\n}\n\nexport const displayCommentDate = (comment) => {\n    let date = new Date(Date.parse(comment.createdAt));\n    let time = (('0' + date.getDate()).slice(-2) + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-'\n        + ('0' + date.getFullYear()).slice(-2)\n        + ' o ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2))\n    return time;\n};\n\nexport const parseSearchDate = (film) => {\n\n    let date = new Date(Date.parse(film.createdAt));\n    let today = new Date();\n\n\n    let time = Math.abs(Math.floor((\n        Date.UTC(\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes()) -\n        Date.UTC(\n            today.getFullYear(),\n            today.getMonth(),\n            today.getDate(),\n            today.getHours(),\n            today.getMinutes()))\n        / (1000 * 60)));\n\n    if (time / 60 >= 1) {\n        time /= 60;\n\n        if (time / 24 >= 1) {\n\n            time /= 24;\n\n            if (time / 30 >= 1) {\n\n                time /= 30;\n\n                if (time / 12 >= 1) {\n\n                    time = time / 12;\n                    time = Math.floor(time) + ' years ';\n\n                } else {\n                    time = Math.floor(time) + ' months ';\n                }\n\n            } else {\n                time = Math.floor(time) + ' days ';\n            }\n\n        } else {\n            time = Math.floor(time) + ' hours ';\n        }\n    } else {\n        time = Math.floor(time) + ' minutes ';\n    }\n\n    time = time + 'ago';\n\n    return time;\n};\n","import { pageMaxFetchCount } from \"../../../config\"\n\nexport const searchInitialState = {\n    films: null,\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    error: null,\n    search: '',\n    filter: '',\n    sort: '',\n    dir: 1,\n    sorts: [\n        { id: 'upload_date', title: 'Upload date', dir: 1 },\n        { id: 'view_count', title: 'View count', dir: 1 },\n        { id: 'rating', title: 'Rating', dir: 1 },\n    ]\n\n}\n\nexport const searchReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                isLoading: false,\n                isInitialLoaded: true,\n                error: null,\n                isAllFetched: action.payload.films.length < pageMaxFetchCount,\n                films: action.payload.films,\n                search: action.payload.params.search,\n                sort: action.payload.params.sort,\n                filter: action.payload.params.filter,\n                dir: action.payload.params.dir,\n\n            }\n        }\n        case 'load': {\n            return !state.isLoading && !state.isAllFetched && state.isInitialLoaded && !state.error ? {\n                ...state,\n                isLoading: true,\n            } : state\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n                isAllFetched: action.payload.length < pageMaxFetchCount,\n                films: [...state.films, ...action.payload],\n            }\n        }\n        case 'sorts-change': {\n            return {\n                ...state,\n                sort: action.resetSort ? '' : state.sort,\n                sorts: state.sorts.map(sort => {\n                    if (sort.id === action.payload.id) return action.payload\n                    else return sort\n                })\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                error: true,\n            }\n        }\n        default: return state\n    }\n}\n","import Skeleton from 'react-loading-skeleton';\n\nconst SearchSkeleton = () => {\n\n\n    return (\n\n        <div className=\"col-12 col-sm-12 col-lg-8 m-0 mb-1\">\n            <div className=\"row mb-4 m-0\">\n                <div className=\"col-8 col-sm-4 p-0\">\n                    <div className=\"ratio ratio-16x9\">\n                        <Skeleton className=\"w-100 h-100\" style={{ lineHeight: '1.5' }} />\n                    </div>\n                </div>\n                <div className=\"col-4 col-sm-8\">\n                    <div className=\"col-12 col-sm-12 p-0 pb-1 h-25\">\n                        <Skeleton className=\"w-100 h-100\" style={{ lineHeight: '1.5' }} />\n                    </div>\n                    <div className=\"col-12 col-sm-12 h-75 pt-1\">\n                        <Skeleton className=\"w-100 h-100\" style={{ lineHeight: '1.5' }} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchSkeleton","import React, { useEffect, useReducer, useState, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\nimport queryString from 'query-string';\nimport TextTruncate from \"react-text-truncate\";\nimport Truncate from \"react-truncate\";\n\nimport { searchReducer, searchInitialState } from './reducer'\n\nimport * as filmApi from '../../../services/filmService'\n\nimport { pageMaxFetchCount } from '../../../config';\n\nimport { parseSearchDate } from '../../../helpers'\nimport useBottomScrollListener from '../../../helpers/hooks/useBottomScrollListener';\nimport RippleButton from '../../helpers/rippleButton';\n\nimport \"./search.css\";\n\nimport FilmSkeleton from '../../helpers/film/skeleton';\nimport SearchSkeleton from './skeleton';\n\nimport useWindowsWidth from '../../../helpers/hooks/useWindowsWidth';\nimport Film from '../../helpers/film';\n\nlet filters = [\n    { id: 'last_hour', title: 'Last hour' },\n    { id: 'today', title: 'Today' },\n    { id: 'this_week', title: 'This week' },\n    { id: 'this_month', title: 'This month' },\n    { id: 'this_year', title: 'This year' },\n];\n\nconst Search = () => {\n\n    const isSmallScreen = useWindowsWidth(576);\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const [state, dispatch] = useReducer(searchReducer, searchInitialState)\n\n    const { films, isLoading, isAllFetched, search, sort, filter, dir, sorts, error, isInitialLoaded } = state\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const handleSearchOnBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && !error && isInitialLoaded) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [error, isAllFetched, isInitialLoaded, isLoading])\n\n    useBottomScrollListener(handleSearchOnBottom)\n\n    useEffect(() => {\n\n        let searchParams = queryString.parse(location.search);\n\n        const params = {\n            search: searchParams.title,\n            sort: searchParams.sort ?? '',\n            filter: searchParams.filter ?? '',\n            dir: searchParams.dir ?? 1\n        }\n\n        function getSearchedFilms() {\n            dispatch({\n                type: 'initial-success',\n                payload: { films: location.state.films, params: params }\n            })\n        }\n\n        async function getFilms() {\n            await filmApi.search({ ...params, limit: pageMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'initial-success',\n                        payload: { films: res.data, params: params }\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                    console.error(err)\n                })\n        }\n\n        if (location.state && location.state.films) getSearchedFilms()\n        else getFilms()\n\n    }, [location])\n\n    useEffect(() => {\n        async function getFilms() {\n            await filmApi.search({\n                search: search,\n                sort: sort,\n                filter: filter,\n                dir: dir,\n                skip: films.length,\n                limit: pageMaxFetchCount\n            })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                    console.error(err)\n                })\n        }\n\n        if (isLoading) getFilms()\n\n    }, [dir, films, filter, isLoading, search, sort])\n\n    const setRedirect = (filmID) => {\n        history.push(`${process.env.REACT_APP_PATH_NAME}film/` + filmID);\n    };\n\n\n    const handleOnclick = (state, type) => {\n\n        let filterClick = filter;\n        let sortClick = sort;\n        let dirClick = dir;\n\n\n        if (state === 'filter') {\n            if (filterClick === type.id) {\n                filterClick = '';\n            } else {\n                filterClick = type.id;\n            }\n        } else {\n            let tmpType = type;\n\n            if (sortClick === type.id) {\n                sortClick = type.id;\n\n\n                if (tmpType.dir === 1) {\n                    tmpType.dir = -1;\n                    dirClick = type.dir;\n                } else if (tmpType.dir === -1) {\n                    tmpType.dir = 1;\n                    sortClick = '';\n                }\n\n                dispatch({\n                    type: 'sorts-change',\n                    payload: tmpType,\n                    resetSort: sortClick === ''\n                })\n\n                dirClick = type.dir\n\n            } else {\n                sortClick = type.id;\n                dirClick = type.dir;\n            }\n\n        }\n\n\n        if (sortClick !== '' && filterClick !== '') {\n            history.push({\n                search: `?title=${search}&sort=${sortClick}&dir=${dirClick}&filter=${filterClick}`,\n            });\n\n        } else if (sortClick === '' && filterClick !== '') {\n            history.push({\n                search: `?title=${search}&filter=${filterClick}`,\n            });\n        } else if (sortClick !== '' && filterClick === '') {\n            history.push({\n                search: `?title=${search}&sort=${sortClick}&dir=${dirClick}`,\n            });\n        } else if (sortClick === '' && filterClick === '') {\n            history.push({\n                search: `?title=${search}`,\n            });\n        }\n\n    };\n\n    return (\n        <>\n            <RippleButton className=\"mt-3 mx-4 search-button p-0\"\n                onClick={() => setIsOpen(!isOpen)}>\n                <div\n                    aria-controls=\"filter-collapse\"\n                    aria-expanded={isOpen}\n                    data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#searchCollapse\"\n                    className=\"px-4 py-2\">\n                    <FontAwesomeIcon style={{ cursor: \"pointer\" }} icon={faFilter} />\n                </div>\n            </RippleButton>\n            <div className=\"collapse\" id=\"searchCollapse\">\n                <div id=\"filter-collapse\" className=\"row mx-2\">\n                    <div className=\"col-12 col-sm-4 mt-4\">\n                        <p style={{ 'fontWeight': 500 }}>UPLOAD DATE</p>\n\n                        <div className=\"col-12 col-sm-8 mt-3 mb-3 divider\" />\n\n                        {\n                            filters.map((filterTmp) => {\n                                return (<p key={filterTmp.id} style={filter === filterTmp.id ?\n                                    { fontWeight: 700, fontSize: 80 + '%' } :\n                                    { fontWeight: 400, fontSize: 80 + '%' }}\n                                    onClick={() => handleOnclick('filter', filterTmp)}\n                                    className=\"search-filter\">{filterTmp.title}</p>)\n                            })\n                        }\n\n                    </div>\n\n                    <div className=\"col-12 col-sm-4 mt-4\">\n                        <p style={{ 'fontWeight': 500 }}>SORT BY</p>\n\n                        <div className=\"col-12 col-sm-8 mt-3 mb-3 divider\" />\n\n                        {\n                            sorts.map((sortTmp) => {\n                                return (<div key={sortTmp.id} className=\"col d-flex\">\n                                    <p style={sort === sortTmp.id ?\n                                        { fontWeight: 700, fontSize: 80 + '%' } :\n                                        { fontWeight: 400, fontSize: 80 + '%' }}\n                                        onClick={() => handleOnclick('sort', sortTmp)}\n                                        className=\"search-filter\">{sortTmp.title}\n                                    </p>\n                                    {sort === sortTmp.id && sortTmp.dir === 1 ?\n                                        <FontAwesomeIcon className=\"ms-2\" icon=\"sort-up\" /> :\n                                        sort === sortTmp.id && sortTmp.dir === -1 ?\n                                            <FontAwesomeIcon className=\"ms-2\" icon=\"sort-down\" /> : \"\"}\n                                </div>)\n                            })\n                        }\n\n                    </div>\n\n                </div>\n            </div>\n\n            <div className=\"col-12 mt-2 mb-3 divider\" />\n\n            <div className=\"row mx-2 mt-4\">\n                {\n                    films ? films.map((film, index) => {\n                        const time = parseSearchDate(film);\n                        film.img = `${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail`\n                        return <Film isSearch={true} key={film.id}\n                            film={film} index={index}\n                            handleRedirect={() => setRedirect(film.id)} >\n                            <div className=\"col\">\n                                <Truncate lines={1}\n                                    className=\"mb-0 search-title fw-bold\">\n                                    {film.title}\n                                </Truncate>\n                            </div>\n                            <p className=\"d-none d-sm-inline mb-1 author-nick-search\">\n                                <span>{film.author_name} &#183; {film.views} views &#183; {time}</span>\n                            </p>\n\n                            <p className=\"d-inline d-sm-none mb-0 author-nick\">\n                                <span>{film.author_name} &#183; {film.views} views</span>\n                            </p>\n\n                            <span className=\"d-none d-sm-inline  author-nick-search\">\n                                <TextTruncate className=\"mb-0\"\n                                    line={2} text={film.description} />\n                            </span>\n                        </Film>\n                    })\n                        : ([...Array(20)].map((_, index) => isSmallScreen ? (\n                            <FilmSkeleton key={index} />) : (<SearchSkeleton key={index} />)\n                        ))\n                }\n\n            </div>\n\n            {\n                !isAllFetched && <div className=\"fetch-loader d-flex justify-content-center\">\n                    {\n                        (isLoading) &&\n                        <div className=\"spinner-border\" />\n                    }\n                </div>\n            }\n        </>\n\n    )\n}\n\nexport default Search\n"],"sourceRoot":""}