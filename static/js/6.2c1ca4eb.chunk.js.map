{"version":3,"sources":["components/searchPage/reducer.js","components/searchPage/index.js"],"names":["searchInitialState","films","isLoading","isAllFetched","isInitialLoaded","error","search","filter","sort","dir","sorts","id","title","searchReducer","state","action","type","fieldName","payload","length","pageMaxFetchCount","params","resetSort","map","filters","Search","props","history","useHistory","location","useLocation","useReducer","dispatch","useState","isOpen","setIsOpen","handleSearchOnBottom","useCallback","useBottomScrollListener","useEffect","searchParams","queryString","parse","a","filmApi","limit","then","res","data","catch","err","console","getFilms","skip","handleOnclick","filterClick","sortClick","dirClick","tmpType","push","Button","onClick","className","style","cursor","icon","faFilter","Collapse","in","Row","Col","sm","filterTmp","fontWeight","fontSize","sortTmp","film","index","time","parseSearchDate","xs","lg","e","filmID","checkIfPlaylistButtonClick","target","process","image","flex","width","Truncate","lines","author_name","views","line","text","description","height","Spinner","animation"],"mappings":"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","file":"static/js/6.2c1ca4eb.chunk.js","sourcesContent":["import { pageMaxFetchCount } from \"../../config\"\n\nexport const searchInitialState = {\n    films: [],\n    isLoading: false,\n    isAllFetched: false,\n    isInitialLoaded: false,\n    error: null,\n    search: '',\n    filter: '',\n    sort: '',\n    dir: 1,\n    sorts: [\n        { id: 'upload_date', title: 'Upload date', dir: 1 },\n        { id: 'view_count', title: 'View count', dir: 1 },\n        { id: 'rating', title: 'Rating', dir: 1 },\n    ]\n\n}\n\nexport const searchReducer = (state, action) => {\n    switch (action.type) {\n        case 'field': {\n            return {\n                ...state,\n                [action.fieldName]: action.payload\n            }\n        }\n        case 'initial-success': {\n            return {\n                ...state,\n                isLoading: false,\n                isInitialLoaded: true,\n                error: null,\n                isAllFetched: action.payload.films.length < pageMaxFetchCount,\n                films: action.payload.films,\n                search: action.payload.params.search,\n                sort: action.payload.params.sort,\n                filter: action.payload.params.filter,\n                dir: action.payload.params.dir,\n\n            }\n        }\n        case 'load': {\n            return !state.isLoading && !state.isAllFetched && state.isInitialLoaded && !state.error ? {\n                ...state,\n                isLoading: true,\n            } : state\n        }\n        case 'load-success': {\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n                isAllFetched: action.payload.length < pageMaxFetchCount,\n                films: [...state.films, ...action.payload],\n            }\n        }\n        case 'sorts-change': {\n            return {\n                ...state,\n                sort: action.resetSort ? '' : state.sort,\n                sorts: state.sorts.map(sort => {\n                    if (sort.id === action.payload.id) return action.payload\n                    else return sort\n                })\n            }\n        }\n        case 'error': {\n            return {\n                ...state,\n                isLoading: false,\n                error: true,\n            }\n        }\n        default: return state\n    }\n}\n","import React, { useEffect, useReducer, useState, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { Col, Collapse, Row, Spinner } from 'react-bootstrap';\n\nimport \"./search.css\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Button from '@material-ui/core/Button';\n\nimport queryString from 'query-string';\n\nimport TextTruncate from \"react-text-truncate\";\nimport Truncate from \"react-truncate\";\n\nimport PlaylistAddButtonComponent from '../add/playlistAddButton';\n\n\nimport { parseSearchDate, checkIfPlaylistButtonClick } from '../../helpers'\nimport * as filmApi from '../../services/filmService'\nimport useBottomScrollListener from '../../helpers/hooks/useBottomScrollListener';\n\nimport BlurredImageComponent from '../blurredImage'\n\nimport { searchReducer, searchInitialState } from './reducer'\nimport { pageMaxFetchCount } from '../../config';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\n\nlet filters = [\n    { id: 'last_hour', title: 'Last hour' },\n    { id: 'today', title: 'Today' },\n    { id: 'this_week', title: 'This week' },\n    { id: 'this_month', title: 'This month' },\n    { id: 'this_year', title: 'This year' },\n];\n\nconst Search = (props) => {\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const [state, dispatch] = useReducer(searchReducer, searchInitialState)\n\n    const { films, isLoading, isAllFetched, search, sort, filter, dir, sorts, error, isInitialLoaded } = state\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const handleSearchOnBottom = useCallback(() => {\n        if (!isLoading && !isAllFetched && !error && isInitialLoaded) {\n            dispatch({\n                type: 'load'\n            })\n        }\n    }, [error, isAllFetched, isInitialLoaded, isLoading])\n\n    useBottomScrollListener(handleSearchOnBottom)\n\n    useEffect(() => {\n\n        let searchParams = queryString.parse(location.search);\n\n        const params = {\n            search: searchParams.title,\n            sort: searchParams.sort ?? '',\n            filter: searchParams.filter ?? '',\n            dir: searchParams.dir ?? 1\n        }\n\n        function getSearchedFilms() {\n            dispatch({\n                type: 'initial-success',\n                payload: { films: location.state.films, params: params }\n            })\n        }\n\n        async function getFilms() {\n            await filmApi.search({ ...params, limit: pageMaxFetchCount })\n                .then(res => {\n                    dispatch({\n                        type: 'initial-success',\n                        payload: { films: res.data, params: params }\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                    console.error(err)\n                })\n        }\n\n        if (location.state && location.state.films) getSearchedFilms()\n        else getFilms()\n\n    }, [location])\n\n    useEffect(() => {\n        async function getFilms() {\n            await filmApi.search({\n                search: search,\n                sort: sort,\n                filter: filter,\n                dir: dir,\n                skip: films.length,\n                limit: pageMaxFetchCount\n            })\n                .then(res => {\n                    dispatch({\n                        type: 'load-success',\n                        payload: res.data\n                    })\n                })\n                .catch(err => {\n                    dispatch({\n                        type: 'error'\n                    })\n                    console.error(err)\n                })\n        }\n\n        if (isLoading) getFilms()\n\n    }, [dir, films.length, filter, isLoading, search, sort])\n\n    const setRedirect = (e, filmID) => {\n        history.push(`${process.env.REACT_APP_PATH_NAME}film/` + filmID);\n    };\n\n\n    const handleOnclick = (state, type) => {\n\n        let filterClick = filter;\n        let sortClick = sort;\n        let dirClick = dir;\n\n\n        if (state === 'filter') {\n            if (filterClick === type.id) {\n                filterClick = '';\n            } else {\n                filterClick = type.id;\n            }\n        } else {\n            let tmpType = type;\n\n            if (sortClick === type.id) {\n                sortClick = type.id;\n\n\n                if (tmpType.dir === 1) {\n                    tmpType.dir = -1;\n                    dirClick = type.dir;\n                } else if (tmpType.dir === -1) {\n                    tmpType.dir = 1;\n                    sortClick = '';\n                }\n\n                dispatch({\n                    type: 'sorts-change',\n                    payload: tmpType,\n                    resetSort: sortClick === ''\n                })\n\n                dirClick = type.dir\n\n            } else {\n                sortClick = type.id;\n                dirClick = type.dir;\n            }\n\n        }\n\n\n        if (sortClick !== '' && filterClick !== '') {\n            history.push({\n                search: `?title=${search}&sort=${sortClick}&dir=${dirClick}&filter=${filterClick}`,\n            });\n\n        } else if (sortClick === '' && filterClick !== '') {\n            history.push({\n                search: `?title=${search}&filter=${filterClick}`,\n            });\n        } else if (sortClick !== '' && filterClick === '') {\n            history.push({\n                search: `?title=${search}&sort=${sortClick}&dir=${dirClick}`,\n            });\n        } else if (sortClick === '' && filterClick === '') {\n            history.push({\n                search: `?title=${search}`,\n            });\n        }\n\n    };\n\n    return (\n        <>\n            <Button\n                onClick={() => setIsOpen(!isOpen)}\n                aria-controls=\"filter-collapse\"\n                aria-expanded={isOpen}\n                className=\"mt-3 mx-3 p-2 m-button\">\n                <FontAwesomeIcon style={{ cursor: \"pointer\" }} icon={faFilter} />\n            </Button>\n\n            <Collapse in={isOpen}>\n                <Row id=\"filter-collapse\" className=\"mx-2\">\n                    <Col className=\"mt-4\" sm={4}>\n                        <p style={{ 'fontWeight': 500 }}>UPLOAD DATE</p>\n\n                        <Col sm={8} className=\"mt-3 mb-3 divider\" />\n\n\n                        {\n                            filters.map((filterTmp) => {\n                                return (<p key={filterTmp.id} style={filter === filterTmp.id ?\n                                    { fontWeight: 700, fontSize: 80 + '%' } :\n                                    { fontWeight: 400, fontSize: 80 + '%' }}\n                                    onClick={() => handleOnclick('filter', filterTmp)}\n                                    className=\"search-filter\">{filterTmp.title}</p>)\n                            })\n                        }\n\n                    </Col>\n\n                    <Col className=\"mt-4\" sm={4}>\n                        <p style={{ 'fontWeight': 500 }}>SORT BY</p>\n\n                        <Col sm={8} className=\"mt-3 mb-3 divider\" />\n\n                        {\n                            sorts.map((sortTmp) => {\n                                return (<Col key={sortTmp.id} className=\"d-flex\">\n                                    <p style={sort === sortTmp.id ?\n                                        { fontWeight: 700, fontSize: 80 + '%' } :\n                                        { fontWeight: 400, fontSize: 80 + '%' }}\n                                        onClick={() => handleOnclick('sort', sortTmp)}\n                                        className=\"search-filter\">{sortTmp.title}\n                                    </p>\n                                    {sort === sortTmp.id && sortTmp.dir === 1 ?\n                                        <FontAwesomeIcon className=\"ms-2\" icon=\"sort-up\" /> :\n                                        sort === sortTmp.id && sortTmp.dir === -1 ?\n                                            <FontAwesomeIcon className=\"ms-2\" icon=\"sort-down\" /> : \"\"}\n                                </Col>)\n                            })\n                        }\n\n                    </Col>\n\n                </Row>\n            </Collapse>\n\n            <Col sm={12} className=\"mt-2 mb-3 divider\" />\n\n            <Row className=\"mx-2 mt-4\">\n                {\n                    films.map((film, index) => {\n                        const time = parseSearchDate(film);\n\n                        return <Col xs={12} sm={12} lg={8}\n                            key={film.id}>\n                            <Col className=\"play-outer-container m-0 mb-1\"\n                                onClick={(e) => {\n                                    const isPlaylistButton = checkIfPlaylistButtonClick(e.target)\n                                    if (!isPlaylistButton) setRedirect(e, film.id)\n\n\n                                }} >\n                                <Row className=\"search-style mb-4 m-0\">\n                                    <Col xs={8} sm={4} className=\"p-0\">\n                                        <div className=\"embed-responsive embed-responsive-16by9 z-depth-1-half play-container\">\n                                            <BlurredImageComponent\n                                                image={`${process.env.REACT_APP_API_URL}films/${film.id}/thumbnail?width=small_webp`} />\n                                            <FontAwesomeIcon className=\"play-middle\" icon=\"play\" />\n                                        </div>\n                                    </Col>\n                                    <Col xs={4} sm={8}>\n                                        <Row className=\"m-0\">\n                                            <Col className=\"p-0 mb-1\"\n                                                style={{\n                                                    flex: '0 0 auto !important',\n                                                    width: 'calc(83.33333333% - 24px) !important'\n                                                }}>\n                                                <Truncate lines={1}\n                                                    className=\"mb-0 search-title fw-bold\">\n                                                    {film.title}\n                                                </Truncate>\n                                            </Col>\n                                            <Col className=\"d-flex justify-content-end\">\n                                                <PlaylistAddButtonComponent\n                                                    index={index}\n                                                    filmID={film.id} />\n                                            </Col>\n                                        </Row>\n                                        <p className=\"d-none d-sm-inline mb-1 author-nick-search\">\n                                            <small>{film.author_name} &#183; {film.views} views &#183; {time}</small>\n                                        </p>\n\n                                        <p className=\"d-inline d-sm-none mb-0 author-nick-color\">\n                                            <small>{film.author_name} &#183; {film.views} views</small>\n                                        </p>\n\n                                        <small className=\"d-none d-sm-inline\">\n                                            <TextTruncate className=\"mb-0 author-nick-search\"\n                                                line={2} text={film.description} />\n                                        </small>\n\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Col>\n                    })\n                }\n\n            </Row>\n\n            {\n                !isAllFetched && <div style={{ height: 32 + 'px', width: '100%' }} className=\"d-flex justify-content-center\">\n                    {(isLoading || !isInitialLoaded) && <Spinner animation=\"border\" />}\n                </div>\n            }\n        </>\n\n    )\n}\n\nexport default Search\n"],"sourceRoot":""}